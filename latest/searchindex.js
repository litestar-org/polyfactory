Search.setIndex({"docnames": ["changelog", "contribution-guide", "getting-started", "index", "migration_guide/index", "reference/constants", "reference/decorators", "reference/exceptions", "reference/factories/attrs_factory", "reference/factories/base", "reference/factories/beanie_odm_factory", "reference/factories/dataclass_factory", "reference/factories/index", "reference/factories/msgspec_factory", "reference/factories/odmantic_odm_factory", "reference/factories/pydantic_factory", "reference/factories/sqlalchemy_factory", "reference/factories/typed_dict_factory", "reference/field_meta", "reference/fields", "reference/index", "reference/persistence", "reference/pytest_plugin", "reference/value_generators/complex_types", "reference/value_generators/constrained_collections", "reference/value_generators/constrained_dates", "reference/value_generators/constrained_numbers", "reference/value_generators/constrained_strings", "reference/value_generators/index", "reference/value_generators/primitives", "releases", "usage/configuration", "usage/declaring_factories", "usage/decorators", "usage/fields", "usage/fixtures", "usage/handling_custom_types", "usage/index", "usage/library_factories/index", "usage/library_factories/sqlalchemy_factory", "usage/model_coverage"], "filenames": ["changelog.rst", "contribution-guide.rst", "getting-started.rst", "index.rst", "migration_guide/index.rst", "reference/constants.rst", "reference/decorators.rst", "reference/exceptions.rst", "reference/factories/attrs_factory.rst", "reference/factories/base.rst", "reference/factories/beanie_odm_factory.rst", "reference/factories/dataclass_factory.rst", "reference/factories/index.rst", "reference/factories/msgspec_factory.rst", "reference/factories/odmantic_odm_factory.rst", "reference/factories/pydantic_factory.rst", "reference/factories/sqlalchemy_factory.rst", "reference/factories/typed_dict_factory.rst", "reference/field_meta.rst", "reference/fields.rst", "reference/index.rst", "reference/persistence.rst", "reference/pytest_plugin.rst", "reference/value_generators/complex_types.rst", "reference/value_generators/constrained_collections.rst", "reference/value_generators/constrained_dates.rst", "reference/value_generators/constrained_numbers.rst", "reference/value_generators/constrained_strings.rst", "reference/value_generators/index.rst", "reference/value_generators/primitives.rst", "releases.rst", "usage/configuration.rst", "usage/declaring_factories.rst", "usage/decorators.rst", "usage/fields.rst", "usage/fixtures.rst", "usage/handling_custom_types.rst", "usage/index.rst", "usage/library_factories/index.rst", "usage/library_factories/sqlalchemy_factory.rst", "usage/model_coverage.rst"], "titles": ["Changelog", "Contributing", "Getting Started", "Sponsors", "Migration Guide", "constants", "decorators", "exceptions", "attrs_factory", "base_factory", "beanie_odm_factory", "dataclass_factory", "factories", "msgspec_factory", "odmantic_odm_factory", "pydantic_factory", "sqlalchemy_factory", "typed_dict_factory", "field_meta", "fields", "API Reference", "persistence", "pytest_plugin", "complex_types", "constrained_collections", "constrained_dates", "constrained_numbers", "constrained_strings", "value_generators", "primitives", "Polyfactory Releases", "Factory Configuration", "Declaring Factories", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">post_generated</span></code> decorator", "Factory Fields", "Pytest fixtures", "Handling Custom Types", "Usage Guide", "Polyfactory Factories", "SQLAlchemyFactory", "Model coverage generation"], "terms": {"all": [0, 1, 4, 8, 9, 10, 11, 13, 14, 15, 16, 17, 30, 31, 33, 34, 38, 39, 40], "commit": [0, 1, 39], "thi": [0, 1, 2, 4, 5, 8, 9, 13, 14, 15, 16, 18, 19, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "project": [0, 3], "file": [0, 1], "see": [0, 3, 31, 40], "63eaa9f": 0, "ff9148a": 0, "diff": 0, "0358ad0": 0, "pydant": [0, 3, 15, 26, 27, 32, 38], "factori": [0, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 33, 35, 37, 39, 40], "alia": [0, 10, 15, 32], "gener": [0, 1, 2, 3, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 23, 24, 25, 26, 29, 31, 32, 33, 34, 36, 37, 39], "from": [0, 2, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 22, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40], "version": [0, 1, 2, 4, 32], "718": 0, "sandre35": 0, "81bfbc2": 0, "remov": [0, 30], "associ": 0, "proxi": [0, 9], "default": [0, 9, 15, 18, 34, 36, 39], "chang": [0, 1, 2, 30, 31, 39], "747": 0, "adhtruong": 0, "updat": [0, 3, 4], "prepar": 0, "sh": 0, "7eec41": 0, "add": [0, 1, 9, 26, 31], "migrat": [0, 30], "guid": 0, "704": 0, "ae7cb36": 0, "bump": [0, 1], "action": [0, 1], "checkout": [0, 38], "740": 0, "dependabot": 0, "bot": 0, "0c610f1": 0, "amannn": 0, "semant": [0, 1, 30, 34], "pull": [0, 1], "request": [0, 1], "741": 0, "5e605dc": 0, "download": 0, "artifact": 0, "739": 0, "62d92c9": 0, "github": [0, 1, 3], "script": 0, "743": 0, "16d847b": 0, "setup": [0, 1], "python": [0, 5, 26, 39], "742": 0, "572a47c": 0, "codeown": 0, "749": 0, "1b26034": 0, "codeql": 0, "756": 0, "5ec0b01": 0, "astral": 0, "uv": [0, 1], "755": 0, "c87481a": 0, "unus": 0, "716": 0, "a14ac7f": 0, "6dcd191": 0, "handl": [0, 15, 23, 26, 27, 37], "737": 0, "8e14c35": 0, "allow": [0, 9, 13, 14, 15, 16, 19, 22, 34, 39], "specifi": [0, 31, 32], "forward": [0, 8], "refer": [0, 36], "when": [0, 1, 7, 9, 15, 30, 31, 33, 34, 35, 36, 40], "string": [0, 8, 18, 27, 29, 36], "735": 0, "738": 0, "f270b0f": 0, "90d372c": 0, "recurs": [0, 23, 31, 40], "type": [0, 2, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 31, 32, 34, 35, 37, 38], "us": [0, 1, 2, 4, 5, 7, 9, 10, 15, 16, 18, 19, 22, 26, 30, 32, 33, 35, 36, 37, 39, 40], "forwardref": 0, "728": 0, "9fa5c66": 0, "deprec": [0, 4], "error": [0, 7, 9, 16, 40], "silenc": 0, "overridden": [0, 39], "724": 0, "732": 0, "203310b": 0, "94eb1bf": 0, "ad": [0, 30, 38], "inherit": [0, 1], "child": 0, "class": [0, 2, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 26, 31, 32, 33, 34, 35, 36, 38, 39, 40], "parent": [0, 9, 32], "706": 0, "rub1kcub": 0, "dbcf79d": 0, "correct": 0, "collect": [0, 3, 9, 15, 18, 24, 39], "size": [0, 1, 9, 19, 31, 34], "annotation_typ": 0, "len": [0, 31, 32, 34, 36, 40], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 26, 30, 31, 32, 33, 34, 35, 36, 39, 40], "712": 0, "priyankc": 0, "216b8a5": 0, "No": 0, "blank": 0, "children": [0, 15, 18], "name": [0, 2, 9, 15, 18, 19, 22, 31, 32, 33, 34, 35, 39], "666": 0, "iloveitali": 0, "3b541b6": 0, "marcuslimdw": 0, "contributor": 0, "code": [0, 3, 15, 36], "699": 0, "allcontributor": 0, "a34e7d3": 0, "708": 0, "5de22fa": 0, "usag": [0, 3, 4, 34, 39], "model": [0, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 22, 31, 32, 37, 38, 39], "contain": [0, 1, 18, 20, 23, 37, 40], "698": 0, "c7a7b44": 0, "pep": [0, 1], "695": 0, "support": [0, 2, 3, 8, 9, 10, 11, 13, 14, 15, 16, 17, 31, 32, 35, 39], "improv": [0, 1], "711": 0, "82baed7": 0, "_annotatedalia": 0, "693": 0, "5d97be2": 0, "warn": [0, 4, 30], "paramet": [0, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34], "689": 0, "aff32a0": 0, "696": 0, "d03aa1b": 0, "dawidd6": 0, "709": 0, "0cd86d2": 0, "714": 0, "722": 0, "0d55db8": 0, "avoid": [0, 30, 31, 34], "deep": 0, "copi": 0, "702": 0, "6281fb2": 0, "make": [0, 1, 30, 34, 38], "util": [0, 4, 19], "determinist": [0, 4, 31], "688": 0, "0facd26": 0, "4ae69c8": 0, "v1": 0, "url": 0, "email": 0, "correctli": [0, 36, 39], "685": 0, "xdynix": 0, "18d8579": 0, "detect": 0, "work": [0, 2, 30, 36], "typing_extens": 0, "684": 0, "airwoodix": 0, "9940230": 0, "overrid": [0, 9, 13, 14, 15, 16, 31, 32, 36], "sqla": [0, 16, 39], "column": [0, 16], "map": [0, 5, 9, 13, 14, 15, 16, 24, 31, 34, 36], "671": 0, "cc789b5": 0, "new": [0, 2, 3, 9, 30, 31], "annot": [0, 5, 8, 9, 15, 18, 31, 34, 39, 40], "680": 0, "36395d9": 0, "issu": [0, 1, 3, 4, 31], "678": 0, "field": [0, 6, 8, 9, 10, 11, 13, 15, 16, 17, 18, 20, 23, 24, 32, 33, 35, 37, 39, 40], "exampl": [0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 27, 30, 32, 33, 34, 36, 39, 40], "679": 0, "stardust85": 0, "02fed72": 0, "command": 0, "687": 0, "e0c6941": 0, "sonar": 0, "672": 0, "692": 0, "00aa862": 0, "fieldmeta": [0, 4, 8, 9, 10, 11, 13, 15, 16, 17, 18, 23, 24], "random": [0, 4, 9, 13, 14, 15, 16, 18, 26, 27, 29, 34], "663": 0, "ade1115": 0, "typo": 0, "675": 0, "c42bf6d": 0, "toml": 0, "formatt": [0, 1], "682": 0, "de78949": 0, "64fa119": 0, "non": [0, 8, 9, 31, 34], "hashabl": 0, "arg": [0, 18, 19, 21, 26, 34], "643": 0, "703aa2": 0, "dont": 0, "faker": [0, 9, 25], "less": [0, 25, 26], "646": 0, "t0nd0tara": 0, "e4a27ca": 0, "function": [0, 22, 26, 30, 31, 34, 36, 40], "sql": 0, "numer": [0, 26], "636": 0, "nisemenov": 0, "da6ad4d": 0, "ignor": [0, 9, 19, 31, 40], "dataclass": [0, 2, 3, 11, 31, 32, 33, 34, 35, 36, 38, 40], "pars": [0, 2], "660": 0, "3c1e68f": 0, "633": 0, "beab66c": 0, "662": 0, "8c1fe02": 0, "describ": [0, 39], "an": [0, 3, 4, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36, 38, 39, 40], "abil": 0, "async": [0, 9, 10, 16, 21, 31, 34], "data": [0, 2, 3, 9, 10, 15, 16, 18, 21, 23, 24, 31], "base": [0, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 26, 30, 32, 34, 38, 39], "some": [0, 9, 31, 32, 36, 39], "641": 0, "ba7cd3f": 0, "simplifi": [0, 4], "pytest": [0, 4, 19, 22, 31, 34, 37], "plugin": 0, "652": 0, "b98ae5d": 0, "creat": [0, 2, 9, 10, 15, 16, 18, 19, 22, 31, 32, 39], "657": 0, "33c72e7": 0, "add_provid": [0, 9, 36], "easili": 0, "provid": [0, 1, 3, 7, 9, 15, 31, 34, 39, 40], "659": 0, "0b5df15": 0, "rang": [0, 26, 34], "653": 0, "f5cb818": 0, "651": 0, "1c56f09": 0, "codecov": 0, "620": 0, "516dd6d": 0, "import": [0, 2, 31, 32, 33, 34, 35, 36, 39, 40], "661": 0, "prep": 0, "669": 0, "34182d4": 0, "depend": [0, 1, 7, 26, 33, 38], "648": 0, "396b555": 0, "pyright": 0, "665": 0, "0290580": 0, "e1c5b8c": 0, "lock": 0, "pdm": 0, "609": 0, "f526601": 0, "compat": [0, 30], "613": 0, "1e0c847": 0, "secur": 0, "alert": 0, "615": 0, "135bbc0": 0, "ensur": 0, "abc": [0, 9, 15, 38, 39], "ar": [0, 1, 2, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 26, 30, 31, 32, 34, 36, 38, 39, 40], "consid": [0, 9, 15, 16, 26], "628": 0, "137bfb9": 0, "context": 0, "manag": 0, "sqlaasyncpersist": [0, 16], "630": 0, "42999fa": 0, "__set_association_proxy__": [0, 16, 39], "attribut": [0, 8, 9, 16, 19, 31, 32, 33, 34, 39], "629": 0, "d6a886a": 0, "622": 0, "9db2ee7": 0, "619": 0, "637": 0, "a7dda85": 0, "625": 0, "9ee5852": 0, "pre": [0, 1, 34], "614": 0, "9fa4ad9": 0, "612": 0, "d374de5": 0, "599": 0, "d2ef554": 0, "626": 0, "f7b5d8b": 0, "660183b": 0, "nullabl": [0, 39], "constraint": [0, 15, 16, 18, 25, 26, 29], "602": 0, "608": 0, "37a9894": 0, "c027bbd": 0, "preview": [0, 30], "upload": 0, "597": 0, "8d8f6a9": 0, "595": 0, "6abb845": 0, "594": 0, "minor": [0, 30], "vkcku": 0, "67c5720": 0, "24701eb": 0, "constrain": [0, 24, 26, 27], "length": [0, 9, 15, 18, 26, 27, 29, 40], "list": [0, 8, 9, 10, 11, 13, 15, 16, 17, 18, 21, 24, 31, 32, 34, 35, 38, 39, 40], "570": 0, "marcozzxx810": 0, "6f5b78c": 0, "ani": [0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 30, 31, 32, 34, 36, 38, 39], "coverag": [0, 9, 15, 23, 37], "574": 0, "4aaf656": 0, "tupl": [0, 9, 15, 16, 18, 26, 31, 39], "573": 0, "9a83ad6": 0, "adjust": 0, "min": 0, "max": [0, 26], "item": [0, 24, 31], "valid": [0, 15, 26, 32, 34], "set": [0, 4, 8, 9, 15, 24, 39], "enum": [0, 31, 32, 34], "567": 0, "adrianeboyd": 0, "135d7fe": 0, "option": [0, 1, 9, 19, 22, 26, 35, 38, 40], "584": 0, "6440faa": 0, "587": 0, "841831d": 0, "swap": 0, "word": 0, "its": [0, 2, 31, 33, 34, 39], "antonym": 0, "match": [0, 31], "575": 0, "unclegoogl": 0, "c0c2704": 0, "register_fixtur": [0, 22, 35], "return": [0, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 36, 39], "581": 0, "giulioindev": 0, "588": 0, "d75b1d2": 0, "571": 0, "23281ee": 0, "3bb97e0": 0, "nest": 0, "564": 0, "sam": 0, "patch": [0, 30], "4928f07": 0, "86869c2": 0, "valu": [0, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 29, 34, 36, 39, 40], "522": 0, "cbe6dfc": 0, "factory_use_construct": [0, 15], "propag": 0, "549": 0, "b09bf64": 0, "send": 0, "field_meta": [0, 8, 9, 10, 11, 13, 15, 16, 17, 20, 23, 24, 26], "over": 0, "527": 0, "vegemash": 0, "740fd34": 0, "link": [0, 1], "repo": 0, "547": 0, "alc": 0, "c34e72": 0, "reskov": 0, "556": 0, "3320989": 0, "562": 0, "f8e9318": 0, "format": [0, 1], "ruff": 0, "554": 0, "36a9cc1": 0, "561": 0, "1d1c7f9": 0, "719495e": 0, "510": 0, "bb04b4e": 0, "favour": 0, "sa": 0, "impl": 0, "513": 0, "0032b5e": 0, "footer": 0, "jacobcoffe": 0, "5fd7d6c": 0, "resolv": [0, 8, 31, 34], "mypi": 0, "540": 0, "9e6edab": 0, "json": [0, 16], "pg": 0, "dialect": [0, 16], "e": [0, 26, 34, 38], "542": 0, "wangxin688": 0, "01d1dbe": 0, "appli": [0, 1, 30, 32], "organ": [0, 3, 30], "theme": 0, "533": 0, "5a0a5b": 0, "polyfactori": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40], "land": 0, "page": 0, "535": 0, "2f781ee": 0, "544": 0, "1792c19": 0, "arrai": 0, "other": [0, 9, 19, 30, 31, 32, 34, 38, 39], "530": 0, "013135c": 0, "refresh": 0, "object": [0, 2, 6, 9, 18, 19, 22], "async_sess": 0, "after": [0, 4, 19, 33], "db": 0, "541": 0, "e4695a7": 0, "mutabl": 0, "529": 0, "fac9fba": 0, "upgrad": 0, "517": 0, "3da64f6": 0, "rst": 0, "537": 0, "impaktor": 0, "3e2d22c": 0, "maintain": [0, 4], "545": 0, "6507c6d": 0, "badg": 0, "536": 0, "b44c68b": 0, "c4e3d91": 0, "prefer": 0, "sqlalchemi": [0, 16, 34, 38, 39], "exist": [0, 9, 10, 15, 31, 32, 39], "502": 0, "cofin": 0, "0f8f9e8": 0, "union": [0, 31, 32, 34, 35], "properli": 0, "499": 0, "61c8892": 0, "use_default": 0, "497": 0, "timdumol": 0, "9e34fa7": 0, "498": 0, "46ecdc6": 0, "simultan": 0, "492": 0, "1078230": 0, "496": 0, "2acfdc6": 0, "order": [0, 1], "509": 0, "1ae2d52": 0, "move": 0, "place": [0, 26, 31, 36, 39], "495": 0, "83f2992": 0, "fa50e20": 0, "491": 0, "8dc8e1a": 0, "fb4e50a": 0, "extens": [0, 9], "471": 0, "hsorski": 0, "40538c9": 0, "onli": [0, 9, 15, 16, 30, 31, 32, 34, 38], "defin": [0, 4, 9, 30, 32, 34, 35, 36, 40], "479": 0, "c22633c": 0, "477": 0, "b9c2127": 0, "broken": 0, "uri": 0, "485": 0, "wer153": 0, "8f96365": 0, "486": 0, "7ec9eb0": 0, "block": 0, "484": 0, "b33e662": 0, "configur": [0, 7, 16, 32, 37], "472": 0, "80bd012": 0, "guard": 0, "468": 0, "c7556e8": 0, "pass": [0, 2, 8, 9, 10, 15, 16, 19, 23, 24, 26, 34, 36], "config": [0, 9, 15, 16, 22, 36], "483": 0, "94ad561": 0, "487": 0, "bb433a4": 0, "478": 0, "2b57706": 0, "cach": [0, 31], "488": 0, "fe05c4": 0, "b479e4a": 0, "flatten_annot": 0, "behaviour": [0, 39], "440": [0, 1], "6961eaa": 0, "don": [0, 31, 32, 36], "t": [0, 8, 9, 10, 11, 13, 14, 15, 16, 19, 21, 22, 24, 26, 27, 31, 32, 36, 39], "blindli": 0, "suppress": 0, "valueerror": 0, "450": 0, "623d8c9": 0, "__model__": [0, 2, 8, 9, 15, 31, 32], "452": 0, "mityuha": 0, "1407f07": 0, "438": 0, "1a0da0d": 0, "448": 0, "231d311": 0, "458": 0, "2695880": 0, "459": 0, "fe342e4": 0, "461": 0, "a371d7f": 0, "462": 0, "0e2f824": 0, "465": 0, "b7b88a8": 0, "70d49fd": 0, "case": [0, 4, 16, 30, 31, 32, 34, 36, 38, 39, 40], "where": [0, 1, 3, 16, 34, 35, 39, 40], "init": 0, "fals": [0, 4, 9, 15, 16, 22, 24, 27, 29, 31, 39], "attr": [0, 8, 32, 38], "433": 0, "6b7512d": 0, "436": 0, "2bad951": 0, "g0di": 0, "432": 0, "155f4a4": 0, "autofil": 0, "argument": [0, 8, 9, 13, 14, 15, 16, 23, 24, 32, 34], "call": [0, 19, 22, 31, 34], "create_factori": [0, 9, 32, 39], "receiv": [0, 30, 34], "429": 0, "b1e8b5": 0, "batch": [0, 4, 9, 15, 19, 34, 40], "390": 0, "63aa272": 0, "caaee0f": 0, "requir": [0, 1, 2, 7, 8, 9, 19, 31, 38, 39], "nonrequir": 0, "422": 0, "5d64bde": 0, "respect": [0, 31, 38], "420": 0, "julioolvr": 0, "e819c2f": 0, "johnraz": 0, "413": 0, "0631d80": 0, "instal": [0, 1, 7, 39], "414": 0, "11f234c": 0, "reorder": 0, "418": 0, "a0465c6": 0, "425": 0, "5fefa41": 0, "check": [0, 1, 9], "declar": [0, 31, 34, 35, 37, 39], "belong": 0, "405": 0, "e1f7a47": 0, "411": 0, "0717951": 0, "param": [0, 15], "417": 0, "427": 0, "f2c6fe1": 0, "8c88293": 0, "383": 0, "0064240": 0, "makefil": 0, "399": 0, "89cd351": 0, "decoupl": 0, "407": 0, "c1edfd5": 0, "404": 0, "cabe03c": 0, "385": 0, "410": 0, "79360f1": 0, "creation": 0, "396": 0, "f555636": 0, "msgspec": [0, 2, 3, 13, 38], "api": [0, 3, 31, 34], "409": 0, "8ef78b8": 0, "altern": [0, 36, 40], "389": 0, "eddb978": 0, "full": [0, 9, 15, 39, 40], "384": 0, "ebf30ff": 0, "2a20513": 0, "hint": [0, 2, 3], "360": 0, "6cc7b03": 0, "attrsfactori": [0, 8, 32, 38], "370": 0, "8e41372": 0, "fixtur": [0, 19, 22, 37], "373": 0, "87a6749": 0, "371": 0, "anthonyjgraff": 0, "6f4b712": 0, "375": 0, "64c4e6c": 0, "374": 0, "guac": 0, "more": [0, 2, 3, 4, 30, 31], "380": 0, "c76ffc9": 0, "implement": [0, 3, 30, 32], "369": 0, "fc0bf61": 0, "provinzkraut": 0, "f67f36e": 0, "contributorsrc": 0, "377": 0, "66e9db1": 0, "ec177ec": 0, "stricter": 0, "363": 0, "sobolevn": 0, "95d24cb": 0, "skip": 0, "variabl": [0, 32], "dict": [0, 9, 13, 14, 15, 16, 19, 31, 32, 34, 36, 38, 39], "odmant": [0, 2, 14, 38], "372": 0, "adccaf0": 0, "enabl": [0, 3, 4, 31], "publish": [0, 1], "pypi": 0, "trust": 0, "368": 0, "7af5469": 0, "f639c26": 0, "355": 0, "minimum": [0, 9, 15, 18, 26, 27, 29, 40], "359": 0, "091ee36": 0, "comment": 0, "custom": [0, 1, 2, 9, 15, 26, 32, 34, 37], "361": 0, "7b46b57": 0, "3dba4b": 0, "venv": 0, "352": 0, "257852a": 0, "miss": [0, 7], "builtin": 0, "registr": 0, "351": 0, "e4daf5f": 0, "346": 0, "9ffe596": 0, "expos": [0, 32], "350": 0, "7a5a1c9": 0, "353": 0, "4f2e5d8": 0, "goldzih": 0, "161c0f6": 0, "349": 0, "354": 0, "710d3ce": 0, "3ec7de8": 0, "instanc": [0, 8, 9, 10, 11, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 31, 34, 36, 39, 40], "331": 0, "ea41bb": 0, "185504a9": 0, "339": 0, "510fabd": 0, "337": 0, "0228d3d": 0, "": [0, 2, 3, 8, 9, 11, 13, 15, 16, 17, 18, 19, 26, 31, 34, 36], "awaredatetim": 0, "mock": [0, 2, 3, 9, 10, 31, 34, 36], "333": 0, "bf04fa6": 0, "338": 0, "04a504b": 0, "725835e": 0, "core": [0, 2], "329": 0, "3e45f8f": 0, "2733497": 0, "315": 0, "3aeaa0c": 0, "seed": [0, 9, 34], "becaus": [0, 2, 10, 31, 39], "urandom": 0, "seedabl": 0, "319": 0, "klimantj": 0, "61f1e2e": 0, "321": 0, "2400fbe": 0, "includ": [0, 34, 38, 39], "323": 0, "tcrasset": 0, "8ff7e0f": 0, "320": 0, "9def5b1": 0, "324": 0, "5543e66": 0, "health": 0, "322": 0, "5abe4b3": 0, "templat": 0, "e703593": 0, "0bfa3b4": 0, "litestar": [0, 3, 30], "renam": 0, "96c61ae": 0, "313": 0, "d385561": 0, "311": 0, "86585d0": 0, "7405901": 0, "strai": 0, "306": 0, "b1f8f6e": 0, "charact": 0, "readm": 0, "c936389": 0, "poetri": 0, "308": 0, "09f896c": 0, "contribut": [0, 3], "310": 0, "3fadfb7": 0, "resolut": 0, "309": 0, "d331ae0": 0, "a2be35a": 0, "switch": 0, "seed_inst": 0, "305": 0, "f54f9f3": 0, "300": 0, "301": 0, "79e8145": 0, "7761834": 0, "abdulhaq": 0, "297": 0, "2b050bb": 0, "16cbc99": 0, "956472c": 0, "sourceri": 0, "5cdfed3": 0, "79e50df": 0, "35e10da": 0, "263": 0, "d592836": 0, "local": [0, 31], "267": 0, "gsakki": 0, "2b8ae48": 0, "peterschutt": 0, "mainten": 0, "264": 0, "a53c598": 0, "imag": 0, "266": 0, "d0c8bfa": 0, "mdczaplicki": 0, "274": 0, "a7220f3": 0, "ai": 0, "271": 0, "946cf08": 0, "dep": 0, "e932f89": 0, "281": 0, "0c0ed22": 0, "284": 0, "285": 0, "5013069": 0, "26073c4": 0, "238": 0, "d625936": 0, "simsk": 0, "242": 0, "2b93de6": 0, "danielkatzan": 0, "261": 0, "1511c9e": 0, "gegnew": 0, "262": 0, "d355511": 0, "roeeyn": 0, "260": 0, "c686ddd": 0, "gigelu": 0, "259": 0, "9101134": 0, "reznikovroman": 0, "258": 0, "1e4df30": 0, "anthonyh209": 0, "257": 0, "c6657e7": 0, "avihai": 0, "yosef": 0, "256": 0, "97cdad2": 0, "iipin": 0, "254": 0, "9156cca": 0, "thorin": 0, "schiffer": 0, "253": 0, "02c1daa": 0, "lyz": 0, "252": 0, "e883d58": 0, "daanrademak": 0, "251": 0, "cd2e558": 0, "nguyent": 0, "250": 0, "af594e3": 0, "eltonch": 0, "249": 0, "bac2622": 0, "butch78": 0, "248": 0, "13e80a7": 0, "lindycod": 0, "247": 0, "3940de4": 0, "246": 0, "e598c7d": 0, "phbernard": 0, "245": 0, "24a7766": 0, "mciszczon": 0, "244": 0, "b8cfe1a": 0, "sondrelg": 0, "243": 0, "773b364": 0, "strict": 0, "241": 0, "00dce8a": 0, "reformat": 0, "aef7acb": 0, "b9ea84d": 0, "vshumilin97": 0, "237": 0, "36c2f2f": 0, "5bd544f": 0, "constant": [0, 20], "233": 0, "f2ba049": 0, "2e2f11a": 0, "9670d27": 0, "224": 0, "02a4c97": 0, "221": 0, "d753504": 0, "typeddict": [0, 2, 3, 9, 17, 18, 19, 31, 32, 34], "d671ac2": 0, "47d234b": 0, "1d5c645": 0, "md": 0, "197": 0, "f767011": 0, "sygutss": 0, "201": 0, "36ff02e": 0, "chrisbeardi": 0, "207": 0, "a62c976": 0, "postgener": [0, 6, 9, 19, 31, 33], "classmethod": [0, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 31, 33, 34, 36, 39], "204": 0, "af36991": 0, "200": 0, "1f8d94c": 0, "60cdb30": 0, "185": 0, "8b5d903": 0, "przybylop": 0, "187": 0, "16f562f": 0, "194": 0, "cb71cd0": 0, "8097da7": 0, "contrib": 0, "placement": 0, "0814bb8": 0, "170": 0, "co": 0, "author": [0, 39], "46447321": 0, "user": [0, 3, 9, 31, 32, 34, 39], "norepli": 0, "com": [0, 3], "60511c9": 0, "171": 0, "3853048": 0, "173": 0, "5f111e4": 0, "method": [0, 6, 9, 10, 13, 14, 15, 16, 18, 19, 26, 31, 32, 34, 36, 39], "b1f83b3": 0, "5293860": 0, "note": [0, 9, 13, 14, 15, 16], "7ae2678": 0, "explain": [0, 31, 37], "how": [0, 4, 37], "subclass": [0, 9, 10, 15, 32], "modelfactori": [0, 8, 9, 10, 11, 13, 14, 15, 16, 17, 31, 32, 38], "your": [0, 1, 4, 36], "218522f": 0, "91": 0, "4c2b931": 0, "brand": 0, "25570f5": 0, "banner": 0, "logo": 0, "sync": [1, 9, 16, 21, 31, 34], "extra": [1, 36, 39], "virtual": 1, "hook": 1, "fork": 1, "repositori": 1, "clone": 1, "git": 1, "linter": 1, "step": 1, "execut": 1, "automat": [1, 4, 8, 9, 31, 39], "befor": [1, 4, 30, 40], "you": [1, 3, 31, 32, 34, 35, 36, 40], "mai": [1, 30], "want": [1, 2], "manual": 1, "fix": 1, "push": 1, "open": [1, 3], "give": [1, 34], "descript": 1, "titl": 1, "indic": [1, 9, 15], "what": [1, 9, 36], "If": [1, 9, 15, 31, 34, 36, 39], "ha": [1, 4, 31, 34, 40], "correspond": 1, "For": [1, 4, 8, 9, 10, 11, 13, 14, 15, 16, 17, 30, 31, 32, 33, 34, 40], "bug": 1, "increas": 1, "stack": 1, "imposs": 1, "find": 1, "needl": 1, "could": [1, 34], "easier": 1, "fire": 1, "haystack": 1, "need": [1, 8, 31, 32, 34, 36, 39], "follow": [1, 30], "convent": 1, "The": [1, 2, 3, 4, 8, 9, 15, 16, 19, 21, 26, 30, 31, 32, 35, 36, 37, 38, 39, 40], "locat": [1, 35, 39], "directori": 1, "built": [1, 23, 32], "rest": 1, "sphinx": 1, "re": [1, 34], "unfamiliar": 1, "those": 1, "restructuredtext": 1, "primer": 1, "quickstart": 1, "recommend": [1, 34], "read": [1, 31], "we": [1, 2, 3, 4, 10, 30, 31, 34, 36, 38], "welcom": 1, "enhanc": [1, 3], "usabl": 1, "shibuya": 1, "which": [1, 2, 9, 13, 14, 15, 16, 32, 34, 36], "come": [1, 32], "lot": 1, "out": [1, 30], "box": 1, "wish": 1, "style": 1, "static": 1, "site": 1, "should": [1, 4, 9, 15, 16, 24, 30, 31, 34, 36], "consult": 1, "first": [1, 31, 40], "To": [1, 4, 31, 36], "build": [1, 2, 7, 9, 10, 15, 19, 23, 24, 31, 32, 33, 34, 35, 36, 39], "Then": 1, "can": [1, 2, 3, 4, 8, 9, 23, 24, 26, 30, 31, 32, 34, 35, 36, 39, 40], "serv": 1, "them": [1, 39], "content": [1, 40], "feel": 1, "free": 1, "clarifi": 1, "text": 1, "restructur": 1, "etc": [1, 31], "sure": [1, 38], "guidelin": 1, "idiomat": 1, "english": 1, "simpl": [1, 2, 3, 34], "languag": 1, "keep": 1, "self": [1, 9, 18, 22, 31, 36], "applic": 1, "intersphinx": 1, "wherev": 1, "possibl": [1, 2, 34], "referenc": 1, "extern": 1, "librari": [1, 2, 3, 9, 30, 31, 32, 34, 36, 38], "diagram": 1, "mermaidj": 1, "pr": 1, "In": [1, 4, 31, 32, 34, 36, 40], "go": [1, 30], "tab": 1, "pick": 1, "draft": 1, "tag": 1, "both": [1, 31, 39], "vx": 1, "x": [1, 30], "fill": 1, "let": [1, 34], "do": [1, 31, 34, 36, 38], "approv": 1, "successfulli": 1, "power": [2, 3], "around": [2, 3], "struct": [2, 3, 13, 38], "pip": 2, "minim": [2, 24, 26, 31], "dataclassfactori": [2, 8, 9, 10, 11, 13, 14, 15, 16, 17, 31, 32, 33, 34, 35, 36, 38, 40], "person": [2, 31, 32, 34, 35, 36], "str": [2, 9, 15, 16, 18, 19, 22, 27, 29, 31, 32, 34, 35, 36, 39, 40], "ag": [2, 31, 32, 34, 35, 40], "float": [2, 26, 29, 31, 32, 34, 35], "height": [2, 31, 32], "weight": [2, 31, 32], "personfactori": [2, 31, 32, 34, 35, 36], "def": [2, 31, 32, 33, 34, 35, 36, 39, 40], "test_is_person": [2, 32], "none": [2, 6, 8, 9, 10, 15, 16, 18, 19, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 39, 40], "person_inst": [2, 31, 32, 34, 35, 36], "assert": [2, 31, 32, 33, 34, 35, 36, 39, 40], "isinst": [2, 31, 32, 34, 35, 36, 39, 40], "That": [2, 32], "almost": [2, 26], "abl": 2, "fit": 2, "definit": [2, 4, 9, 31, 32], "inform": [2, 39], "avail": [2, 9, 32, 39], "sourc": [2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29], "truth": 2, "store": [2, 18, 19, 31], "dictionari": [2, 9, 13, 14, 15, 16, 18, 31, 34], "kwarg": [2, 7, 8, 9, 10, 15, 19, 21, 23, 24, 26, 31, 34, 35], "constructor": [2, 26], "prior": 2, "2": [2, 30, 31, 32, 34, 39, 40], "wa": [2, 4, 19, 30], "known": 2, "under": [2, 34], "gain": 2, "quit": 2, "bit": 2, "popular": 2, "A": [2, 3, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 39], "main": [2, 9, 30], "motiv": 2, "0": [2, 9, 15, 30, 31, 32, 34, 39, 40], "releas": 2, "than": [2, 25, 26, 34], "just": 2, "someth": 2, "also": [2, 31, 32, 35], "architectur": 2, "As": [2, 31, 38, 40], "would": [2, 3], "longer": 2, "directli": [2, 4, 16, 34], "ti": 2, "chosen": [2, 31], "reflect": 2, "capabl": [2, 15], "It": 2, "beani": [2, 10, 34, 38], "odm": [2, 31], "well": [2, 31], "get": [3, 15, 16, 18, 26, 32, 34], "start": 3, "doc": [3, 39], "blog": 3, "changelog": 3, "latest": [3, 4], "discuss": [3, 31], "join": 3, "pose": 3, "question": 3, "share": 3, "insight": 3, "report": 3, "suggest": 3, "featur": [3, 30], "growth": 3, "commun": 3, "driven": 3, "initi": 3, "thrive": 3, "our": [3, 31, 36], "u": [3, 9], "pursu": 3, "innov": 3, "develop": [3, 30], "continu": [3, 30], "mission": 3, "except": [3, 8, 9, 20, 31, 34], "tool": 3, "resourc": 3, "huge": 3, "thank": 3, "current": [3, 9, 15, 23, 24, 30, 32, 33, 40], "scalar": [3, 34], "telemetri": 3, "sport": 3, "stok": 3, "invit": 3, "individu": 3, "sponsorship": 3, "program": 3, "By": [3, 31, 39], "becom": [3, 30], "platform": 3, "like": [3, 34, 39], "polar": 3, "plai": 3, "pivot": 3, "role": 3, "On": 3, "top": 3, "regular": [3, 34], "engag": 3, "pledg": 3, "opportun": 3, "through": [3, 4], "amount": [3, 15, 31], "toward": 3, "unreleas": 4, "v2": [4, 15], "v3": [4, 31, 39], "larg": 4, "align": 4, "common": 4, "ve": 4, "made": [4, 9, 15, 30], "better": 4, "here": [4, 10, 31, 39], "kei": [4, 9, 15, 16], "__set_relationships__": [4, 16, 39], "were": [4, 30], "popul": [4, 34], "unless": 4, "explicitli": [4, 31, 39], "now": [4, 31, 33, 34], "true": [4, 8, 9, 10, 11, 13, 14, 15, 16, 17, 26, 31, 34, 36, 39], "previou": [4, 30, 31], "__check_model__": [4, 9, 15, 16, 31], "structur": [4, 30], "disabl": [4, 31], "help": 4, "catch": 4, "potenti": 4, "earli": [4, 30], "been": [4, 30, 31], "legaci": 4, "separ": [4, 35], "instead": [4, 9, 31, 34], "combin": [4, 39], "similar": 4, "sever": [4, 30, 34], "have": [4, 30, 31, 36, 40], "per": 4, "emit": 4, "concret": [5, 32, 36], "normal": [5, 18, 39], "3": [5, 30, 33, 34, 39, 40], "9": 5, "post_gener": [6, 37], "descriptor": 6, "wrap": [6, 19, 31, 33], "__init__": [6, 15, 16, 18, 19, 21, 22, 26, 36], "callabl": [6, 9, 13, 14, 15, 16, 19, 22, 24, 26, 27, 34, 36, 39], "factoryexcept": 7, "configurationexcept": [7, 31], "misconfigur": 7, "parameterexcept": [7, 19], "wrong": 7, "missingbuildkwargexcept": [7, 34], "missingdependencyexcept": 7, "importerror": 7, "basefactori": [8, 9, 11, 13, 15, 16, 17, 23, 24, 31, 36, 38, 39, 40], "rais": [8, 9, 16, 19, 31, 34], "infer": [8, 9], "__is_base_factory__": [8, 9, 10, 11, 13, 14, 15, 16, 17, 36, 39], "bool": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 22, 24, 26, 27, 29, 40], "flag": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18], "dictat": [8, 9, 10, 11, 13, 14, 15, 16, 17, 26, 40], "whether": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 24, 26, 27, 29], "regist": [8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 22, 35], "global": [8, 9, 10, 11, 13, 14, 15, 16, 17, 34], "handler": [8, 9, 10, 11, 13, 14, 15, 16, 17, 39], "typeddictfactori": [8, 9, 10, 11, 13, 14, 15, 16, 17, 31, 32, 34, 38], "is_supported_typ": [8, 9, 10, 11, 13, 14, 15, 16, 17], "typeguard": [8, 9, 10, 11, 13, 14, 15, 16, 17], "determin": [8, 9, 10, 11, 13, 14, 15, 16, 17, 26], "given": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 26, 29, 31, 34], "arbitrari": [8, 9, 10, 11, 13, 14, 15, 16, 17, 19], "get_model_field": [8, 9, 11, 13, 15, 16, 17], "retriev": [8, 9, 11, 13, 15, 16, 17], "metadata": [8, 9, 11, 13, 15, 16, 17, 18, 34, 39], "resolve_typ": 8, "buildcontext": [9, 10, 15, 23, 24], "hold": 9, "logic": [9, 10, 31], "done": [9, 32], "against": 9, "construct": 9, "__allow_none_optionals__": [9, 15, 16, 31], "classvar": [9, 15, 16], "randomli": [9, 31, 34], "__sync_persistence__": [9, 31, 39], "syncpersistenceprotocol": [9, 16, 21, 31], "persist": [9, 10, 16, 20], "__async_persistence__": [9, 10, 31], "asyncpersistenceprotocol": [9, 10, 16, 21, 31], "__set_as_default_factory_for_type__": [9, 15, 16, 31], "dynam": [9, 15, 16, 31, 32], "__base_factory_overrides__": 9, "replac": 9, "__faker__": [9, 15, 16, 31, 33, 39], "__random__": [9, 15, 16, 31, 33, 34], "__random_seed__": [9, 31], "int": [9, 15, 18, 19, 22, 24, 26, 27, 29, 31, 32, 34, 35, 39, 40], "integ": [9, 26, 29], "control": [9, 31, 34, 35], "__randomize_collection_length__": [9, 15, 16, 31, 39], "__min_collection_length__": [9, 15, 16, 31, 39, 40], "__max_collection_length__": [9, 15, 16, 31, 40], "5": [9, 31], "maximum": [9, 15, 18, 26, 27, 29, 40], "__use_defaults__": [9, 15, 16, 31], "specif": 9, "__config_keys__": [9, 15, 16, 36], "__forward_references__": [9, 15, 16, 31], "provider_typ": 9, "provider_funct": 9, "is_factory_typ": 9, "boolean": [9, 15, 18, 26, 29], "is_batch_factory_typ": 9, "sequenc": [9, 15, 18], "extract_field_build_paramet": 9, "build_arg": 9, "extract": 9, "meta": [9, 15, 18, 23, 24], "abstract": [9, 34, 38], "seed_random": 9, "is_ignored_typ": 9, "meant": [9, 19, 32], "overwritten": [9, 39], "get_provider_map": [9, 13, 14, 15, 16, 36], "accept": [9, 13, 14, 15, 16, 23, 24], "distinct": [9, 13, 14, 15, 16], "otherwis": [9, 10], "get_field_valu": [9, 10, 15], "field_build_paramet": [9, 10, 15, 23, 24], "build_context": [9, 10, 15, 23, 24], "get_field_value_coverag": 9, "iter": [9, 15], "should_set_none_valu": 9, "should_use_default_valu": [9, 31], "should_set_field_valu": [9, 15], "field_nam": [9, 15], "get_factory_field": 9, "try": 9, "smart": 9, "about": [9, 18, 31], "dunder": [9, 31], "process_kwarg": 9, "process": [9, 16, 31], "result": [9, 16, 19, 21, 23, 27, 29, 31, 34, 39], "process_kwargs_coverag": 9, "_": 9, "n": [9, 31], "sub": [9, 15, 32, 40], "create_sync": [9, 31, 39], "synchron": [9, 16, 21, 31], "singl": [9, 10, 16, 21, 31], "create_batch_sync": [9, 31], "create_async": [9, 31, 34, 39], "asynchron": [9, 16, 21, 31], "create_batch_async": [9, 31, 34], "beaniepersistencehandl": 10, "save": [10, 16, 21, 31], "mongodb": 10, "save_mani": [10, 16, 21, 31], "multipl": [10, 16, 21, 26], "cannot": [10, 31, 36], "insert_mani": 10, "doesn": 10, "beaniedocumentfactori": [10, 38], "document": [10, 20, 30, 31, 38], "base_factori": 12, "dataclass_factori": [12, 31, 40], "typed_dict_factori": 12, "pydantic_factori": [12, 31, 32, 38], "msgspec_factori": 12, "odmantic_odm_factori": 12, "beanie_odm_factori": 12, "attrs_factori": [12, 32], "sqlalchemy_factori": [12, 34, 39], "msgspecfactori": [13, 38], "odmanticmodelfactori": [14, 38], "pydanticbuildcontext": 15, "pydanticconstraint": 15, "regard": [15, 18], "pydanticfieldmeta": 15, "modelfield": 15, "ellipsi": 15, "from_field_info": 15, "field_info": 15, "fieldinfo": 15, "use_alia": 15, "randomize_collection_length": [15, 18], "min_collection_length": [15, 18], "max_collection_length": [15, 18], "info": 15, "from_model_field": 15, "model_field": 15, "_sphinx_paramlinks_polyfactori": 15, "number": [15, 18, 24, 26, 40], "element": [15, 18], "get_constraints_metadata": [15, 18], "__use_examples__": [15, 31], "payment": [15, 31], "basemodel": [15, 31, 32], "currenc": [15, 31], "usd": [15, 31], "eur": [15, 31], "inr": [15, 31], "paymentfactori": [15, 31], "120": 15, "els": 15, "instanti": 15, "is_custom_root_field": 15, "root": 15, "sqlasyncpersist": 16, "session": [16, 22, 34, 39], "sqlafactori": 16, "asyncsess": [16, 34], "sqlalchemyfactori": [16, 34, 38], "__set_primary_key__": 16, "primari": 16, "__set_foreign_keys__": [16, 39], "foreign": 16, "relationship": 16, "properti": [16, 18], "associationproxi": [16, 39], "get_sqlalchemy_typ": [16, 39], "basic": [16, 39], "pydict": 16, "serial": 16, "get_sqlalchemy_constraint": 16, "typeengin": [16, 39], "engin": [16, 39], "typeddictt": 17, "null": 18, "sentinel": 18, "empti": [18, 31], "urlconstraint": 18, "__repr__": [18, 36], "represent": 18, "type_arg": 18, "from_typ": 18, "builder": 18, "wrappedcal": 19, "ref": 19, "prevent": 19, "bind": 19, "mark": [19, 31], "time": [19, 30, 34, 38], "p": 19, "invok": [19, 34], "whenev": 19, "fn": 19, "to_valu": 19, "output": [19, 26, 31, 40], "design": [19, 30, 34], "post": [19, 33, 34], "callback": [19, 26], "section": [20, 31, 37], "packag": [20, 22, 38], "decor": [20, 22, 32, 35, 37], "pytest_plugin": [20, 35], "value_gener": [20, 23, 24, 25, 26, 27, 29], "protocol": [21, 26], "factoryfixtur": 22, "scope": [22, 34], "liter": [22, 40], "modul": [22, 38], "autous": 22, "__call__": [22, 26], "depth": [22, 31, 40], "1": [22, 30, 31, 34, 39, 40], "auto": 22, "handle_collection_typ": 23, "container_typ": 23, "handle_collection_type_coverag": 23, "unresolv": 23, "handle_constrained_collect": 24, "collection_typ": 24, "item_typ": 24, "max_item": 24, "min_item": 24, "unique_item": 24, "maxim": [24, 26], "uniqu": 24, "handle_constrained_map": 24, "handle_constrained_d": 25, "ge": [25, 26], "date": [25, 31, 32, 34, 35], "gt": [25, 26], "le": [25, 26], "lt": [25, 26], "tz": 25, "tzinfo": 25, "datetim": [25, 31, 32, 33, 34, 35], "timezon": 25, "utc": 25, "fulfil": [25, 32], "expect": [25, 30, 40], "equal": [25, 26], "greater": [25, 26], "numbergeneratorprotocol": 26, "signatur": [26, 34], "almost_equal_float": 26, "value_1": 26, "value_2": 26, "delta": [26, 34], "1e": 26, "08": 26, "two": 26, "problemat": 26, "comparison": 26, "is_multiply_of_multiple_of_in_rang": 26, "multiple_of": 26, "least": 26, "one": [26, 31, 32, 34], "multipli": 26, "li": 26, "between": [26, 31], "passes_pydantic_multiple_valid": 26, "anoth": [26, 40], "get_incr": 26, "t_type": [26, 27], "small": 26, "increment": 26, "entri": 26, "get_value_or_non": 26, "max_digit": 26, "decimal_plac": 26, "equal_valu": 26, "get_constrained_number_rang": 26, "primit": [26, 28], "decim": [26, 29, 39], "digit": 26, "generate_constrained_numb": 26, "handle_constrained_int": 26, "handle_constrained_float": 26, "validate_max_digit": 26, "handle_decimal_length": 26, "generated_decim": 26, "handle_constrained_decim": 26, "handle_constrained_string_or_byt": 27, "lower_cas": [27, 29], "upper_cas": [27, 29], "min_length": [27, 29], "max_length": [27, 29], "pattern": [27, 34], "byte": [27, 29], "constr": 27, "conbyt": 27, "lowercas": [27, 29], "uppercas": [27, 29], "regex": 27, "complex_typ": 28, "constrained_collect": 28, "constrained_d": 28, "constrained_numb": 28, "constrained_str": 28, "create_random_float": 29, "create_random_integ": 29, "create_random_decim": 29, "create_random_byt": 29, "create_random_str": 29, "create_random_boolean": 29, "outlin": 30, "stabil": 30, "guarante": 30, "standard": 30, "major": 30, "schema": 30, "backward": 30, "incompat": 30, "manner": 30, "bugfix": 30, "alpha": 30, "beta": 30, "candid": 30, "rc": 30, "release_typ": 30, "0alpha1": 30, "0beta1": 30, "0rc1": 30, "complet": [30, 34], "break": 30, "occur": 30, "stabl": 30, "freez": 30, "until": 30, "final": [30, 40], "suitabl": 30, "test": [30, 31], "upcom": 30, "life": 30, "seri": 30, "These": [30, 38], "period": 30, "next": 30, "throughout": 30, "At": 30, "activ": 30, "special": [30, 31, 36], "drop": 30, "select": [30, 34], "backport": 30, "older": 30, "feasibl": 30, "each": [30, 36, 40], "cycl": 30, "consist": [30, 34], "few": [30, 34], "phase": 30, "plan": 30, "roadmap": 30, "spec": 30, "begin": [30, 34], "end": 30, "branch": 30, "b": 30, "progress": 30, "regress": 30, "doubl": 31, "underscor": 31, "below": [31, 32], "cl": [31, 33, 34, 36, 39], "choic": [31, 34], "john": 31, "alic": 31, "georg": 31, "test_random_se": 31, "outcom": 31, "produc": 31, "affect": [31, 34], "10": 31, "test_setting_random": 31, "ident": 31, "differ": [31, 35], "being": [31, 34], "actual": 31, "embed": 31, "insid": [31, 32], "complex": 31, "es_": 31, "test_setting_fak": 31, "spanish": 31, "alejandra": 31, "romeu": 31, "tolosa": 31, "abov": [31, 34, 36, 38, 39, 40], "understand": [31, 34], "why": 31, "four": 31, "must": [31, 33], "asyncio": [31, 34], "sleep": 31, "uuid": [31, 32, 34, 35, 36], "id": [31, 32, 34, 35, 36, 39], "mock_db": 31, "syncpersistencehandl": 31, "stuff": 31, "orm": [31, 34, 39], "redi": 31, "simpli": 31, "same": [31, 32, 40], "asyncpersistencehandl": 31, "await": [31, 34], "0001": 31, "again": 31, "test_sync_persistence_build": 31, "test_sync_persistence_batch": 31, "person_batch": 31, "test_async_persistence_build": 31, "test_async_persistence_batch": 31, "With": 31, "intervent": 31, "onc": 31, "reus": [31, 40], "petfactori": [31, 32, 34], "speci": [31, 32, 34], "cat": [31, 32, 34], "dog": [31, 32, 34], "pet": [31, 32, 34], "sound": [31, 32, 34], "hobbi": [31, 32, 34, 35], "birthdai": [31, 32, 34, 35], "asset": [31, 32, 34], "test_dynamic_factory_gener": [31, 32], "roxi": [31, 34], "spammi": 31, "mosh": 31, "test_default_pet_factori": 31, "owner": 31, "car": [31, 40], "ownerfactori": 31, "test_randomized_collection_length": 31, "alwai": 31, "treat": 31, "test_optional_type_ignor": 31, "trigger": 31, "test_check_factory_field": 31, "unknown_field": 31, "part": 31, "lambda": [31, 34, 36, 39], "foo": 31, "fine": 31, "grain": 31, "effect": 31, "sinc": [31, 32], "meow": 31, "test_use_default": 31, "test_use_exampl": 31, "deal": 31, "__future__": [31, 34, 39, 40], "recursivetyp": 31, "recursivetypemodel": 31, "recursive_valu": 31, "recursivetypemodelfactori": 31, "test_forward_refer": 31, "jsonvalu": 31, "syntax": 32, "omit": 32, "13": 32, "export": [32, 34, 38], "Or": [32, 34, 39], "3rd": [32, 36], "parti": [32, 36], "long": 32, "stdlib": [32, 34], "interfac": 32, "alias": [32, 35], "date_of_birth": 32, "privat": 32, "_asset": 32, "test_person_factori": [32, 35], "neither": 32, "nor": 32, "although": 32, "primarili": 32, "intern": 32, "test_imperative_factory_cr": 32, "pet_factori": 32, "pet_inst": [32, 34], "eventu": [32, 39], "rabbit": 32, "mous": 32, "test_imperative_sub_factory_cr": 32, "cat_factori": 32, "cat_inst": 32, "usual": 33, "timedelta": [33, 34], "datetimerang": [33, 34], "to_dt": [33, 34], "from_dt": [33, 34], "default_factori": [33, 34], "datetimerangefactori": [33, 34], "time_delta": 33, "3d": 33, "test_post_gener": [33, 34], "date_range_inst": [33, 34], "dai": [33, 34], "nonetheless": 34, "cover": 34, "look": 34, "hardcod": [34, 36], "woof": 34, "test_is_pet_inst": 34, "though": 34, "often": 34, "desir": 34, "restrict": 34, "ralph": 34, "test_pet_choic": 34, "mere": 34, "cleaner": 34, "simpler": 34, "fact": 34, "thu": 34, "write": 34, "so": [34, 36, 38, 39, 40], "easi": 34, "nice": 34, "access": 34, "itself": [34, 35, 39], "intent": 34, "while": 34, "own": [34, 36], "attach": 34, "wai": 34, "g": [34, 38], "rather": 34, "mean": 34, "test_id_is_ignor": 34, "test_id_is_requir": 34, "alreadi": 34, "most": [34, 40], "best": 34, "helper": 34, "add_timedelta": 34, "cb": 34, "themselv": 34, "test_subfactori": 34, "person_instance_with_pet_nam": 34, "winston": 34, "fetch": 34, "databas": 34, "approach": [34, 40], "outsid": 34, "foreignkei": [34, 39], "ext": [34, 39], "create_async_engin": 34, "declarativebas": [34, 39], "mapped_column": [34, 39], "async_engin": 34, "sqlite": [34, 39], "aiosqlit": 34, "memori": [34, 39], "__tablename__": [34, 39], "primary_kei": [34, 39], "depart": 34, "director_id": 34, "userfactori": [34, 39], "departmentfactori": 34, "get_director_id": 34, "test_factory_with_pre_fetched_async_data": 34, "conn": 34, "run_sync": 34, "drop_al": 34, "create_al": [34, 39], "__async_session__": [34, 39], "register_fixture_decor": 35, "nick": 35, "person_factori": 35, "still": 35, "another_person_inst": 35, "aliased_person_factori": 35, "sometim": 36, "either": 36, "codebas": 36, "achiev": 36, "extend": [36, 38], "providers_map": 36, "customsecret": 36, "__str__": 36, "secret": 36, "unknown": 36, "super": [36, 39], "jeronimo": 36, "test_custom_secret_cr": 36, "repr": 36, "appropri": 36, "typevar": 36, "test_custom_dataclass_base_factori": 36, "great": 36, "localis": 36, "fashion": 36, "mani": 36, "lead": 36, "unnecessari": 36, "duplic": 36, "solut": 36, "customdataclassfactori": 36, "onto": 36, "addit": 38, "thei": 38, "namespac": 38, "authorfactori": 39, "test_sqla_factori": 39, "4": 39, "behavior": 39, "book": 39, "uselist": 39, "author_id": 39, "authorfactorywithrelationship": 39, "test_sqla_factory_with_relationship": 39, "But": 39, "retain": 39, "association_proxi": 39, "user_keyword_associ": 39, "userkeywordassoci": 39, "back_popul": 39, "keyword": 39, "creator": 39, "keyword_obj": 39, "user_keyword": 39, "user_id": 39, "keyword_id": 39, "userfactorywithassoci": 39, "test_sqla_factory_with_associ": 39, "particular": [39, 40], "via": 39, "proper": 39, "relat": 39, "__session__": 39, "create_engin": 39, "test_sqla_factory_persist": 39, "customis": 39, "further": 39, "similarli": 39, "up": 39, "test_custom_sqla_factori": 39, "cache_ok": 39, "placefactori": 39, "latlng": 39, "attempt": 40, "form": 40, "take": 40, "boat": 40, "can_float": 40, "profil": 40, "favourite_color": 40, "red": 40, "green": 40, "blue": 40, "vehicl": 40, "profilefactori": 40, "test_profile_coverag": 40, "largest": 40, "varianc": 40, "notic": 40, "exhaust": 40, "socialgroup": 40, "member": 40, "socialgroupfactori": 40, "test_social_group_coverag": 40, "group": 40, "caus": 40, "recursionerror": 40, "exceed": 40}, "objects": {"polyfactory": [[5, 0, 0, "-", "constants"], [6, 0, 0, "-", "decorators"], [7, 0, 0, "-", "exceptions"], [18, 0, 0, "-", "field_meta"], [19, 0, 0, "-", "fields"], [21, 0, 0, "-", "persistence"], [22, 0, 0, "-", "pytest_plugin"]], "polyfactory.decorators": [[6, 1, 1, "", "post_generated"]], "polyfactory.decorators.post_generated": [[6, 2, 1, "", "__init__"]], "polyfactory.exceptions": [[7, 3, 1, "", "ConfigurationException"], [7, 3, 1, "", "FactoryException"], [7, 3, 1, "", "MissingBuildKwargException"], [7, 3, 1, "", "MissingDependencyException"], [7, 3, 1, "", "ParameterException"]], "polyfactory.factories": [[8, 0, 0, "-", "attrs_factory"], [9, 0, 0, "-", "base"], [10, 0, 0, "-", "beanie_odm_factory"], [11, 0, 0, "-", "dataclass_factory"], [13, 0, 0, "-", "msgspec_factory"], [14, 0, 0, "-", "odmantic_odm_factory"], [15, 0, 0, "-", "pydantic_factory"], [16, 0, 0, "-", "sqlalchemy_factory"], [17, 0, 0, "-", "typed_dict_factory"]], "polyfactory.factories.attrs_factory": [[8, 1, 1, "", "AttrsFactory"]], "polyfactory.factories.attrs_factory.AttrsFactory": [[8, 4, 1, "", "__is_base_factory__"], [8, 4, 1, "", "__model__"], [8, 2, 1, "", "get_model_fields"], [8, 2, 1, "", "is_supported_type"], [8, 2, 1, "", "resolve_types"]], "polyfactory.factories.attrs_factory.AttrsFactory.is_supported_type.params": [[8, 5, 1, "", "value"]], "polyfactory.factories.attrs_factory.AttrsFactory.resolve_types.params": [[8, 5, 1, "", "kwargs"], [8, 5, 1, "", "model"]], "polyfactory.factories.base": [[9, 1, 1, "", "BaseFactory"], [9, 1, 1, "", "BuildContext"]], "polyfactory.factories.base.BaseFactory": [[9, 4, 1, "", "__allow_none_optionals__"], [9, 4, 1, "", "__async_persistence__"], [9, 4, 1, "", "__base_factory_overrides__"], [9, 4, 1, "", "__check_model__"], [9, 4, 1, "", "__config_keys__"], [9, 4, 1, "", "__faker__"], [9, 4, 1, "", "__is_base_factory__"], [9, 4, 1, "", "__max_collection_length__"], [9, 4, 1, "", "__min_collection_length__"], [9, 4, 1, "", "__model__"], [9, 4, 1, "", "__random__"], [9, 4, 1, "", "__random_seed__"], [9, 4, 1, "", "__randomize_collection_length__"], [9, 4, 1, "", "__set_as_default_factory_for_type__"], [9, 4, 1, "", "__sync_persistence__"], [9, 4, 1, "", "__use_defaults__"], [9, 2, 1, "", "add_provider"], [9, 2, 1, "", "batch"], [9, 2, 1, "", "build"], [9, 2, 1, "", "coverage"], [9, 2, 1, "", "create_async"], [9, 2, 1, "", "create_batch_async"], [9, 2, 1, "", "create_batch_sync"], [9, 2, 1, "", "create_factory"], [9, 2, 1, "", "create_sync"], [9, 2, 1, "", "extract_field_build_parameters"], [9, 2, 1, "", "get_factory_fields"], [9, 2, 1, "", "get_field_value"], [9, 2, 1, "", "get_field_value_coverage"], [9, 2, 1, "", "get_model_fields"], [9, 2, 1, "", "get_provider_map"], [9, 2, 1, "", "is_batch_factory_type"], [9, 2, 1, "", "is_factory_type"], [9, 2, 1, "", "is_ignored_type"], [9, 2, 1, "", "is_supported_type"], [9, 2, 1, "", "process_kwargs"], [9, 2, 1, "", "process_kwargs_coverage"], [9, 2, 1, "", "seed_random"], [9, 2, 1, "", "should_set_field_value"], [9, 2, 1, "", "should_set_none_value"], [9, 2, 1, "", "should_use_default_value"]], "polyfactory.factories.base.BaseFactory.batch.params": [[9, 5, 1, "", "kwargs"], [9, 5, 1, "", "size"]], "polyfactory.factories.base.BaseFactory.build.params": [[9, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.coverage.params": [[9, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.create_async.params": [[9, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.create_batch_async.params": [[9, 5, 1, "", "kwargs"], [9, 5, 1, "", "size"]], "polyfactory.factories.base.BaseFactory.create_batch_sync.params": [[9, 5, 1, "", "kwargs"], [9, 5, 1, "", "size"]], "polyfactory.factories.base.BaseFactory.create_factory.params": [[9, 5, 1, "", "bases"], [9, 5, 1, "", "kwargs"], [9, 5, 1, "", "model"]], "polyfactory.factories.base.BaseFactory.create_sync.params": [[9, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.extract_field_build_parameters.params": [[9, 5, 1, "", "build_args"], [9, 5, 1, "", "field_meta"]], "polyfactory.factories.base.BaseFactory.get_field_value.params": [[9, 5, 1, "", "build_context"], [9, 5, 1, "", "field_build_parameters"], [9, 5, 1, "", "field_meta"]], "polyfactory.factories.base.BaseFactory.get_field_value_coverage.params": [[9, 5, 1, "", "build_context"], [9, 5, 1, "", "field_build_parameters"], [9, 5, 1, "", "field_meta"]], "polyfactory.factories.base.BaseFactory.is_batch_factory_type.params": [[9, 5, 1, "", "annotation"]], "polyfactory.factories.base.BaseFactory.is_factory_type.params": [[9, 5, 1, "", "annotation"]], "polyfactory.factories.base.BaseFactory.is_ignored_type.params": [[9, 5, 1, "", "value"]], "polyfactory.factories.base.BaseFactory.is_supported_type.params": [[9, 5, 1, "", "value"]], "polyfactory.factories.base.BaseFactory.process_kwargs.params": [[9, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.process_kwargs_coverage.params": [[9, 5, 1, "", "build_context"], [9, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.seed_random.params": [[9, 5, 1, "", "seed"]], "polyfactory.factories.base.BaseFactory.should_set_field_value.params": [[9, 5, 1, "", "field_meta"], [9, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.should_set_none_value.params": [[9, 5, 1, "", "field_meta"]], "polyfactory.factories.base.BaseFactory.should_use_default_value.params": [[9, 5, 1, "", "field_meta"]], "polyfactory.factories.beanie_odm_factory": [[10, 1, 1, "", "BeanieDocumentFactory"], [10, 1, 1, "", "BeaniePersistenceHandler"]], "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory": [[10, 4, 1, "", "__async_persistence__"], [10, 4, 1, "", "__is_base_factory__"], [10, 2, 1, "", "get_field_value"], [10, 2, 1, "", "is_supported_type"]], "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.get_field_value.params": [[10, 5, 1, "", "build_context"], [10, 5, 1, "", "field_build_parameters"], [10, 5, 1, "", "field_meta"]], "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.is_supported_type.params": [[10, 5, 1, "", "value"]], "polyfactory.factories.beanie_odm_factory.BeaniePersistenceHandler": [[10, 2, 1, "", "save"], [10, 2, 1, "", "save_many"]], "polyfactory.factories.dataclass_factory": [[11, 1, 1, "", "DataclassFactory"]], "polyfactory.factories.dataclass_factory.DataclassFactory": [[11, 4, 1, "", "__is_base_factory__"], [11, 2, 1, "", "get_model_fields"], [11, 2, 1, "", "is_supported_type"]], "polyfactory.factories.dataclass_factory.DataclassFactory.is_supported_type.params": [[11, 5, 1, "", "value"]], "polyfactory.factories.msgspec_factory": [[13, 1, 1, "", "MsgspecFactory"]], "polyfactory.factories.msgspec_factory.MsgspecFactory": [[13, 4, 1, "", "__is_base_factory__"], [13, 2, 1, "", "get_model_fields"], [13, 2, 1, "", "get_provider_map"], [13, 2, 1, "", "is_supported_type"]], "polyfactory.factories.msgspec_factory.MsgspecFactory.is_supported_type.params": [[13, 5, 1, "", "value"]], "polyfactory.factories.odmantic_odm_factory": [[14, 1, 1, "", "OdmanticModelFactory"]], "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory": [[14, 4, 1, "", "__is_base_factory__"], [14, 2, 1, "", "get_provider_map"], [14, 2, 1, "", "is_supported_type"]], "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory.is_supported_type.params": [[14, 5, 1, "", "value"]], "polyfactory.factories.pydantic_factory": [[15, 1, 1, "", "ModelFactory"], [15, 1, 1, "", "PydanticBuildContext"], [15, 1, 1, "", "PydanticConstraints"], [15, 1, 1, "", "PydanticFieldMeta"]], "polyfactory.factories.pydantic_factory.ModelFactory": [[15, 4, 1, "", "__config_keys__"], [15, 4, 1, "", "__is_base_factory__"], [15, 4, 1, "", "__use_examples__"], [15, 2, 1, "", "build"], [15, 2, 1, "", "coverage"], [15, 2, 1, "", "get_field_value"], [15, 2, 1, "", "get_model_fields"], [15, 2, 1, "", "get_provider_map"], [15, 2, 1, "", "is_custom_root_field"], [15, 2, 1, "", "is_supported_type"], [15, 2, 1, "", "should_set_field_value"]], "polyfactory.factories.pydantic_factory.ModelFactory.build.params": [[15, 5, 1, "", "factory_use_construct"], [15, 5, 1, "", "kwargs"]], "polyfactory.factories.pydantic_factory.ModelFactory.coverage.params": [[15, 5, 1, "", "kwargs"]], "polyfactory.factories.pydantic_factory.ModelFactory.get_field_value.params": [[15, 5, 1, "", "build_context"], [15, 5, 1, "", "field_build_parameters"], [15, 5, 1, "", "field_meta"]], "polyfactory.factories.pydantic_factory.ModelFactory.is_custom_root_field.params": [[15, 5, 1, "", "field_meta"]], "polyfactory.factories.pydantic_factory.ModelFactory.is_supported_type.params": [[15, 5, 1, "", "value"]], "polyfactory.factories.pydantic_factory.ModelFactory.should_set_field_value.params": [[15, 5, 1, "", "field_meta"], [15, 5, 1, "", "kwargs"]], "polyfactory.factories.pydantic_factory.PydanticFieldMeta": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "from_field_info"], [15, 2, 1, "", "from_model_field"], [15, 2, 1, "", "get_constraints_metadata"]], "polyfactory.factories.pydantic_factory.PydanticFieldMeta.from_field_info.params": [[15, 5, 1, "", "field_info"], [15, 5, 1, "", "field_name"], [15, 5, 1, "", "max_collection_length"], [15, 5, 1, "", "min_collection_length"], [15, 5, 1, "", "random"], [15, 5, 1, "", "randomize_collection_length"], [15, 5, 1, "", "use_alias"]], "polyfactory.factories.pydantic_factory.PydanticFieldMeta.from_model_field.params": [[15, 5, 1, "", "max_collection_length"], [15, 5, 1, "", "min_collection_length"], [15, 5, 1, "", "model_field"], [15, 5, 1, "", "random"], [15, 5, 1, "", "randomize_collection_length"], [15, 5, 1, "", "use_alias"]], "polyfactory.factories.pydantic_factory.PydanticFieldMeta.get_constraints_metadata.params": [[15, 5, 1, "", "annotation"], [15, 5, 1, "", "random"]], "polyfactory.factories.sqlalchemy_factory": [[16, 1, 1, "", "SQLAASyncPersistence"], [16, 1, 1, "", "SQLASyncPersistence"], [16, 1, 1, "", "SQLAlchemyFactory"]], "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "save"], [16, 2, 1, "", "save_many"]], "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence.save.params": [[16, 5, 1, "", "data"]], "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence.save_many.params": [[16, 5, 1, "", "data"]], "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "save"], [16, 2, 1, "", "save_many"]], "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence.save.params": [[16, 5, 1, "", "data"]], "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence.save_many.params": [[16, 5, 1, "", "data"]], "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory": [[16, 4, 1, "", "__config_keys__"], [16, 4, 1, "", "__is_base_factory__"], [16, 4, 1, "", "__set_association_proxy__"], [16, 4, 1, "", "__set_foreign_keys__"], [16, 4, 1, "", "__set_primary_key__"], [16, 4, 1, "", "__set_relationships__"], [16, 2, 1, "", "get_model_fields"], [16, 2, 1, "", "get_provider_map"], [16, 2, 1, "", "get_sqlalchemy_constraints"], [16, 2, 1, "", "get_sqlalchemy_types"], [16, 2, 1, "", "is_supported_type"]], "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.is_supported_type.params": [[16, 5, 1, "", "value"]], "polyfactory.factories.typed_dict_factory": [[17, 1, 1, "", "TypedDictFactory"]], "polyfactory.factories.typed_dict_factory.TypedDictFactory": [[17, 4, 1, "", "__is_base_factory__"], [17, 2, 1, "", "get_model_fields"], [17, 2, 1, "", "is_supported_type"]], "polyfactory.factories.typed_dict_factory.TypedDictFactory.is_supported_type.params": [[17, 5, 1, "", "value"]], "polyfactory.field_meta": [[18, 1, 1, "", "Constraints"], [18, 1, 1, "", "FieldMeta"], [18, 1, 1, "", "Null"], [18, 1, 1, "", "UrlConstraints"]], "polyfactory.field_meta.FieldMeta": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "from_type"], [18, 2, 1, "", "get_constraints_metadata"], [18, 6, 1, "", "type_args"]], "polyfactory.field_meta.FieldMeta.from_type.params": [[18, 5, 1, "", "annotation"], [18, 5, 1, "", "constraints"], [18, 5, 1, "", "default"], [18, 5, 1, "", "max_collection_length"], [18, 5, 1, "", "min_collection_length"], [18, 5, 1, "", "name"], [18, 5, 1, "", "random"], [18, 5, 1, "", "randomize_collection_length"]], "polyfactory.field_meta.FieldMeta.get_constraints_metadata.params": [[18, 5, 1, "", "annotation"], [18, 5, 1, "", "random"]], "polyfactory.fields": [[19, 1, 1, "", "Fixture"], [19, 1, 1, "", "Ignore"], [19, 1, 1, "", "PostGenerated"], [19, 1, 1, "", "Require"], [19, 1, 1, "", "Use"], [19, 1, 1, "", "WrappedCallable"]], "polyfactory.fields.Fixture": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "to_value"]], "polyfactory.fields.Fixture.params": [[19, 5, 1, "", "fixture"], [19, 5, 1, "", "kwargs"], [19, 5, 1, "", "size"]], "polyfactory.fields.PostGenerated": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "to_value"]], "polyfactory.fields.PostGenerated.params": [[19, 5, 1, "", "args"], [19, 5, 1, "", "fn"], [19, 5, 1, "", "kwargs"]], "polyfactory.fields.PostGenerated.to_value.params": [[19, 5, 1, "", "name"], [19, 5, 1, "", "values"]], "polyfactory.fields.Use": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "to_value"]], "polyfactory.fields.Use.params": [[19, 5, 1, "", "args"], [19, 5, 1, "", "fn"], [19, 5, 1, "", "kwargs"]], "polyfactory.persistence": [[21, 1, 1, "", "AsyncPersistenceProtocol"], [21, 1, 1, "", "SyncPersistenceProtocol"]], "polyfactory.persistence.AsyncPersistenceProtocol": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "save"], [21, 2, 1, "", "save_many"]], "polyfactory.persistence.AsyncPersistenceProtocol.save.params": [[21, 5, 1, "", "data"]], "polyfactory.persistence.AsyncPersistenceProtocol.save_many.params": [[21, 5, 1, "", "data"]], "polyfactory.persistence.SyncPersistenceProtocol": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "save"], [21, 2, 1, "", "save_many"]], "polyfactory.persistence.SyncPersistenceProtocol.save.params": [[21, 5, 1, "", "data"]], "polyfactory.persistence.SyncPersistenceProtocol.save_many.params": [[21, 5, 1, "", "data"]], "polyfactory.pytest_plugin": [[22, 1, 1, "", "FactoryFixture"], [22, 7, 1, "", "register_fixture"]], "polyfactory.pytest_plugin.FactoryFixture": [[22, 2, 1, "", "__call__"], [22, 2, 1, "", "__init__"]], "polyfactory.pytest_plugin.FactoryFixture.params": [[22, 5, 1, "", "autouse"], [22, 5, 1, "", "name"], [22, 5, 1, "", "scope"]], "polyfactory.pytest_plugin.register_fixture.params": [[22, 5, 1, "", "autouse"], [22, 5, 1, "", "factory"], [22, 5, 1, "", "name"], [22, 5, 1, "", "scope"]], "polyfactory.value_generators": [[23, 0, 0, "-", "complex_types"], [24, 0, 0, "-", "constrained_collections"], [25, 0, 0, "-", "constrained_dates"], [26, 0, 0, "-", "constrained_numbers"], [27, 0, 0, "-", "constrained_strings"], [29, 0, 0, "-", "primitives"]], "polyfactory.value_generators.complex_types": [[23, 7, 1, "", "handle_collection_type"], [23, 7, 1, "", "handle_collection_type_coverage"]], "polyfactory.value_generators.complex_types.handle_collection_type.params": [[23, 5, 1, "", "build_context"], [23, 5, 1, "", "container_type"], [23, 5, 1, "", "factory"], [23, 5, 1, "", "field_build_parameters"], [23, 5, 1, "", "field_meta"]], "polyfactory.value_generators.complex_types.handle_collection_type_coverage.params": [[23, 5, 1, "", "container_type"], [23, 5, 1, "", "factory"], [23, 5, 1, "", "field_meta"]], "polyfactory.value_generators.constrained_collections": [[24, 7, 1, "", "handle_constrained_collection"], [24, 7, 1, "", "handle_constrained_mapping"]], "polyfactory.value_generators.constrained_collections.handle_constrained_collection.params": [[24, 5, 1, "", "build_context"], [24, 5, 1, "", "collection_type"], [24, 5, 1, "", "factory"], [24, 5, 1, "", "field_build_parameters"], [24, 5, 1, "", "field_meta"], [24, 5, 1, "", "item_type"], [24, 5, 1, "", "max_items"], [24, 5, 1, "", "min_items"], [24, 5, 1, "", "unique_items"]], "polyfactory.value_generators.constrained_collections.handle_constrained_mapping.params": [[24, 5, 1, "", "build_context"], [24, 5, 1, "", "factory"], [24, 5, 1, "", "field_build_parameters"], [24, 5, 1, "", "field_meta"], [24, 5, 1, "", "max_items"], [24, 5, 1, "", "min_items"]], "polyfactory.value_generators.constrained_dates": [[25, 7, 1, "", "handle_constrained_date"]], "polyfactory.value_generators.constrained_dates.handle_constrained_date.params": [[25, 5, 1, "", "faker"], [25, 5, 1, "", "ge"], [25, 5, 1, "", "gt"], [25, 5, 1, "", "le"], [25, 5, 1, "", "lt"], [25, 5, 1, "", "tz"]], "polyfactory.value_generators.constrained_numbers": [[26, 1, 1, "", "NumberGeneratorProtocol"], [26, 7, 1, "", "almost_equal_floats"], [26, 7, 1, "", "generate_constrained_number"], [26, 7, 1, "", "get_constrained_number_range"], [26, 7, 1, "", "get_increment"], [26, 7, 1, "", "get_value_or_none"], [26, 7, 1, "", "handle_constrained_decimal"], [26, 7, 1, "", "handle_constrained_float"], [26, 7, 1, "", "handle_constrained_int"], [26, 7, 1, "", "handle_decimal_length"], [26, 7, 1, "", "is_multiply_of_multiple_of_in_range"], [26, 7, 1, "", "passes_pydantic_multiple_validator"], [26, 7, 1, "", "validate_max_digits"]], "polyfactory.value_generators.constrained_numbers.NumberGeneratorProtocol": [[26, 2, 1, "", "__call__"], [26, 2, 1, "", "__init__"]], "polyfactory.value_generators.constrained_numbers.NumberGeneratorProtocol.__call__.params": [[26, 5, 1, "", "maximum"], [26, 5, 1, "", "minimum"], [26, 5, 1, "", "random"]], "polyfactory.value_generators.constrained_numbers.almost_equal_floats.params": [[26, 5, 1, "", "delta"], [26, 5, 1, "", "value_1"], [26, 5, 1, "", "value_2"]], "polyfactory.value_generators.constrained_numbers.generate_constrained_number.params": [[26, 5, 1, "", "maximum"], [26, 5, 1, "", "method"], [26, 5, 1, "", "minimum"], [26, 5, 1, "", "multiple_of"], [26, 5, 1, "", "random"]], "polyfactory.value_generators.constrained_numbers.get_constrained_number_range.params": [[26, 5, 1, "", "decimal_places"], [26, 5, 1, "", "ge"], [26, 5, 1, "", "gt"], [26, 5, 1, "", "le"], [26, 5, 1, "", "lt"], [26, 5, 1, "", "max_digits"], [26, 5, 1, "", "multiple_of"], [26, 5, 1, "", "random"], [26, 5, 1, "", "t_type"]], "polyfactory.value_generators.constrained_numbers.get_increment.params": [[26, 5, 1, "", "t_type"]], "polyfactory.value_generators.constrained_numbers.get_value_or_none.params": [[26, 5, 1, "", "constrained"], [26, 5, 1, "", "equal_value"], [26, 5, 1, "", "increment"]], "polyfactory.value_generators.constrained_numbers.handle_constrained_decimal.params": [[26, 5, 1, "", "decimal_places"], [26, 5, 1, "", "ge"], [26, 5, 1, "", "gt"], [26, 5, 1, "", "le"], [26, 5, 1, "", "lt"], [26, 5, 1, "", "max_digits"], [26, 5, 1, "", "multiple_of"], [26, 5, 1, "", "random"]], "polyfactory.value_generators.constrained_numbers.handle_constrained_float.params": [[26, 5, 1, "", "ge"], [26, 5, 1, "", "gt"], [26, 5, 1, "", "le"], [26, 5, 1, "", "lt"], [26, 5, 1, "", "multiple_of"], [26, 5, 1, "", "random"]], "polyfactory.value_generators.constrained_numbers.handle_constrained_int.params": [[26, 5, 1, "", "ge"], [26, 5, 1, "", "gt"], [26, 5, 1, "", "le"], [26, 5, 1, "", "lt"], [26, 5, 1, "", "multiple_of"], [26, 5, 1, "", "random"]], "polyfactory.value_generators.constrained_numbers.handle_decimal_length.params": [[26, 5, 1, "", "decimal_places"], [26, 5, 1, "", "generated_decimal"], [26, 5, 1, "", "max_digits"]], "polyfactory.value_generators.constrained_numbers.is_multiply_of_multiple_of_in_range.params": [[26, 5, 1, "", "maximum"], [26, 5, 1, "", "minimum"], [26, 5, 1, "", "multiple_of"]], "polyfactory.value_generators.constrained_numbers.passes_pydantic_multiple_validator.params": [[26, 5, 1, "", "multiple_of"], [26, 5, 1, "", "value"]], "polyfactory.value_generators.constrained_numbers.validate_max_digits.params": [[26, 5, 1, "", "decimal_places"], [26, 5, 1, "", "max_digits"], [26, 5, 1, "", "minimum"]], "polyfactory.value_generators.constrained_strings": [[27, 7, 1, "", "handle_constrained_string_or_bytes"]], "polyfactory.value_generators.constrained_strings.handle_constrained_string_or_bytes.params": [[27, 5, 1, "", "lower_case"], [27, 5, 1, "", "max_length"], [27, 5, 1, "", "min_length"], [27, 5, 1, "", "pattern"], [27, 5, 1, "", "random"], [27, 5, 1, "", "t_type"], [27, 5, 1, "", "upper_case"]], "polyfactory.value_generators.primitives": [[29, 7, 1, "", "create_random_boolean"], [29, 7, 1, "", "create_random_bytes"], [29, 7, 1, "", "create_random_decimal"], [29, 7, 1, "", "create_random_float"], [29, 7, 1, "", "create_random_integer"], [29, 7, 1, "", "create_random_string"]], "polyfactory.value_generators.primitives.create_random_boolean.params": [[29, 5, 1, "", "random"]], "polyfactory.value_generators.primitives.create_random_bytes.params": [[29, 5, 1, "", "lower_case"], [29, 5, 1, "", "max_length"], [29, 5, 1, "", "min_length"], [29, 5, 1, "", "random"], [29, 5, 1, "", "upper_case"]], "polyfactory.value_generators.primitives.create_random_decimal.params": [[29, 5, 1, "", "maximum"], [29, 5, 1, "", "minimum"], [29, 5, 1, "", "random"]], "polyfactory.value_generators.primitives.create_random_float.params": [[29, 5, 1, "", "maximum"], [29, 5, 1, "", "minimum"], [29, 5, 1, "", "random"]], "polyfactory.value_generators.primitives.create_random_integer.params": [[29, 5, 1, "", "maximum"], [29, 5, 1, "", "minimum"], [29, 5, 1, "", "random"]], "polyfactory.value_generators.primitives.create_random_string.params": [[29, 5, 1, "", "lower_case"], [29, 5, 1, "", "max_length"], [29, 5, 1, "", "min_length"], [29, 5, 1, "", "random"], [29, 5, 1, "", "upper_case"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:attribute", "5": "py:parameter", "6": "py:property", "7": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "parameter", "Python parameter"], "6": ["py", "property", "Python property"], "7": ["py", "function", "Python function"]}, "titleterms": {"changelog": 0, "releas": [0, 1, 30], "v2": [0, 31], "22": 0, "3": 0, "2025": 0, "10": 0, "18": 0, "bug": 0, "fix": 0, "document": [0, 1], "miscellan": 0, "task": 0, "2": 0, "08": 0, "15": 0, "1": 0, "07": 0, "14": 0, "0": 0, "01": 0, "featur": 0, "perform": 0, "refactor": 0, "21": 0, "04": 0, "ci": 0, "20": 0, "03": 0, "build": 0, "19": 0, "29": 0, "2024": 0, "11": 0, "26": 0, "06": 0, "17": 0, "09": 0, "16": 0, "05": 0, "13": 0, "02": 0, "test": 0, "2023": 0, "12": 0, "23": 0, "infra": 0, "9": 0, "8": 0, "7": 0, "meta": 0, "28": 0, "6": 0, "5": 0, "30": 0, "4": 0, "25": 0, "enhanc": 0, "0alpha1": 0, "doc": [0, 1], "contribut": 1, "set": [1, 31], "up": 1, "environ": 1, "code": 1, "workflow": 1, "project": 1, "theme": 1, "appear": 1, "run": 1, "local": 1, "write": 1, "edit": 1, "creat": [1, 36], "new": 1, "get": 2, "start": 2, "instal": 2, "exampl": [2, 31], "relat": 2, "pydant": [2, 31], "factori": [2, 12, 31, 32, 34, 36, 38], "sponsor": 3, "migrat": 4, "guid": [4, 37], "sqlalchemyfactori": [4, 39], "default": [4, 31], "chang": 4, "relationship": [4, 39], "behavior": 4, "model": [4, 40], "valid": 4, "fixtur": [4, 35], "field": [4, 19, 31, 34], "remov": 4, "intern": 4, "paramet": 4, "constant": 5, "decor": [6, 33], "except": 7, "attrs_factori": 8, "base_factori": 9, "beanie_odm_factori": 10, "dataclass_factori": 11, "msgspec_factori": 13, "odmantic_odm_factori": 14, "pydantic_factori": 15, "sqlalchemy_factori": 16, "typed_dict_factori": 17, "field_meta": 18, "api": [20, 39], "refer": [20, 31, 39], "articl": [20, 37], "persist": [21, 31, 39], "pytest_plugin": 22, "complex_typ": 23, "constrained_collect": 24, "constrained_d": 25, "constrained_numb": 26, "constrained_str": 27, "value_gener": 28, "primit": 29, "polyfactori": [30, 38], "version": 30, "number": 30, "pre": 30, "long": 30, "term": 30, "support": 30, "lt": 30, "deprec": 30, "polici": 30, "process": 30, "configur": [31, 39], "seed": 31, "random": 31, "faker": 31, "handler": 31, "defin": 31, "collect": [31, 40], "length": 31, "allow": 31, "none": 31, "option": 31, "check": 31, "us": [31, 34], "valu": 31, "forward": 31, "declar": 32, "imper": 32, "creation": 32, "The": [33, 34], "post_gener": 33, "ignor": 34, "requir": 34, "postgener": 34, "handl": [34, 36], "asynchron": 34, "data": 34, "pytest": 35, "custom": 36, "type": [36, 39, 40], "add": [36, 39], "provid": 36, "base": 36, "usag": 37, "associ": 39, "proxi": 39, "ad": 39, "global": 39, "overrid": 39, "column": 39, "map": 39, "coverag": 40, "gener": 40, "note": 40, "known": 40, "limit": 40}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"Pytest fixtures": [[35, "pytest-fixtures"]], "Factory Fields": [[34, "factory-fields"]], "The Use Field": [[34, "the-use-field"]], "The Ignore Field": [[34, "the-ignore-field"]], "The Require Field": [[34, "the-require-field"]], "The PostGenerated Field": [[34, "the-postgenerated-field"]], "Factories as Fields": [[34, "factories-as-fields"]], "Handling Asynchronous Data in Factory Fields": [[34, "handling-asynchronous-data-in-factory-fields"]], "Declaring Factories": [[32, "declaring-factories"]], "Imperative Factory Creation": [[32, "imperative-factory-creation"]], "Handling Custom Types": [[36, "handling-custom-types"]], "Add a Type Provider": [[36, "add-a-type-provider"]], "Creating Custom Base Factories": [[36, "creating-custom-base-factories"]], "The post_generated decorator": [[33, "the-post-generated-decorator"]], "Polyfactory Releases": [[30, "polyfactory-releases"]], "Version Numbering": [[30, "version-numbering"]], "Pre-release Versions": [[30, "pre-release-versions"]], "Long-term Support Releases (LTS)": [[30, "long-term-support-releases-lts"]], "Deprecation Policy": [[30, "deprecation-policy"]], "Supported Versions": [[30, "id1"]], "Release Process": [[30, "release-process"]], "Usage Guide": [[37, "usage-guide"]], "Articles": [[37, null], [20, null]], "Polyfactory Factories": [[38, "polyfactory-factories"]], "SQLAlchemyFactory": [[39, "sqlalchemyfactory"]], "Configuration": [[39, "configuration"]], "Relationship": [[39, "id1"]], "Association Proxy": [[39, "id2"]], "Persistence": [[39, "persistence"]], "Adding global overrides": [[39, "adding-global-overrides"]], "Add column type mapping": [[39, "add-column-type-mapping"]], "API reference": [[39, "api-reference"]], "Factory Configuration": [[31, "factory-configuration"]], "Seeding Randomness": [[31, "seeding-randomness"]], "Setting Random": [[31, "setting-random"]], "Setting Faker": [[31, "setting-faker"]], "Persistence Handlers": [[31, "persistence-handlers"]], "Defining Default Factories": [[31, "defining-default-factories"]], "Randomized Collection Length": [[31, "randomized-collection-length"]], "Allow None Optionals": [[31, "allow-none-optionals"]], "Check Factory Fields": [[31, "check-factory-fields"]], "Use Default Values": [[31, "use-default-values"]], "Use Example Values (Pydantic >= V2)": [[31, "use-example-values-pydantic-v2"]], "Forward References": [[31, "forward-references"]], "Model coverage generation": [[40, "model-coverage-generation"]], "Notes on collection types": [[40, "notes-on-collection-types"]], "Known Limitations": [[40, "known-limitations"]], "constrained_numbers": [[26, "module-polyfactory.value_generators.constrained_numbers"]], "complex_types": [[23, "module-polyfactory.value_generators.complex_types"]], "API Reference": [[20, "api-reference"]], "primitives": [[29, "module-polyfactory.value_generators.primitives"]], "pytest_plugin": [[22, "module-polyfactory.pytest_plugin"]], "constrained_dates": [[25, "module-polyfactory.value_generators.constrained_dates"]], "constrained_collections": [[24, "module-polyfactory.value_generators.constrained_collections"]], "persistence": [[21, "module-polyfactory.persistence"]], "constrained_strings": [[27, "module-polyfactory.value_generators.constrained_strings"]], "value_generators": [[28, "value-generators"]], "exceptions": [[7, "module-polyfactory.exceptions"]], "Changelog": [[0, "changelog"]], "Release [v2.22.3] - 2025-10-18": [[0, "id1"]], "Bug Fixes": [[0, "bug-fixes"], [0, "id26"], [0, "id37"], [0, "id48"], [0, "id79"], [0, "id106"], [0, "id146"], [0, "id182"], [0, "id192"], [0, "id204"], [0, "id228"], [0, "id235"], [0, "id256"], [0, "id289"], [0, "id313"], [0, "id321"], [0, "id351"], [0, "id379"], [0, "id393"], [0, "id419"], [0, "id449"], [0, "id481"], [0, "id492"], [0, "id512"], [0, "id527"], [0, "id533"], [0, "id562"], [0, "id599"], [0, "id625"], [0, "id685"], [0, "id696"], [0, "id722"]], "Documentation": [[0, "documentation"], [0, "id52"], [0, "id113"], [0, "id215"], [0, "id240"], [0, "id264"], [0, "id293"], [0, "id325"], [0, "id384"], [0, "id397"], [0, "id427"], [0, "id457"], [0, "id487"], [0, "id497"], [0, "id515"], [0, "id541"], [0, "id552"], [0, "id586"], [0, "id603"], [0, "id628"], [0, "id676"], [0, "id688"], [0, "id699"], [0, "id710"], [0, "id724"], [0, "id737"]], "Miscellaneous Tasks": [[0, "miscellaneous-tasks"], [0, "id31"], [0, "id42"], [0, "id59"], [0, "id91"], [0, "id129"], [0, "id160"], [0, "id186"], [0, "id200"], [0, "id219"], [0, "id230"], [0, "id247"], [0, "id278"], [0, "id300"], [0, "id316"], [0, "id342"], [0, "id358"], [0, "id413"], [0, "id433"], [0, "id468"], [0, "id504"], [0, "id522"], [0, "id567"], [0, "id581"], [0, "id592"], [0, "id613"], [0, "id672"], [0, "id681"], [0, "id691"], [0, "id715"], [0, "id741"]], "Release [v2.22.2] - 2025-08-15": [[0, "id24"]], "Release [v2.22.1] - 2025-07-14": [[0, "id35"]], "Release [v2.22.0] - 2025-07-01": [[0, "id46"]], "Features": [[0, "features"], [0, "id82"], [0, "id118"], [0, "id157"], [0, "id197"], [0, "id217"], [0, "id271"], [0, "id297"], [0, "id333"], [0, "id356"], [0, "id387"], [0, "id406"], [0, "id430"], [0, "id465"], [0, "id518"], [0, "id554"], [0, "id576"], [0, "id610"], [0, "id739"]], "Performance": [[0, "performance"]], "Refactor": [[0, "refactor"], [0, "id97"], [0, "id168"], [0, "id306"], [0, "id437"]], "Release [v2.21.0] - 2025-04-18": [[0, "id77"]], "Ci": [[0, "ci"], [0, "id284"], [0, "id442"]], "Release [v2.20.0] - 2025-03-21": [[0, "id104"]], "Build": [[0, "build"], [0, "id171"], [0, "id223"]], "Release [v2.19.0] - 2025-01-29": [[0, "id143"]], "Release [v2.18.1] - 2024-11-26": [[0, "id180"]], "Release [v2.18.0] - 2024-11-06": [[0, "id190"]], "Release [v2.17.0] - 2024-09-22": [[0, "id202"]], "Release [v2.16.2] - 2024-07-09": [[0, "id226"]], "Release [v2.16.1] - 2024-07-08": [[0, "id233"]], "Release [v2.16.0] - 2024-05-13": [[0, "id254"]], "Release [v2.15.0] - 2024-03-02": [[0, "id287"]], "Testing": [[0, "testing"], [0, "id472"]], "Release [v2.14.1] - 2024-01-20": [[0, "id311"]], "Release [v2.14.0] - 2024-01-19": [[0, "id319"]], "Release [v2.13.0] - 2023-12-19": [[0, "id349"]], "Release [v2.12.0] - 2023-11-13": [[0, "id377"]], "Release [v2.11.0] - 2023-10-23": [[0, "id391"]], "Release [v2.10.0] - 2023-10-16": [[0, "id417"]], "Infra": [[0, "infra"], [0, "id476"], [0, "id546"], [0, "id557"]], "Release [v2.9.0] - 2023-09-19": [[0, "id447"]], "Release [v2.8.2] - 2023-09-15": [[0, "id479"]], "Release [v2.8.1] - 2023-09-10": [[0, "id490"]], "Release [v2.8.0] - 2023-08-26": [[0, "id510"]], "Release [v2.7.2] - 2023-08-09": [[0, "id525"]], "Release [v2.7.1] - 2023-08-08": [[0, "id531"]], "Meta": [[0, "meta"]], "Release [v2.7.0] - 2023-07-28": [[0, "id550"]], "Release [v2.6.3] - 2023-07-21": [[0, "id560"]], "Release [v2.6.2] - 2023-07-14": [[0, "id574"]], "Release [v2.6.1] - 2023-07-10": [[0, "id584"]], "Release [v2.6.0] - 2023-07-09": [[0, "id590"]], "Release [v2.5.0] - 2023-06-30": [[0, "id597"]], "Release": [[0, "release"]], "Release [v2.4.0] - 2023-06-25": [[0, "id622"]], "Fix": [[0, "fix"], [0, "id706"]], "Release [v2.3.3] - 2023-06-22": [[0, "id674"]], "Release [v2.3.2] - 2023-06-18": [[0, "id679"]], "Release [v2.1.2] - 2023-05-28": [[0, "id684"]], "Release [v2.1.0] - 2023-05-06": [[0, "id695"]], "Enhancement": [[0, "enhancement"]], "Release [v2.0.1] - 2023-04-28": [[0, "id708"]], "Release [v2.0.0] - 2023-04-16": [[0, "id720"]], "Release [v2.0.0alpha1] - 2023-04-11": [[0, "id733"]], "Docs": [[0, "docs"]], "constants": [[5, "constants"]], "decorators": [[6, "module-polyfactory.decorators"]], "base_factory": [[9, "module-polyfactory.factories.base"]], "attrs_factory": [[8, "module-polyfactory.factories.attrs_factory"]], "Getting Started": [[2, "getting-started"]], "Installation": [[2, "installation"]], "Example": [[2, "example"]], "Relation to pydantic-factories": [[2, "relation-to-pydantic-factories"]], "Contributing": [[1, "contributing"]], "Setting up the environment": [[1, "setting-up-the-environment"]], "Code contributions": [[1, "code-contributions"]], "Workflow": [[1, "workflow"]], "Project documentation": [[1, "project-documentation"]], "Docs theme and appearance": [[1, "docs-theme-and-appearance"]], "Running the docs locally": [[1, "running-the-docs-locally"]], "Writing and editing docs": [[1, "writing-and-editing-docs"]], "Creating a new release": [[1, "creating-a-new-release"]], "Sponsors": [[3, "sponsors"]], "Migration Guide": [[4, "migration-guide"]], "SQLAlchemyFactory Default Changes": [[4, "sqlalchemyfactory-default-changes"]], "Default Relationship Behavior": [[4, "default-relationship-behavior"]], "Model Validation Behavior": [[4, "model-validation-behavior"]], "Fixture Field Removal": [[4, "fixture-field-removal"]], "Internal Parameter Changes": [[4, "internal-parameter-changes"]], "dataclass_factory": [[11, "module-polyfactory.factories.dataclass_factory"]], "msgspec_factory": [[13, "module-polyfactory.factories.msgspec_factory"]], "sqlalchemy_factory": [[16, "module-polyfactory.factories.sqlalchemy_factory"]], "odmantic_odm_factory": [[14, "module-polyfactory.factories.odmantic_odm_factory"]], "factories": [[12, "factories"]], "beanie_odm_factory": [[10, "module-polyfactory.factories.beanie_odm_factory"]], "fields": [[19, "module-polyfactory.fields"]], "field_meta": [[18, "module-polyfactory.field_meta"]], "pydantic_factory": [[15, "module-polyfactory.factories.pydantic_factory"]], "typed_dict_factory": [[17, "module-polyfactory.factories.typed_dict_factory"]]}, "indexentries": {"module": [[5, "module-polyfactory.constants"], [6, "module-polyfactory.decorators"], [7, "module-polyfactory.exceptions"], [8, "module-polyfactory.factories.attrs_factory"], [9, "module-polyfactory.factories.base"], [10, "module-polyfactory.factories.beanie_odm_factory"], [11, "module-polyfactory.factories.dataclass_factory"], [13, "module-polyfactory.factories.msgspec_factory"], [14, "module-polyfactory.factories.odmantic_odm_factory"], [15, "module-polyfactory.factories.pydantic_factory"], [16, "module-polyfactory.factories.sqlalchemy_factory"], [17, "module-polyfactory.factories.typed_dict_factory"], [18, "module-polyfactory.field_meta"], [19, "module-polyfactory.fields"], [21, "module-polyfactory.persistence"], [22, "module-polyfactory.pytest_plugin"], [23, "module-polyfactory.value_generators.complex_types"], [24, "module-polyfactory.value_generators.constrained_collections"], [25, "module-polyfactory.value_generators.constrained_dates"], [26, "module-polyfactory.value_generators.constrained_numbers"], [27, "module-polyfactory.value_generators.constrained_strings"], [29, "module-polyfactory.value_generators.primitives"]], "polyfactory.constants": [[5, "module-polyfactory.constants"]], "__init__() (polyfactory.decorators.post_generated method)": [[6, "polyfactory.decorators.post_generated.__init__"]], "polyfactory.decorators": [[6, "module-polyfactory.decorators"]], "post_generated (class in polyfactory.decorators)": [[6, "polyfactory.decorators.post_generated"]], "configurationexception": [[7, "polyfactory.exceptions.ConfigurationException"]], "factoryexception": [[7, "polyfactory.exceptions.FactoryException"]], "missingbuildkwargexception": [[7, "polyfactory.exceptions.MissingBuildKwargException"]], "missingdependencyexception": [[7, "polyfactory.exceptions.MissingDependencyException"]], "parameterexception": [[7, "polyfactory.exceptions.ParameterException"]], "polyfactory.exceptions": [[7, "module-polyfactory.exceptions"]], "attrsfactory (class in polyfactory.factories.attrs_factory)": [[8, "polyfactory.factories.attrs_factory.AttrsFactory"]], "__is_base_factory__ (polyfactory.factories.attrs_factory.attrsfactory attribute)": [[8, "polyfactory.factories.attrs_factory.AttrsFactory.__is_base_factory__"]], "__model__ (polyfactory.factories.attrs_factory.attrsfactory attribute)": [[8, "polyfactory.factories.attrs_factory.AttrsFactory.__model__"]], "get_model_fields() (polyfactory.factories.attrs_factory.attrsfactory class method)": [[8, "polyfactory.factories.attrs_factory.AttrsFactory.get_model_fields"]], "is_supported_type() (polyfactory.factories.attrs_factory.attrsfactory class method)": [[8, "polyfactory.factories.attrs_factory.AttrsFactory.is_supported_type"]], "polyfactory.factories.attrs_factory": [[8, "module-polyfactory.factories.attrs_factory"]], "resolve_types() (polyfactory.factories.attrs_factory.attrsfactory class method)": [[8, "polyfactory.factories.attrs_factory.AttrsFactory.resolve_types"]], "basefactory (class in polyfactory.factories.base)": [[9, "polyfactory.factories.base.BaseFactory"]], "buildcontext (class in polyfactory.factories.base)": [[9, "polyfactory.factories.base.BuildContext"]], "__allow_none_optionals__ (polyfactory.factories.base.basefactory attribute)": [[9, "polyfactory.factories.base.BaseFactory.__allow_none_optionals__"]], "__async_persistence__ (polyfactory.factories.base.basefactory attribute)": [[9, "polyfactory.factories.base.BaseFactory.__async_persistence__"]], "__base_factory_overrides__ (polyfactory.factories.base.basefactory attribute)": [[9, "polyfactory.factories.base.BaseFactory.__base_factory_overrides__"]], "__check_model__ (polyfactory.factories.base.basefactory attribute)": [[9, "polyfactory.factories.base.BaseFactory.__check_model__"]], "__config_keys__ (polyfactory.factories.base.basefactory attribute)": [[9, "polyfactory.factories.base.BaseFactory.__config_keys__"]], "__faker__ (polyfactory.factories.base.basefactory attribute)": [[9, "polyfactory.factories.base.BaseFactory.__faker__"]], "__is_base_factory__ (polyfactory.factories.base.basefactory attribute)": [[9, "polyfactory.factories.base.BaseFactory.__is_base_factory__"]], "__max_collection_length__ (polyfactory.factories.base.basefactory attribute)": [[9, "polyfactory.factories.base.BaseFactory.__max_collection_length__"]], "__min_collection_length__ (polyfactory.factories.base.basefactory attribute)": [[9, "polyfactory.factories.base.BaseFactory.__min_collection_length__"]], "__model__ (polyfactory.factories.base.basefactory attribute)": [[9, "polyfactory.factories.base.BaseFactory.__model__"]], "__random__ (polyfactory.factories.base.basefactory attribute)": [[9, "polyfactory.factories.base.BaseFactory.__random__"]], "__random_seed__ (polyfactory.factories.base.basefactory attribute)": [[9, "polyfactory.factories.base.BaseFactory.__random_seed__"]], "__randomize_collection_length__ (polyfactory.factories.base.basefactory attribute)": [[9, "polyfactory.factories.base.BaseFactory.__randomize_collection_length__"]], "__set_as_default_factory_for_type__ (polyfactory.factories.base.basefactory attribute)": [[9, "polyfactory.factories.base.BaseFactory.__set_as_default_factory_for_type__"]], "__sync_persistence__ (polyfactory.factories.base.basefactory attribute)": [[9, "polyfactory.factories.base.BaseFactory.__sync_persistence__"]], "__use_defaults__ (polyfactory.factories.base.basefactory attribute)": [[9, "polyfactory.factories.base.BaseFactory.__use_defaults__"]], "add_provider() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.add_provider"]], "batch() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.batch"]], "build() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.build"]], "coverage() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.coverage"]], "create_async() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.create_async"]], "create_batch_async() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.create_batch_async"]], "create_batch_sync() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.create_batch_sync"]], "create_factory() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.create_factory"]], "create_sync() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.create_sync"]], "extract_field_build_parameters() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.extract_field_build_parameters"]], "get_factory_fields() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.get_factory_fields"]], "get_field_value() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.get_field_value"]], "get_field_value_coverage() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.get_field_value_coverage"]], "get_model_fields() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.get_model_fields"]], "get_provider_map() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.get_provider_map"]], "is_batch_factory_type() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.is_batch_factory_type"]], "is_factory_type() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.is_factory_type"]], "is_ignored_type() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.is_ignored_type"]], "is_supported_type() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.is_supported_type"]], "polyfactory.factories.base": [[9, "module-polyfactory.factories.base"]], "process_kwargs() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.process_kwargs"]], "process_kwargs_coverage() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.process_kwargs_coverage"]], "seed_random() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.seed_random"]], "should_set_field_value() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.should_set_field_value"]], "should_set_none_value() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.should_set_none_value"]], "should_use_default_value() (polyfactory.factories.base.basefactory class method)": [[9, "polyfactory.factories.base.BaseFactory.should_use_default_value"]], "beaniedocumentfactory (class in polyfactory.factories.beanie_odm_factory)": [[10, "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory"]], "beaniepersistencehandler (class in polyfactory.factories.beanie_odm_factory)": [[10, "polyfactory.factories.beanie_odm_factory.BeaniePersistenceHandler"]], "__async_persistence__ (polyfactory.factories.beanie_odm_factory.beaniedocumentfactory attribute)": [[10, "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.__async_persistence__"]], "__is_base_factory__ (polyfactory.factories.beanie_odm_factory.beaniedocumentfactory attribute)": [[10, "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.__is_base_factory__"]], "get_field_value() (polyfactory.factories.beanie_odm_factory.beaniedocumentfactory class method)": [[10, "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.get_field_value"]], "is_supported_type() (polyfactory.factories.beanie_odm_factory.beaniedocumentfactory class method)": [[10, "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.is_supported_type"]], "polyfactory.factories.beanie_odm_factory": [[10, "module-polyfactory.factories.beanie_odm_factory"]], "save() (polyfactory.factories.beanie_odm_factory.beaniepersistencehandler method)": [[10, "polyfactory.factories.beanie_odm_factory.BeaniePersistenceHandler.save"]], "save_many() (polyfactory.factories.beanie_odm_factory.beaniepersistencehandler method)": [[10, "polyfactory.factories.beanie_odm_factory.BeaniePersistenceHandler.save_many"]], "dataclassfactory (class in polyfactory.factories.dataclass_factory)": [[11, "polyfactory.factories.dataclass_factory.DataclassFactory"]], "__is_base_factory__ (polyfactory.factories.dataclass_factory.dataclassfactory attribute)": [[11, "polyfactory.factories.dataclass_factory.DataclassFactory.__is_base_factory__"]], "get_model_fields() (polyfactory.factories.dataclass_factory.dataclassfactory class method)": [[11, "polyfactory.factories.dataclass_factory.DataclassFactory.get_model_fields"]], "is_supported_type() (polyfactory.factories.dataclass_factory.dataclassfactory class method)": [[11, "polyfactory.factories.dataclass_factory.DataclassFactory.is_supported_type"]], "polyfactory.factories.dataclass_factory": [[11, "module-polyfactory.factories.dataclass_factory"]], "msgspecfactory (class in polyfactory.factories.msgspec_factory)": [[13, "polyfactory.factories.msgspec_factory.MsgspecFactory"]], "__is_base_factory__ (polyfactory.factories.msgspec_factory.msgspecfactory attribute)": [[13, "polyfactory.factories.msgspec_factory.MsgspecFactory.__is_base_factory__"]], "get_model_fields() (polyfactory.factories.msgspec_factory.msgspecfactory class method)": [[13, "polyfactory.factories.msgspec_factory.MsgspecFactory.get_model_fields"]], "get_provider_map() (polyfactory.factories.msgspec_factory.msgspecfactory class method)": [[13, "polyfactory.factories.msgspec_factory.MsgspecFactory.get_provider_map"]], "is_supported_type() (polyfactory.factories.msgspec_factory.msgspecfactory class method)": [[13, "polyfactory.factories.msgspec_factory.MsgspecFactory.is_supported_type"]], "polyfactory.factories.msgspec_factory": [[13, "module-polyfactory.factories.msgspec_factory"]], "odmanticmodelfactory (class in polyfactory.factories.odmantic_odm_factory)": [[14, "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory"]], "__is_base_factory__ (polyfactory.factories.odmantic_odm_factory.odmanticmodelfactory attribute)": [[14, "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory.__is_base_factory__"]], "get_provider_map() (polyfactory.factories.odmantic_odm_factory.odmanticmodelfactory class method)": [[14, "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory.get_provider_map"]], "is_supported_type() (polyfactory.factories.odmantic_odm_factory.odmanticmodelfactory class method)": [[14, "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory.is_supported_type"]], "polyfactory.factories.odmantic_odm_factory": [[14, "module-polyfactory.factories.odmantic_odm_factory"]], "modelfactory (class in polyfactory.factories.pydantic_factory)": [[15, "polyfactory.factories.pydantic_factory.ModelFactory"]], "pydanticbuildcontext (class in polyfactory.factories.pydantic_factory)": [[15, "polyfactory.factories.pydantic_factory.PydanticBuildContext"]], "pydanticconstraints (class in polyfactory.factories.pydantic_factory)": [[15, "polyfactory.factories.pydantic_factory.PydanticConstraints"]], "pydanticfieldmeta (class in polyfactory.factories.pydantic_factory)": [[15, "polyfactory.factories.pydantic_factory.PydanticFieldMeta"]], "__config_keys__ (polyfactory.factories.pydantic_factory.modelfactory attribute)": [[15, "polyfactory.factories.pydantic_factory.ModelFactory.__config_keys__"]], "__init__() (polyfactory.factories.pydantic_factory.pydanticfieldmeta method)": [[15, "polyfactory.factories.pydantic_factory.PydanticFieldMeta.__init__"]], "__is_base_factory__ (polyfactory.factories.pydantic_factory.modelfactory attribute)": [[15, "polyfactory.factories.pydantic_factory.ModelFactory.__is_base_factory__"]], "__use_examples__ (polyfactory.factories.pydantic_factory.modelfactory attribute)": [[15, "polyfactory.factories.pydantic_factory.ModelFactory.__use_examples__"]], "build() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[15, "polyfactory.factories.pydantic_factory.ModelFactory.build"]], "coverage() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[15, "polyfactory.factories.pydantic_factory.ModelFactory.coverage"]], "from_field_info() (polyfactory.factories.pydantic_factory.pydanticfieldmeta class method)": [[15, "polyfactory.factories.pydantic_factory.PydanticFieldMeta.from_field_info"]], "from_model_field() (polyfactory.factories.pydantic_factory.pydanticfieldmeta class method)": [[15, "polyfactory.factories.pydantic_factory.PydanticFieldMeta.from_model_field"]], "get_constraints_metadata() (polyfactory.factories.pydantic_factory.pydanticfieldmeta class method)": [[15, "polyfactory.factories.pydantic_factory.PydanticFieldMeta.get_constraints_metadata"]], "get_field_value() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[15, "polyfactory.factories.pydantic_factory.ModelFactory.get_field_value"]], "get_model_fields() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[15, "polyfactory.factories.pydantic_factory.ModelFactory.get_model_fields"]], "get_provider_map() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[15, "polyfactory.factories.pydantic_factory.ModelFactory.get_provider_map"]], "is_custom_root_field() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[15, "polyfactory.factories.pydantic_factory.ModelFactory.is_custom_root_field"]], "is_supported_type() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[15, "polyfactory.factories.pydantic_factory.ModelFactory.is_supported_type"]], "polyfactory.factories.pydantic_factory": [[15, "module-polyfactory.factories.pydantic_factory"]], "should_set_field_value() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[15, "polyfactory.factories.pydantic_factory.ModelFactory.should_set_field_value"]], "sqlaasyncpersistence (class in polyfactory.factories.sqlalchemy_factory)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence"]], "sqlasyncpersistence (class in polyfactory.factories.sqlalchemy_factory)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence"]], "sqlalchemyfactory (class in polyfactory.factories.sqlalchemy_factory)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory"]], "__config_keys__ (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory attribute)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.__config_keys__"]], "__init__() (polyfactory.factories.sqlalchemy_factory.sqlaasyncpersistence method)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence.__init__"]], "__init__() (polyfactory.factories.sqlalchemy_factory.sqlasyncpersistence method)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence.__init__"]], "__is_base_factory__ (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory attribute)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.__is_base_factory__"]], "__set_association_proxy__ (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory attribute)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.__set_association_proxy__"]], "__set_foreign_keys__ (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory attribute)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.__set_foreign_keys__"]], "__set_primary_key__ (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory attribute)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.__set_primary_key__"]], "__set_relationships__ (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory attribute)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.__set_relationships__"]], "get_model_fields() (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory class method)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.get_model_fields"]], "get_provider_map() (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory class method)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.get_provider_map"]], "get_sqlalchemy_constraints() (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory class method)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.get_sqlalchemy_constraints"]], "get_sqlalchemy_types() (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory class method)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.get_sqlalchemy_types"]], "is_supported_type() (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory class method)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.is_supported_type"]], "polyfactory.factories.sqlalchemy_factory": [[16, "module-polyfactory.factories.sqlalchemy_factory"]], "save() (polyfactory.factories.sqlalchemy_factory.sqlaasyncpersistence method)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence.save"]], "save() (polyfactory.factories.sqlalchemy_factory.sqlasyncpersistence method)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence.save"]], "save_many() (polyfactory.factories.sqlalchemy_factory.sqlaasyncpersistence method)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence.save_many"]], "save_many() (polyfactory.factories.sqlalchemy_factory.sqlasyncpersistence method)": [[16, "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence.save_many"]], "typeddictfactory (class in polyfactory.factories.typed_dict_factory)": [[17, "polyfactory.factories.typed_dict_factory.TypedDictFactory"]], "__is_base_factory__ (polyfactory.factories.typed_dict_factory.typeddictfactory attribute)": [[17, "polyfactory.factories.typed_dict_factory.TypedDictFactory.__is_base_factory__"]], "get_model_fields() (polyfactory.factories.typed_dict_factory.typeddictfactory class method)": [[17, "polyfactory.factories.typed_dict_factory.TypedDictFactory.get_model_fields"]], "is_supported_type() (polyfactory.factories.typed_dict_factory.typeddictfactory class method)": [[17, "polyfactory.factories.typed_dict_factory.TypedDictFactory.is_supported_type"]], "polyfactory.factories.typed_dict_factory": [[17, "module-polyfactory.factories.typed_dict_factory"]], "constraints (class in polyfactory.field_meta)": [[18, "polyfactory.field_meta.Constraints"]], "fieldmeta (class in polyfactory.field_meta)": [[18, "polyfactory.field_meta.FieldMeta"]], "null (class in polyfactory.field_meta)": [[18, "polyfactory.field_meta.Null"]], "urlconstraints (class in polyfactory.field_meta)": [[18, "polyfactory.field_meta.UrlConstraints"]], "__init__() (polyfactory.field_meta.fieldmeta method)": [[18, "polyfactory.field_meta.FieldMeta.__init__"]], "__repr__() (polyfactory.field_meta.fieldmeta method)": [[18, "polyfactory.field_meta.FieldMeta.__repr__"]], "from_type() (polyfactory.field_meta.fieldmeta class method)": [[18, "polyfactory.field_meta.FieldMeta.from_type"]], "get_constraints_metadata() (polyfactory.field_meta.fieldmeta class method)": [[18, "polyfactory.field_meta.FieldMeta.get_constraints_metadata"]], "polyfactory.field_meta": [[18, "module-polyfactory.field_meta"]], "type_args (polyfactory.field_meta.fieldmeta property)": [[18, "polyfactory.field_meta.FieldMeta.type_args"]], "fixture (class in polyfactory.fields)": [[19, "polyfactory.fields.Fixture"]], "ignore (class in polyfactory.fields)": [[19, "polyfactory.fields.Ignore"]], "postgenerated (class in polyfactory.fields)": [[19, "polyfactory.fields.PostGenerated"]], "require (class in polyfactory.fields)": [[19, "polyfactory.fields.Require"]], "use (class in polyfactory.fields)": [[19, "polyfactory.fields.Use"]], "wrappedcallable (class in polyfactory.fields)": [[19, "polyfactory.fields.WrappedCallable"]], "__init__() (polyfactory.fields.fixture method)": [[19, "polyfactory.fields.Fixture.__init__"]], "__init__() (polyfactory.fields.postgenerated method)": [[19, "polyfactory.fields.PostGenerated.__init__"]], "__init__() (polyfactory.fields.use method)": [[19, "polyfactory.fields.Use.__init__"]], "polyfactory.fields": [[19, "module-polyfactory.fields"]], "to_value() (polyfactory.fields.fixture method)": [[19, "polyfactory.fields.Fixture.to_value"]], "to_value() (polyfactory.fields.postgenerated method)": [[19, "polyfactory.fields.PostGenerated.to_value"]], "to_value() (polyfactory.fields.use method)": [[19, "polyfactory.fields.Use.to_value"]], "asyncpersistenceprotocol (class in polyfactory.persistence)": [[21, "polyfactory.persistence.AsyncPersistenceProtocol"]], "syncpersistenceprotocol (class in polyfactory.persistence)": [[21, "polyfactory.persistence.SyncPersistenceProtocol"]], "__init__() (polyfactory.persistence.asyncpersistenceprotocol method)": [[21, "polyfactory.persistence.AsyncPersistenceProtocol.__init__"]], "__init__() (polyfactory.persistence.syncpersistenceprotocol method)": [[21, "polyfactory.persistence.SyncPersistenceProtocol.__init__"]], "polyfactory.persistence": [[21, "module-polyfactory.persistence"]], "save() (polyfactory.persistence.asyncpersistenceprotocol method)": [[21, "polyfactory.persistence.AsyncPersistenceProtocol.save"]], "save() (polyfactory.persistence.syncpersistenceprotocol method)": [[21, "polyfactory.persistence.SyncPersistenceProtocol.save"]], "save_many() (polyfactory.persistence.asyncpersistenceprotocol method)": [[21, "polyfactory.persistence.AsyncPersistenceProtocol.save_many"]], "save_many() (polyfactory.persistence.syncpersistenceprotocol method)": [[21, "polyfactory.persistence.SyncPersistenceProtocol.save_many"]], "factoryfixture (class in polyfactory.pytest_plugin)": [[22, "polyfactory.pytest_plugin.FactoryFixture"]], "__call__() (polyfactory.pytest_plugin.factoryfixture method)": [[22, "polyfactory.pytest_plugin.FactoryFixture.__call__"]], "__init__() (polyfactory.pytest_plugin.factoryfixture method)": [[22, "polyfactory.pytest_plugin.FactoryFixture.__init__"]], "polyfactory.pytest_plugin": [[22, "module-polyfactory.pytest_plugin"]], "register_fixture() (in module polyfactory.pytest_plugin)": [[22, "polyfactory.pytest_plugin.register_fixture"]], "handle_collection_type() (in module polyfactory.value_generators.complex_types)": [[23, "polyfactory.value_generators.complex_types.handle_collection_type"]], "handle_collection_type_coverage() (in module polyfactory.value_generators.complex_types)": [[23, "polyfactory.value_generators.complex_types.handle_collection_type_coverage"]], "polyfactory.value_generators.complex_types": [[23, "module-polyfactory.value_generators.complex_types"]], "handle_constrained_collection() (in module polyfactory.value_generators.constrained_collections)": [[24, "polyfactory.value_generators.constrained_collections.handle_constrained_collection"]], "handle_constrained_mapping() (in module polyfactory.value_generators.constrained_collections)": [[24, "polyfactory.value_generators.constrained_collections.handle_constrained_mapping"]], "polyfactory.value_generators.constrained_collections": [[24, "module-polyfactory.value_generators.constrained_collections"]], "handle_constrained_date() (in module polyfactory.value_generators.constrained_dates)": [[25, "polyfactory.value_generators.constrained_dates.handle_constrained_date"]], "polyfactory.value_generators.constrained_dates": [[25, "module-polyfactory.value_generators.constrained_dates"]], "numbergeneratorprotocol (class in polyfactory.value_generators.constrained_numbers)": [[26, "polyfactory.value_generators.constrained_numbers.NumberGeneratorProtocol"]], "__call__() (polyfactory.value_generators.constrained_numbers.numbergeneratorprotocol method)": [[26, "polyfactory.value_generators.constrained_numbers.NumberGeneratorProtocol.__call__"]], "__init__() (polyfactory.value_generators.constrained_numbers.numbergeneratorprotocol method)": [[26, "polyfactory.value_generators.constrained_numbers.NumberGeneratorProtocol.__init__"]], "almost_equal_floats() (in module polyfactory.value_generators.constrained_numbers)": [[26, "polyfactory.value_generators.constrained_numbers.almost_equal_floats"]], "generate_constrained_number() (in module polyfactory.value_generators.constrained_numbers)": [[26, "polyfactory.value_generators.constrained_numbers.generate_constrained_number"]], "get_constrained_number_range() (in module polyfactory.value_generators.constrained_numbers)": [[26, "polyfactory.value_generators.constrained_numbers.get_constrained_number_range"]], "get_increment() (in module polyfactory.value_generators.constrained_numbers)": [[26, "polyfactory.value_generators.constrained_numbers.get_increment"]], "get_value_or_none() (in module polyfactory.value_generators.constrained_numbers)": [[26, "polyfactory.value_generators.constrained_numbers.get_value_or_none"]], "handle_constrained_decimal() (in module polyfactory.value_generators.constrained_numbers)": [[26, "polyfactory.value_generators.constrained_numbers.handle_constrained_decimal"]], "handle_constrained_float() (in module polyfactory.value_generators.constrained_numbers)": [[26, "polyfactory.value_generators.constrained_numbers.handle_constrained_float"]], "handle_constrained_int() (in module polyfactory.value_generators.constrained_numbers)": [[26, "polyfactory.value_generators.constrained_numbers.handle_constrained_int"]], "handle_decimal_length() (in module polyfactory.value_generators.constrained_numbers)": [[26, "polyfactory.value_generators.constrained_numbers.handle_decimal_length"]], "is_multiply_of_multiple_of_in_range() (in module polyfactory.value_generators.constrained_numbers)": [[26, "polyfactory.value_generators.constrained_numbers.is_multiply_of_multiple_of_in_range"]], "passes_pydantic_multiple_validator() (in module polyfactory.value_generators.constrained_numbers)": [[26, "polyfactory.value_generators.constrained_numbers.passes_pydantic_multiple_validator"]], "polyfactory.value_generators.constrained_numbers": [[26, "module-polyfactory.value_generators.constrained_numbers"]], "validate_max_digits() (in module polyfactory.value_generators.constrained_numbers)": [[26, "polyfactory.value_generators.constrained_numbers.validate_max_digits"]], "handle_constrained_string_or_bytes() (in module polyfactory.value_generators.constrained_strings)": [[27, "polyfactory.value_generators.constrained_strings.handle_constrained_string_or_bytes"]], "polyfactory.value_generators.constrained_strings": [[27, "module-polyfactory.value_generators.constrained_strings"]], "create_random_boolean() (in module polyfactory.value_generators.primitives)": [[29, "polyfactory.value_generators.primitives.create_random_boolean"]], "create_random_bytes() (in module polyfactory.value_generators.primitives)": [[29, "polyfactory.value_generators.primitives.create_random_bytes"]], "create_random_decimal() (in module polyfactory.value_generators.primitives)": [[29, "polyfactory.value_generators.primitives.create_random_decimal"]], "create_random_float() (in module polyfactory.value_generators.primitives)": [[29, "polyfactory.value_generators.primitives.create_random_float"]], "create_random_integer() (in module polyfactory.value_generators.primitives)": [[29, "polyfactory.value_generators.primitives.create_random_integer"]], "create_random_string() (in module polyfactory.value_generators.primitives)": [[29, "polyfactory.value_generators.primitives.create_random_string"]], "polyfactory.value_generators.primitives": [[29, "module-polyfactory.value_generators.primitives"]]}})