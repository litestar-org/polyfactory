Search.setIndex({"docnames": ["changelog", "contribution-guide", "getting-started", "index", "reference/constants", "reference/decorators", "reference/exceptions", "reference/factories/attrs_factory", "reference/factories/base", "reference/factories/beanie_odm_factory", "reference/factories/dataclass_factory", "reference/factories/index", "reference/factories/msgspec_factory", "reference/factories/odmantic_odm_factory", "reference/factories/pydantic_factory", "reference/factories/sqlalchemy_factory", "reference/factories/typed_dict_factory", "reference/field_meta", "reference/fields", "reference/index", "reference/persistence", "reference/pytest_plugin", "reference/value_generators/complex_types", "reference/value_generators/constrained_collections", "reference/value_generators/constrained_dates", "reference/value_generators/constrained_numbers", "reference/value_generators/constrained_strings", "reference/value_generators/index", "reference/value_generators/primitives", "releases", "usage/configuration", "usage/declaring_factories", "usage/decorators", "usage/fields", "usage/fixtures", "usage/handling_custom_types", "usage/index", "usage/library_factories/index", "usage/library_factories/sqlalchemy_factory", "usage/model_coverage"], "filenames": ["changelog.rst", "contribution-guide.rst", "getting-started.rst", "index.rst", "reference/constants.rst", "reference/decorators.rst", "reference/exceptions.rst", "reference/factories/attrs_factory.rst", "reference/factories/base.rst", "reference/factories/beanie_odm_factory.rst", "reference/factories/dataclass_factory.rst", "reference/factories/index.rst", "reference/factories/msgspec_factory.rst", "reference/factories/odmantic_odm_factory.rst", "reference/factories/pydantic_factory.rst", "reference/factories/sqlalchemy_factory.rst", "reference/factories/typed_dict_factory.rst", "reference/field_meta.rst", "reference/fields.rst", "reference/index.rst", "reference/persistence.rst", "reference/pytest_plugin.rst", "reference/value_generators/complex_types.rst", "reference/value_generators/constrained_collections.rst", "reference/value_generators/constrained_dates.rst", "reference/value_generators/constrained_numbers.rst", "reference/value_generators/constrained_strings.rst", "reference/value_generators/index.rst", "reference/value_generators/primitives.rst", "releases.rst", "usage/configuration.rst", "usage/declaring_factories.rst", "usage/decorators.rst", "usage/fields.rst", "usage/fixtures.rst", "usage/handling_custom_types.rst", "usage/index.rst", "usage/library_factories/index.rst", "usage/library_factories/sqlalchemy_factory.rst", "usage/model_coverage.rst"], "titles": ["Changelog", "Contributing", "Getting Started", "Sponsors", "constants", "decorators", "exceptions", "attrs_factory", "base_factory", "beanie_odm_factory", "dataclass_factory", "factories", "msgspec_factory", "odmantic_odm_factory", "pydantic_factory", "sqlalchemy_factory", "typed_dict_factory", "field_meta", "fields", "API Reference", "persistence", "pytest_plugin", "complex_types", "constrained_collections", "constrained_dates", "constrained_numbers", "constrained_strings", "value_generators", "primitives", "Polyfactory Releases", "Factory Configuration", "Declaring Factories", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">post_generated</span></code> decorator", "Factory Fields", "Pytest fixtures", "Handling Custom Types", "Usage Guide", "Polyfactory Factories", "SQLAlchemyFactory", "Model coverage generation"], "terms": {"all": [0, 1, 7, 8, 9, 10, 12, 13, 14, 15, 16, 29, 30, 32, 33, 37, 39], "commit": [0, 1, 38], "thi": [0, 1, 2, 4, 7, 8, 12, 13, 14, 15, 17, 18, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "project": [0, 3], "file": [0, 1], "67c5720": 0, "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 25, 29, 30, 31, 32, 33, 34, 35, 38, 39], "last": 0, "befor": [0, 1, 29, 39], "chang": [0, 1, 2, 29], "24701eb": 0, "constrain": [0, 23, 25, 26], "length": [0, 8, 14, 17, 25, 26, 28, 39], "list": [0, 7, 8, 9, 10, 12, 14, 15, 16, 17, 20, 23, 30, 31, 33, 34, 37, 38, 39], "570": 0, "marcozzxx810": 0, "6f5b78c": 0, "us": [0, 1, 2, 4, 6, 8, 9, 14, 17, 18, 21, 25, 29, 31, 32, 34, 35, 36, 38, 39], "provid": [0, 1, 3, 6, 8, 30, 33, 35, 38, 39], "map": [0, 4, 8, 12, 13, 14, 15, 23, 33, 35, 38], "ani": [0, 1, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 22, 23, 29, 30, 31, 33, 35, 37], "coverag": [0, 8, 14, 22, 36], "574": 0, "adhtruong": 0, "4aaf656": 0, "tupl": [0, 8, 15, 17, 25, 30], "random": [0, 8, 14, 17, 25, 26, 28, 33], "573": 0, "9a83ad6": 0, "adjust": 0, "min": 0, "max": [0, 25], "item": [0, 23, 30], "valid": [0, 14, 25, 31, 33], "set": [0, 7, 8, 14, 23, 38], "enum": [0, 30, 31, 33], "field": [0, 5, 7, 8, 9, 10, 12, 14, 15, 16, 17, 19, 22, 23, 31, 32, 36, 38, 39], "567": 0, "adrianeboyd": 0, "135d7fe": 0, "handl": [0, 14, 22, 25, 26, 36], "option": [0, 1, 8, 18, 21, 25, 34, 37, 39], "type": [0, 2, 3, 4, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 30, 31, 33, 34, 36, 37, 38], "recurs": [0, 22, 39], "model": [0, 2, 3, 7, 8, 10, 12, 13, 14, 15, 16, 17, 21, 30, 31, 36, 37, 38], "584": 0, "6440faa": 0, "collect": [0, 3, 8, 14, 17, 23], "587": 0, "841831d": 0, "swap": 0, "word": 0, "its": [0, 2, 30, 32, 33], "antonym": 0, "match": [0, 30], "context": 0, "575": 0, "unclegoogl": 0, "c0c2704": 0, "register_fixtur": [0, 21, 34], "return": [0, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 38], "annot": [0, 4, 7, 8, 14, 17, 39], "581": 0, "giulioindev": 0, "d75b1d2": 0, "updat": [0, 3], "pre": [0, 1], "depend": [0, 1, 6, 25, 32, 37], "571": 0, "see": [0, 3, 30, 39], "23281ee": 0, "diff": 0, "3bb97e0": 0, "nest": 0, "564": 0, "sam": 0, "bump": 0, "patch": [0, 29], "version": [0, 1, 2, 31], "guac": 0, "4928f07": 0, "86869c2": 0, "gener": [0, 1, 2, 3, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 22, 23, 24, 25, 28, 30, 31, 32, 33, 35, 36, 38], "valu": [0, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 33, 35, 39], "522": 0, "cbe6dfc": 0, "pydant": [0, 3, 14, 25, 26, 31, 37], "factory_use_construct": [0, 14], "propag": [0, 34], "549": 0, "reskov": 0, "b09bf64": 0, "send": 0, "correct": 0, "field_meta": [0, 7, 8, 9, 10, 12, 14, 15, 16, 19, 22, 23, 25], "avoid": [0, 29, 33], "over": 0, "527": 0, "vegemash": 0, "740fd34": 0, "link": [0, 1], "github": [0, 1, 3], "repo": 0, "547": 0, "alc": 0, "c34e72": 0, "add": [0, 1, 25, 30, 35, 38], "contributor": 0, "code": [0, 3, 35], "556": 0, "allcontributor": 0, "bot": 0, "3320989": 0, "562": 0, "f8e9318": 0, "migrat": [0, 29], "format": [0, 1], "ruff": 0, "554": 0, "36a9cc1": 0, "561": 0, "1d1c7f9": 0, "719495e": 0, "ignor": [0, 8, 18, 30, 39], "non": [0, 7, 8, 33], "column": [0, 15], "510": 0, "bb04b4e": 0, "favour": 0, "sa": 0, "impl": 0, "513": 0, "0032b5e": 0, "footer": 0, "jacobcoffe": 0, "5fd7d6c": 0, "resolv": [0, 7, 38], "mypi": 0, "issu": [0, 1, 3], "540": 0, "9e6edab": 0, "json": [0, 15], "error": [0, 6, 8, 15, 39], "pg": 0, "dialect": [0, 15], "default": [0, 8, 14, 17, 33, 35, 38], "e": [0, 25, 33, 37], "542": 0, "wangxin688": 0, "01d1dbe": 0, "appli": [0, 1, 29, 31], "organ": [0, 3, 29], "theme": 0, "533": 0, "5a0a5b": 0, "polyfactori": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39], "land": 0, "page": 0, "535": 0, "2f781ee": 0, "544": 0, "1792c19": 0, "support": [0, 2, 3, 7, 8, 9, 10, 12, 13, 14, 15, 16, 30, 31, 34, 38], "arrai": 0, "other": [0, 8, 18, 29, 30, 31, 33, 37, 38], "530": 0, "013135c": 0, "refresh": 0, "object": [0, 2, 5, 8, 14, 17, 18, 21], "async_sess": 0, "after": [0, 18, 32], "db": 0, "541": 0, "e4695a7": 0, "copi": 0, "mutabl": 0, "arg": [0, 17, 18, 20, 25, 33], "529": 0, "fac9fba": 0, "upgrad": 0, "517": 0, "3da64f6": 0, "rst": 0, "537": 0, "impaktor": 0, "3e2d22c": 0, "maintain": 0, "email": 0, "545": 0, "6507c6d": 0, "codecov": 0, "badg": 0, "536": 0, "b44c68b": 0, "c4e3d91": 0, "prefer": 0, "sqlalchemi": [0, 15, 37, 38], "exist": [0, 8, 9, 30, 31], "502": 0, "cofin": 0, "0f8f9e8": 0, "union": [0, 30, 31, 33, 34], "properli": 0, "499": 0, "61c8892": 0, "typo": 0, "use_default": 0, "497": 0, "timdumol": 0, "9e34fa7": 0, "498": 0, "46ecdc6": 0, "v1": 0, "simultan": 0, "492": 0, "1078230": 0, "pdm": [0, 1], "setup": [0, 1], "from": [0, 2, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 21, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39], "496": 0, "dependabot": 0, "2acfdc6": 0, "order": [0, 1], "import": [0, 2, 30, 31, 32, 33, 34, 35, 38, 39], "509": 0, "1ae2d52": 0, "move": 0, "place": [0, 25, 30, 35], "495": 0, "83f2992": 0, "fa50e20": 0, "491": 0, "8dc8e1a": 0, "fb4e50a": 0, "extens": [0, 8], "471": 0, "hsorski": 0, "40538c9": 0, "factori": [0, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 32, 34, 36, 38, 39], "onli": [0, 8, 14, 15, 29, 30, 31, 33, 37], "defin": [0, 8, 29, 31, 33, 35, 39], "479": 0, "c22633c": 0, "477": 0, "b9c2127": 0, "broken": 0, "uri": 0, "485": 0, "wer153": 0, "8f96365": 0, "486": 0, "7ec9eb0": 0, "block": 0, "484": 0, "b33e662": 0, "allow": [0, 8, 12, 13, 14, 15, 18, 21, 33, 38], "base": [0, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25, 29, 31, 33, 37, 38], "configur": [0, 6, 15, 31, 36], "472": 0, "80bd012": 0, "guard": 0, "468": 0, "c7556e8": 0, "pass": [0, 2, 7, 8, 9, 14, 15, 18, 22, 23, 25, 33, 35], "config": [0, 8, 15, 21, 35], "483": 0, "94ad561": 0, "alia": [0, 9, 14, 31], "487": 0, "bb433a4": 0, "478": 0, "2b57706": 0, "action": [0, 1], "cach": [0, 30], "488": 0, "minor": [0, 29], "fe05c4": 0, "b479e4a": 0, "flatten_annot": 0, "behaviour": 0, "440": [0, 1], "6961eaa": 0, "don": [0, 30, 31], "t": [0, 7, 8, 9, 10, 12, 13, 14, 15, 18, 20, 21, 23, 25, 26, 30, 31, 35, 38], "blindli": 0, "suppress": 0, "valueerror": 0, "450": 0, "623d8c9": 0, "__model__": [0, 2, 7, 8, 14, 30, 31], "452": 0, "mityuha": 0, "1407f07": 0, "script": 0, "438": 0, "1a0da0d": 0, "python": [0, 4, 25], "448": 0, "231d311": 0, "codeql": 0, "458": 0, "2695880": 0, "dawidd6": 0, "download": 0, "artifact": 0, "459": 0, "fe342e4": 0, "upload": 0, "461": 0, "a371d7f": 0, "462": 0, "0e2f824": 0, "465": 0, "b7b88a8": 0, "70d49fd": 0, "case": [0, 15, 29, 30, 31, 33, 35, 37, 39], "where": [0, 1, 3, 15, 33, 39], "init": 0, "fals": [0, 8, 14, 15, 21, 23, 26, 28, 30, 38], "dataclass": [0, 2, 3, 10, 30, 31, 32, 33, 34, 35, 37, 39], "attr": [0, 7, 31, 37], "433": 0, "6b7512d": 0, "correctli": [0, 35], "436": 0, "2bad951": 0, "g0di": 0, "432": 0, "155f4a4": 0, "autofil": 0, "argument": [0, 7, 8, 22, 23, 31], "when": [0, 1, 6, 8, 14, 29, 30, 32, 33, 35, 39], "call": [0, 18, 21, 30, 33, 34], "create_factori": [0, 8, 31, 38], "receiv": [0, 29, 33], "429": 0, "b1e8b5": 0, "batch": [0, 8, 14, 18, 33, 34, 39], "390": 0, "63aa272": 0, "caaee0f": 0, "requir": [0, 1, 2, 6, 7, 8, 18, 30, 37, 38], "nonrequir": 0, "422": 0, "5d64bde": 0, "respect": [0, 30, 37], "overrid": [0, 8, 12, 13, 14, 15, 30, 31, 35], "420": 0, "julioolvr": 0, "e819c2f": 0, "johnraz": 0, "413": 0, "0631d80": 0, "instal": [0, 1, 6, 38], "414": 0, "11f234c": 0, "reorder": 0, "418": 0, "a0465c6": 0, "425": 0, "5fefa41": 0, "check": [0, 1, 8], "declar": [0, 30, 33, 34, 36, 38], "belong": 0, "405": 0, "e1f7a47": 0, "constraint": [0, 14, 17, 24, 25, 28], "411": 0, "0717951": 0, "deprec": 0, "fieldmeta": [0, 7, 8, 9, 10, 12, 14, 15, 16, 17, 22, 23], "param": [0, 14], "417": 0, "prepar": 0, "427": 0, "f2c6fe1": 0, "8c88293": 0, "forward": [0, 7], "refer": [0, 30, 35], "383": 0, "0064240": 0, "makefil": 0, "399": 0, "89cd351": 0, "decoupl": 0, "407": 0, "c1edfd5": 0, "404": 0, "cabe03c": 0, "385": 0, "410": 0, "79360f1": 0, "creation": 0, "396": 0, "f555636": 0, "msgspec": [0, 2, 3, 12, 37], "api": [0, 3, 30, 33], "409": 0, "8ef78b8": 0, "altern": [0, 39], "389": 0, "eddb978": 0, "full": [0, 8, 14, 38, 39], "384": 0, "ebf30ff": 0, "2a20513": 0, "hint": [0, 2, 3], "360": 0, "6cc7b03": 0, "attrsfactori": [0, 7, 31, 37], "370": 0, "8e41372": 0, "fixtur": [0, 18, 21, 36], "size": [0, 1, 8, 18, 30, 33, 34], "373": 0, "87a6749": 0, "371": 0, "anthonyjgraff": 0, "6f4b712": 0, "375": 0, "64c4e6c": 0, "374": 0, "more": [0, 2, 3, 29, 30, 34], "380": 0, "c76ffc9": 0, "implement": [0, 3, 29, 31], "sqla": [0, 38], "369": 0, "fc0bf61": 0, "provinzkraut": 0, "f67f36e": 0, "contributorsrc": 0, "377": 0, "66e9db1": 0, "ec177ec": 0, "make": [0, 1, 29, 33, 37], "pytest": [0, 18, 21, 30, 33, 36], "stricter": 0, "363": 0, "sobolevn": 0, "95d24cb": 0, "skip": 0, "variabl": [0, 31], "dict": [0, 8, 12, 13, 14, 15, 18, 30, 31, 33, 35, 37], "odmant": [0, 2, 13, 37], "372": 0, "adccaf0": 0, "enabl": [0, 3, 30], "publish": [0, 1], "pypi": 0, "trust": 0, "368": 0, "7af5469": 0, "f639c26": 0, "355": 0, "minimum": [0, 8, 14, 17, 25, 26, 28, 39], "359": 0, "091ee36": 0, "comment": 0, "custom": [0, 1, 2, 14, 25, 31, 33, 36], "361": 0, "7b46b57": 0, "3dba4b": 0, "venv": 0, "352": 0, "257852a": 0, "miss": [0, 6], "builtin": 0, "registr": 0, "351": 0, "e4daf5f": 0, "346": 0, "9ffe596": 0, "expos": [0, 31], "350": 0, "7a5a1c9": 0, "353": 0, "4f2e5d8": 0, "goldzih": 0, "161c0f6": 0, "checkout": [0, 37], "349": 0, "354": 0, "710d3ce": 0, "3ec7de8": 0, "ensur": 0, "faker": [0, 8, 24], "instanc": [0, 7, 8, 9, 10, 12, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 28, 30, 33, 35, 39], "331": 0, "ea41bb": 0, "185504a9": 0, "339": 0, "510fabd": 0, "337": 0, "0228d3d": 0, "": [0, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 25, 30, 33, 35], "awaredatetim": 0, "mock": [0, 2, 3, 8, 9, 30, 33, 35], "333": 0, "bf04fa6": 0, "338": 0, "04a504b": 0, "725835e": 0, "core": [0, 2], "329": 0, "3e45f8f": 0, "2733497": 0, "315": 0, "3aeaa0c": 0, "string": [0, 7, 26, 28, 35], "determinist": [0, 30], "seed": [0, 8, 33], "becaus": [0, 2, 9, 30, 34], "urandom": 0, "seedabl": 0, "319": 0, "klimantj": 0, "61f1e2e": 0, "321": 0, "2400fbe": 0, "includ": [0, 33, 37], "323": 0, "tcrasset": 0, "8ff7e0f": 0, "320": 0, "9def5b1": 0, "324": 0, "5543e66": 0, "health": 0, "322": 0, "5abe4b3": 0, "templat": 0, "e703593": 0, "0bfa3b4": 0, "litestar": [0, 3, 29], "renam": 0, "new": [0, 2, 3, 8, 29, 30], "96c61ae": 0, "313": 0, "d385561": 0, "codeown": 0, "311": 0, "86585d0": 0, "7405901": 0, "remov": [0, 29], "strai": 0, "306": 0, "b1f8f6e": 0, "charact": 0, "readm": 0, "c936389": 0, "poetri": 0, "308": 0, "09f896c": 0, "contribut": [0, 3], "310": 0, "3fadfb7": 0, "resolut": 0, "309": 0, "d331ae0": 0, "a2be35a": 0, "switch": 0, "seed_inst": 0, "305": 0, "f54f9f3": 0, "300": 0, "301": 0, "79e8145": 0, "7761834": 0, "abdulhaq": 0, "297": 0, "2b050bb": 0, "16cbc99": 0, "956472c": 0, "sourceri": 0, "5cdfed3": 0, "79e50df": 0, "35e10da": 0, "263": 0, "d592836": 0, "local": [0, 30], "267": 0, "gsakki": 0, "2b8ae48": 0, "peterschutt": 0, "mainten": 0, "264": 0, "a53c598": 0, "imag": 0, "266": 0, "d0c8bfa": 0, "mdczaplicki": 0, "274": 0, "a7220f3": 0, "ai": 0, "271": 0, "946cf08": 0, "dep": 0, "e932f89": 0, "281": 0, "0c0ed22": 0, "284": 0, "285": 0, "5013069": 0, "26073c4": 0, "238": 0, "d625936": 0, "simsk": 0, "242": 0, "2b93de6": 0, "danielkatzan": 0, "261": 0, "1511c9e": 0, "gegnew": 0, "262": 0, "d355511": 0, "roeeyn": 0, "260": 0, "c686ddd": 0, "gigelu": 0, "259": 0, "9101134": 0, "reznikovroman": 0, "258": 0, "1e4df30": 0, "anthonyh209": 0, "257": 0, "c6657e7": 0, "avihai": 0, "yosef": 0, "256": 0, "97cdad2": 0, "iipin": 0, "254": 0, "9156cca": 0, "thorin": 0, "schiffer": 0, "253": 0, "02c1daa": 0, "lyz": 0, "252": 0, "e883d58": 0, "daanrademak": 0, "251": 0, "cd2e558": 0, "nguyent": 0, "250": 0, "af594e3": 0, "eltonch": 0, "249": 0, "bac2622": 0, "butch78": 0, "248": 0, "13e80a7": 0, "lindycod": 0, "247": 0, "3940de4": 0, "246": 0, "e598c7d": 0, "phbernard": 0, "245": 0, "24a7766": 0, "mciszczon": 0, "244": 0, "b8cfe1a": 0, "sondrelg": 0, "243": 0, "773b364": 0, "url": 0, "strict": 0, "241": 0, "00dce8a": 0, "reformat": 0, "aef7acb": 0, "b9ea84d": 0, "vshumilin97": 0, "237": 0, "36c2f2f": 0, "5bd544f": 0, "constant": [0, 19], "233": 0, "f2ba049": 0, "2e2f11a": 0, "9670d27": 0, "224": 0, "02a4c97": 0, "221": 0, "d753504": 0, "typeddict": [0, 2, 3, 8, 16, 17, 18, 30, 31, 33], "d671ac2": 0, "47d234b": 0, "1d5c645": 0, "md": 0, "197": 0, "f767011": 0, "sygutss": 0, "201": 0, "36ff02e": 0, "chrisbeardi": 0, "207": 0, "a62c976": 0, "postgener": [0, 5, 8, 18, 30, 32], "classmethod": [0, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 30, 32, 33, 35], "204": 0, "af36991": 0, "200": 0, "1f8d94c": 0, "60cdb30": 0, "185": 0, "8b5d903": 0, "przybylop": 0, "187": 0, "16f562f": 0, "194": 0, "cb71cd0": 0, "8097da7": 0, "contrib": 0, "placement": 0, "0814bb8": 0, "170": 0, "co": 0, "author": [0, 38], "46447321": 0, "user": [0, 3, 8, 30, 31], "norepli": 0, "com": [0, 3], "60511c9": 0, "171": 0, "3853048": 0, "173": 0, "5f111e4": 0, "ad": [0, 29, 37], "creat": [0, 2, 8, 9, 14, 15, 17, 18, 21, 30, 31], "method": [0, 5, 8, 9, 12, 13, 14, 15, 17, 18, 25, 30, 31, 33, 34, 35], "b1f83b3": 0, "improv": [0, 1], "inherit": [0, 1], "5293860": 0, "note": [0, 8, 12, 13, 14, 15, 34], "7ae2678": 0, "explain": [0, 30, 36], "how": [0, 36], "subclass": [0, 8, 9, 14, 31], "modelfactori": [0, 7, 8, 9, 10, 12, 13, 14, 15, 16, 31, 37], "your": [0, 1, 35], "218522f": 0, "91": 0, "4c2b931": 0, "brand": 0, "25570f5": 0, "banner": 0, "logo": 0, "pizza": 1, "deliveri": 1, "man": 1, "g": [1, 33, 37], "virtual": 1, "If": [1, 8, 14, 30, 35], "you": [1, 3, 30, 31, 33, 34, 35, 39], "re": [1, 33, 39], "work": [1, 2, 29, 35], "need": [1, 7, 30, 31, 33, 35], "build": [1, 2, 6, 8, 9, 14, 18, 22, 23, 30, 31, 32, 33, 34, 35, 38], "extra": [1, 35], "hook": 1, "fork": 1, "repositori": 1, "clone": 1, "git": 1, "linter": 1, "formatt": 1, "step": 1, "execut": 1, "automat": [1, 7, 8, 38], "mai": [1, 29], "want": [1, 2], "manual": 1, "fix": 1, "push": 1, "open": [1, 3], "pull": 1, "request": 1, "give": [1, 33], "descript": 1, "titl": 1, "indic": [1, 8], "what": [1, 8, 35], "ha": [1, 30, 33, 39], "correspond": 1, "For": [1, 7, 8, 9, 10, 12, 13, 14, 15, 16, 29, 30, 31, 32, 33, 39], "exampl": [1, 7, 8, 9, 10, 12, 13, 14, 15, 16, 26, 29, 30, 31, 32, 33, 34, 35, 38, 39], "bug": 1, "increas": 1, "stack": 1, "imposs": 1, "find": 1, "needl": 1, "could": [1, 33], "easier": 1, "fire": 1, "haystack": 1, "follow": [1, 29], "convent": 1, "The": [1, 2, 3, 7, 8, 14, 15, 18, 20, 25, 29, 31, 35, 36, 37, 38, 39], "locat": 1, "directori": 1, "built": [1, 22, 31], "rest": 1, "sphinx": 1, "unfamiliar": 1, "those": 1, "restructuredtext": 1, "primer": 1, "quickstart": 1, "ar": [1, 2, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 25, 29, 30, 31, 33, 34, 35, 37, 38, 39], "recommend": 1, "read": [1, 30], "we": [1, 2, 3, 9, 29, 30, 33, 34, 35, 37], "welcom": 1, "enhanc": [1, 3], "usabl": 1, "shibuya": 1, "which": [1, 2, 31, 33, 35], "come": [1, 31], "lot": 1, "out": [1, 29], "box": 1, "wish": 1, "style": 1, "static": 1, "site": 1, "should": [1, 8, 14, 23, 29, 30, 33, 35], "consult": 1, "first": [1, 30, 39], "To": [1, 30, 34, 35], "Then": 1, "can": [1, 2, 3, 7, 8, 22, 23, 25, 29, 30, 31, 33, 34, 35, 38, 39], "serv": 1, "them": 1, "content": [1, 39], "feel": 1, "free": 1, "clarifi": 1, "text": 1, "restructur": 1, "etc": [1, 30], "sure": [1, 37], "guidelin": 1, "idiomat": 1, "english": 1, "simpl": [1, 2, 3, 33], "languag": 1, "keep": 1, "self": [1, 17, 21, 30, 35], "contain": [1, 17, 19, 22, 36, 39], "applic": 1, "intersphinx": 1, "wherev": 1, "possibl": [1, 2, 33], "referenc": 1, "extern": 1, "librari": [1, 2, 3, 8, 29, 30, 31, 33, 35, 37], "diagram": 1, "mermaidj": 1, "increment": [1, 25], "pyproject": 1, "toml": 1, "semant": [1, 29, 33], "pep": 1, "In": [1, 30, 31, 33, 34, 35, 38, 39], "go": [1, 29], "tab": 1, "pick": 1, "draft": 1, "tag": 1, "both": [1, 30, 38], "vx": 1, "x": [1, 29], "fill": 1, "let": [1, 33], "do": [1, 30, 33, 35, 37], "approv": 1, "successfulli": 1, "power": [2, 3], "data": [2, 3, 8, 9, 15, 17, 20, 22, 23, 30, 33], "around": [2, 3], "struct": [2, 3, 12, 37], "pip": 2, "minim": [2, 23, 25, 30], "dataclassfactori": [2, 7, 8, 9, 10, 12, 13, 14, 15, 16, 30, 31, 32, 33, 34, 35, 37, 39], "class": [2, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25, 30, 31, 32, 33, 34, 35, 37, 38, 39], "person": [2, 30, 31, 33, 34, 35], "name": [2, 8, 14, 17, 18, 21, 30, 31, 32, 33, 34, 38], "str": [2, 8, 14, 15, 17, 18, 21, 26, 28, 30, 31, 33, 34, 35, 38, 39], "ag": [2, 30, 31, 33, 34, 39], "float": [2, 25, 28, 30, 31, 33, 34], "height": [2, 30, 31], "weight": [2, 30, 31], "personfactori": [2, 30, 31, 33, 34, 35], "def": [2, 30, 31, 32, 33, 34, 35, 38, 39], "test_is_person": [2, 31], "none": [2, 5, 7, 8, 9, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 35, 38, 39], "person_inst": [2, 30, 31, 33, 34, 35], "assert": [2, 30, 31, 32, 33, 34, 35, 38, 39], "isinst": [2, 30, 31, 33, 34, 35, 38, 39], "That": [2, 31], "almost": [2, 25], "abl": 2, "fit": 2, "definit": [2, 8, 30, 31], "inform": 2, "avail": [2, 31, 38], "sourc": [2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28], "truth": 2, "pars": 2, "store": [2, 17, 18, 30], "dictionari": [2, 8, 12, 13, 14, 15, 17, 30, 33], "kwarg": [2, 6, 7, 8, 9, 14, 18, 20, 22, 23, 25, 30, 33, 34], "constructor": [2, 25], "prior": 2, "2": [2, 29, 30, 31, 33, 38, 39], "wa": [2, 18, 29], "known": 2, "under": [2, 33], "gain": 2, "quit": 2, "bit": 2, "popular": 2, "A": [2, 3, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 38], "main": [2, 8, 29], "motiv": 2, "0": [2, 8, 29, 30, 31, 33, 38, 39], "releas": 2, "than": [2, 24, 25, 33], "just": 2, "someth": 2, "also": [2, 30, 31, 34], "architectur": 2, "As": [2, 30, 34, 37, 39], "would": [2, 3], "longer": 2, "directli": [2, 33], "ti": 2, "chosen": [2, 30], "reflect": 2, "capabl": [2, 14], "It": 2, "beani": [2, 9, 37], "odm": [2, 30], "well": [2, 30], "get": [3, 14, 15, 17, 25, 31, 33], "start": 3, "usag": [3, 33, 38], "doc": [3, 38], "blog": 3, "changelog": 3, "latest": 3, "discuss": [3, 30], "join": 3, "pose": 3, "question": 3, "share": 3, "insight": 3, "report": 3, "suggest": 3, "featur": [3, 29], "growth": 3, "commun": 3, "driven": 3, "initi": 3, "thrive": 3, "our": [3, 30, 35], "u": 3, "pursu": 3, "innov": 3, "develop": [3, 29], "continu": [3, 29], "mission": 3, "except": [3, 7, 8, 19, 30, 33], "tool": 3, "resourc": 3, "huge": 3, "thank": 3, "current": [3, 8, 22, 23, 29, 31, 32, 39], "scalar": 3, "telemetri": 3, "sport": 3, "stok": 3, "invit": 3, "individu": 3, "sponsorship": 3, "program": 3, "By": [3, 30, 38], "becom": [3, 29], "platform": 3, "like": [3, 33, 38], "polar": 3, "plai": 3, "pivot": 3, "role": 3, "On": 3, "top": 3, "regular": 3, "engag": 3, "pledg": 3, "opportun": 3, "through": 3, "an": [3, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 35, 37, 39], "amount": 3, "toward": 3, "concret": [4, 31, 35], "normal": [4, 17, 34], "3": [4, 29, 32, 38, 39], "9": 4, "post_gener": [5, 36], "descriptor": 5, "wrap": [5, 18, 30, 32, 34], "__init__": [5, 14, 15, 17, 18, 20, 21, 25, 35], "callabl": [5, 8, 12, 13, 14, 15, 18, 21, 23, 25, 26, 33, 34, 35, 38], "factoryexcept": 6, "configurationexcept": [6, 30], "misconfigur": 6, "parameterexcept": [6, 18], "paramet": [6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 31, 32, 33], "wrong": 6, "missingbuildkwargexcept": [6, 33], "missingdependencyexcept": 6, "importerror": 6, "basefactori": [7, 8, 10, 12, 14, 15, 16, 22, 23, 30, 37, 38, 39], "attribut": [7, 8, 18, 30, 31, 32, 33, 38], "rais": [7, 8, 15, 18, 30, 33], "infer": [7, 8], "__is_base_factory__": [7, 8, 9, 10, 12, 13, 14, 15, 16, 35, 38], "bool": [7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 21, 23, 25, 26, 28, 39], "true": [7, 8, 9, 10, 12, 13, 14, 15, 16, 25, 30, 35, 38], "flag": [7, 8, 9, 10, 12, 13, 14, 15, 16, 17], "dictat": [7, 8, 9, 10, 12, 13, 14, 15, 16, 25, 39], "whether": [7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 23, 25, 26, 28], "regist": [7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 21, 34], "global": [7, 8, 9, 10, 12, 13, 14, 15, 16, 33], "handler": [7, 8, 9, 10, 12, 13, 14, 15, 16, 38], "typeddictfactori": [7, 8, 9, 10, 12, 13, 14, 15, 16, 30, 31, 33, 37], "is_supported_typ": [7, 8, 9, 10, 12, 13, 14, 15, 16], "typeguard": [7, 8, 9, 10, 12, 13, 14, 15, 16], "determin": [7, 8, 9, 10, 12, 13, 14, 15, 16, 25], "given": [7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 25, 28, 30, 33], "arbitrari": [7, 8, 9, 10, 12, 13, 14, 15, 16, 18], "get_model_field": [7, 8, 10, 12, 14, 15, 16], "retriev": [7, 8, 10, 12, 14, 15, 16], "metadata": [7, 8, 10, 12, 14, 15, 16, 17, 38], "resolve_typ": 7, "buildcontext": [8, 9, 14, 22, 23], "abc": [8, 14, 37], "hold": 8, "logic": [8, 9, 30], "__check_model__": [8, 15, 30], "done": [8, 31], "against": 8, "construct": 8, "__allow_none_optionals__": [8, 15, 30], "classvar": [8, 15], "randomli": [8, 30, 33], "__sync_persistence__": [8, 30, 38], "syncpersistenceprotocol": [8, 15, 20, 30], "sync": [8, 15, 20, 30, 33], "persist": [8, 9, 15, 19], "__async_persistence__": [8, 9, 30], "asyncpersistenceprotocol": [8, 9, 15, 20, 30], "async": [8, 9, 15, 20, 30], "__set_as_default_factory_for_type__": [8, 15, 30], "instead": [8, 30, 33], "dynam": [8, 15, 30, 31], "__base_factory_overrides__": 8, "replac": 8, "__faker__": [8, 15, 30, 32], "proxi": 8, "__random__": [8, 15, 30, 32, 33], "__random_seed__": [8, 30], "int": [8, 14, 17, 18, 23, 25, 26, 28, 30, 31, 33, 34, 38, 39], "integ": [8, 25, 28], "control": [8, 30, 33, 34], "__randomize_collection_length__": [8, 15, 30, 38], "__min_collection_length__": [8, 15, 30, 38, 39], "__max_collection_length__": [8, 15, 30, 39], "5": [8, 30], "maximum": [8, 14, 17, 25, 26, 28, 39], "__use_defaults__": [8, 15, 30], "specif": 8, "__config_keys__": [8, 15, 35], "kei": [8, 15, 38], "consid": [8, 15, 25], "is_factory_typ": 8, "boolean": [8, 14, 17, 25, 28], "is_batch_factory_typ": 8, "sequenc": [8, 14, 17], "extract_field_build_paramet": 8, "build_arg": 8, "extract": 8, "meta": [8, 14, 17, 22, 23], "abstract": [8, 33, 37], "seed_random": 8, "is_ignored_typ": 8, "meant": [8, 18, 31], "overwritten": 8, "get_provider_map": [8, 12, 13, 14, 15, 35], "distinct": [8, 12, 13, 14, 15], "f": 8, "otherwis": [8, 9], "get_field_valu": [8, 9], "field_build_paramet": [8, 9, 22, 23], "build_context": [8, 9, 22, 23], "get_field_value_coverag": 8, "iter": [8, 14], "should_set_none_valu": 8, "should_use_default_valu": [8, 30], "should_set_field_valu": [8, 14], "field_nam": [8, 14], "get_factory_field": 8, "try": 8, "smart": 8, "about": [8, 17, 30], "dunder": [8, 30], "some": [8, 30, 31, 35], "parent": [8, 31], "made": [8, 14, 29], "process_kwarg": 8, "process": [8, 15, 30], "result": [8, 15, 18, 20, 22, 26, 28, 30, 33, 34], "process_kwargs_coverag": 8, "n": [8, 30], "sub": [8, 14, 31, 39], "create_sync": [8, 30, 38], "synchron": [8, 15, 20, 30], "singl": [8, 9, 15, 20, 30], "create_batch_sync": [8, 30], "create_async": [8, 30, 38], "asynchron": [8, 15, 20, 30], "create_batch_async": [8, 30], "beaniepersistencehandl": 9, "save": [9, 15, 20, 30], "mongodb": 9, "save_mani": [9, 15, 20, 30], "multipl": [9, 15, 20, 25], "cannot": [9, 30, 34, 35], "insert_mani": 9, "here": [9, 30, 38], "doesn": 9, "beaniedocumentfactori": [9, 37], "document": [9, 19, 29, 30, 37], "base_factori": 11, "dataclass_factori": [11, 30, 39], "typed_dict_factori": 11, "pydantic_factori": [11, 31, 37], "msgspec_factori": 11, "odmantic_odm_factori": 11, "beanie_odm_factori": 11, "attrs_factori": [11, 31], "sqlalchemy_factori": [11, 38], "msgspecfactori": [12, 37], "odmanticmodelfactori": [13, 37], "pydanticbuildcontext": 14, "pydanticconstraint": 14, "regard": [14, 17], "pydanticfieldmeta": 14, "modelfield": 14, "ellipsi": 14, "children": [14, 17], "from_field_info": 14, "field_info": 14, "fieldinfo": 14, "use_alia": 14, "randomize_collection_length": [14, 17], "min_collection_length": [14, 17], "max_collection_length": [14, 17], "info": 14, "from_model_field": 14, "model_field": 14, "_sphinx_paramlinks_polyfactori": 14, "number": [14, 17, 23, 25, 39], "element": [14, 17], "get_constraints_metadata": [14, 17], "instanti": 14, "is_custom_root_field": 14, "root": 14, "sqlasyncpersist": 15, "session": [15, 21, 38], "sqlafactori": 15, "sqlaasyncpersist": 15, "asyncsess": 15, "sqlalchemyfactori": [15, 37], "__set_primary_key__": 15, "primari": 15, "__set_foreign_keys__": 15, "foreign": [15, 38], "__set_relationships__": [15, 38], "relationship": [15, 38], "properti": [15, 17], "get_sqlalchemy_typ": 15, "accept": [15, 22, 23, 34], "basic": [15, 38], "pydict": 15, "serial": 15, "typeddictt": 16, "null": 17, "sentinel": 17, "empti": 17, "urlconstraint": 17, "type_arg": 17, "from_typ": 17, "builder": 17, "wrappedcal": 18, "ref": 18, "util": 18, "prevent": 18, "bind": 18, "mark": [18, 30], "time": [18, 29, 33, 37], "p": 18, "invok": [18, 33], "whenev": 18, "fn": 18, "to_valu": 18, "output": [18, 25, 30, 39], "design": [18, 29, 33], "post": [18, 32, 33], "callback": [18, 25], "section": [19, 30, 36], "packag": [19, 21, 37], "decor": [19, 21, 31, 34, 36], "pytest_plugin": [19, 34], "value_gener": [19, 22, 23, 24, 25, 26, 28], "protocol": [20, 25], "factoryfixtur": 21, "scope": [21, 33], "liter": [21, 39], "modul": [21, 37], "function": [21, 25, 29, 30, 33, 39], "autous": 21, "__call__": [21, 25], "auto": 21, "handle_collection_typ": 22, "container_typ": 22, "handle_collection_type_coverag": 22, "unresolv": 22, "handle_constrained_collect": 23, "collection_typ": 23, "item_typ": 23, "max_item": 23, "min_item": 23, "unique_item": 23, "maxim": [23, 25], "uniqu": 23, "handle_constrained_map": 23, "handle_constrained_d": 24, "ge": [24, 25], "date": [24, 30, 31, 33, 34], "gt": [24, 25], "le": [24, 25], "lt": [24, 25], "tz": 24, "tzinfo": 24, "datetim": [24, 30, 31, 32, 33, 34], "timezon": 24, "utc": 24, "fulfil": [24, 31], "expect": [24, 29, 39], "less": [24, 25], "equal": [24, 25], "greater": [24, 25], "numbergeneratorprotocol": 25, "numer": 25, "signatur": [25, 33], "almost_equal_float": 25, "value_1": 25, "value_2": 25, "delta": [25, 33], "1e": 25, "08": 25, "two": 25, "problemat": 25, "comparison": 25, "is_multiply_of_multiple_of_in_rang": 25, "multiple_of": 25, "least": 25, "one": [25, 30, 31, 33], "multipli": 25, "li": 25, "rang": [25, 33], "between": [25, 30], "passes_pydantic_multiple_valid": 25, "anoth": [25, 39], "get_incr": 25, "t_type": [25, 26], "small": 25, "entri": 25, "get_value_or_non": 25, "equal_valu": 25, "get_constrained_number_rang": 25, "primit": [25, 27], "decim": [25, 28], "generate_constrained_numb": 25, "handle_constrained_int": 25, "handle_constrained_float": 25, "validate_max_digit": 25, "max_digit": 25, "decimal_plac": 25, "digit": 25, "handle_decimal_length": 25, "generated_decim": 25, "handle_constrained_decim": 25, "handle_constrained_string_or_byt": 26, "lower_cas": [26, 28], "upper_cas": [26, 28], "min_length": [26, 28], "max_length": [26, 28], "pattern": [26, 33], "byte": [26, 28], "constr": 26, "conbyt": 26, "lowercas": [26, 28], "uppercas": [26, 28], "regex": 26, "complex_typ": 27, "constrained_collect": 27, "constrained_d": 27, "constrained_numb": 27, "constrained_str": 27, "create_random_float": 28, "create_random_integ": 28, "create_random_decim": 28, "create_random_byt": 28, "create_random_str": 28, "create_random_boolean": 28, "outlin": 29, "structur": 29, "stabil": 29, "guarante": 29, "standard": 29, "major": 29, "schema": 29, "backward": 29, "incompat": 29, "have": [29, 30, 39], "been": [29, 30], "compat": 29, "manner": 29, "bugfix": 29, "were": 29, "alpha": 29, "beta": 29, "candid": 29, "rc": 29, "release_typ": 29, "0alpha1": 29, "0beta1": 29, "0rc1": 29, "earli": 29, "preview": 29, "complet": [29, 33], "break": 29, "occur": 29, "stabl": 29, "freez": 29, "until": 29, "final": [29, 39], "suitabl": 29, "test": [29, 30], "upcom": 29, "life": 29, "seri": 29, "These": [29, 37], "period": 29, "warn": 29, "next": 29, "1": [29, 30, 33, 38, 39], "throughout": 29, "At": 29, "activ": 29, "previou": [29, 30], "special": [29, 30, 35], "drop": 29, "select": 29, "backport": 29, "older": 29, "sever": [29, 33], "feasibl": 29, "each": [29, 35, 39], "cycl": 29, "consist": [29, 33], "few": [29, 33], "phase": 29, "plan": 29, "roadmap": 29, "spec": 29, "begin": 29, "end": 29, "branch": 29, "b": 29, "progress": 29, "regress": 29, "doubl": 30, "underscor": 30, "below": [30, 31], "depth": [30, 39], "cl": [30, 32, 33, 35], "choic": [30, 33], "john": 30, "alic": 30, "georg": 30, "test_random_se": 30, "outcom": 30, "produc": 30, "affect": [30, 33], "10": 30, "test_setting_random": 30, "ident": 30, "differ": 30, "being": [30, 33], "actual": 30, "embed": 30, "insid": [30, 31], "complex": 30, "es_": 30, "test_setting_fak": 30, "spanish": 30, "alejandra": 30, "romeu": 30, "tolosa": 30, "abov": [30, 33, 34, 35, 37, 38, 39], "understand": [30, 33], "why": 30, "four": 30, "must": [30, 32, 34], "specifi": [30, 31], "asyncio": 30, "sleep": 30, "uuid": [30, 31, 33, 34, 35], "id": [30, 31, 33, 34, 35, 38], "mock_db": 30, "syncpersistencehandl": 30, "stuff": 30, "orm": [30, 38], "redi": 30, "simpli": 30, "same": [30, 31, 39], "asyncpersistencehandl": 30, "await": 30, "0001": 30, "again": 30, "test_sync_persistence_build": 30, "test_sync_persistence_batch": 30, "person_batch": 30, "test_async_persistence_build": 30, "test_async_persistence_batch": 30, "With": 30, "now": [30, 32, 33], "intervent": 30, "onc": 30, "reus": 30, "petfactori": [30, 31, 33], "speci": [30, 31, 33], "cat": [30, 31, 33], "dog": [30, 31, 33], "pet": [30, 31, 33], "sound": [30, 31, 33], "hobbi": [30, 31, 33, 34], "birthdai": [30, 31, 33, 34], "asset": [30, 31, 33], "test_dynamic_factory_gener": [30, 31], "len": [30, 31, 33, 34, 35, 39], "roxi": [30, 33], "spammi": 30, "mosh": 30, "test_default_pet_factori": 30, "owner": 30, "car": [30, 39], "ownerfactori": 30, "test_randomized_collection_length": 30, "alwai": 30, "treat": 30, "disabl": 30, "test_optional_type_ignor": 30, "trigger": 30, "test_check_factory_field": 30, "unknown_field": 30, "part": 30, "lambda": [30, 33, 35], "foo": 30, "fine": 30, "grain": 30, "effect": 30, "sinc": [30, 31], "meow": 30, "test_use_default": 30, "syntax": 31, "omit": 31, "13": 31, "export": [31, 33, 37], "Or": [31, 33, 38], "basemodel": 31, "3rd": [31, 35], "parti": [31, 35], "long": 31, "stdlib": [31, 33], "interfac": 31, "alias": [31, 34], "date_of_birth": 31, "privat": 31, "_asset": 31, "test_person_factori": [31, 34], "neither": 31, "nor": 31, "although": 31, "primarili": 31, "intern": 31, "test_imperative_factory_cr": 31, "pet_factori": 31, "pet_inst": [31, 33], "eventu": 31, "rabbit": 31, "mous": 31, "test_imperative_sub_factory_cr": 31, "cat_factori": 31, "cat_inst": 31, "usual": 32, "timedelta": [32, 33], "datetimerang": [32, 33], "to_dt": [32, 33], "from_dt": [32, 33], "default_factori": [32, 33], "datetimerangefactori": [32, 33], "time_delta": 32, "3d": 32, "test_post_gener": [32, 33], "date_range_inst": [32, 33], "dai": [32, 33], "nonetheless": 33, "cover": 33, "look": 33, "hardcod": [33, 35], "woof": 33, "test_is_pet_inst": 33, "though": 33, "often": 33, "desir": 33, "restrict": [33, 34], "ralph": 33, "test_pet_choic": 33, "mere": 33, "cleaner": 33, "simpler": 33, "fact": 33, "thu": 33, "write": 33, "so": [33, 35, 37, 38, 39], "easi": 33, "nice": 33, "access": [33, 34], "itself": [33, 34, 38], "intent": 33, "while": 33, "own": [33, 35], "attach": 33, "wai": 33, "rather": 33, "mean": 33, "test_id_is_ignor": 33, "test_id_is_requir": 33, "alreadi": 33, "most": [33, 39], "best": 33, "helper": 33, "add_timedelta": 33, "cb": 33, "themselv": 33, "test_subfactori": 33, "person_instance_with_pet_nam": 33, "winston": 33, "register_fixture_decor": 34, "nick": 34, "person_factori": 34, "overcom": 34, "separ": 34, "without": 34, "person_factory_fixtur": 34, "still": 34, "another_person_inst": 34, "aliased_person_factori": 34, "classroom": 34, "teacher": 34, "pupil": 34, "classroomfactori": 34, "ludmilla": 34, "newman": 34, "20": 34, "test_fixture_field": 34, "classroom_inst": 34, "similar": 34, "sometim": 35, "either": 35, "codebas": 35, "achiev": 35, "extend": [35, 37], "providers_map": 35, "customsecret": 35, "__repr__": 35, "__str__": 35, "secret": 35, "unknown": 35, "super": 35, "jeronimo": 35, "test_custom_secret_cr": 35, "repr": 35, "appropri": 35, "great": 35, "localis": 35, "fashion": 35, "mani": 35, "lead": 35, "unnecessari": 35, "duplic": 35, "solut": 35, "typevar": 35, "customdataclassfactori": 35, "test_custom_dataclass_base_factori": 35, "onto": 35, "addit": 37, "thei": 37, "namespac": 37, "declarativebas": 38, "mapped_column": 38, "__tablename__": 38, "primary_kei": 38, "authorfactori": 38, "test_sqla_factori": 38, "4": 38, "overridden": 38, "via": 38, "foreignkei": 38, "book": 38, "uselist": 38, "author_id": 38, "authorfactorywithrelationship": 38, "test_sqla_factory_without_relationship": 38, "yourself": 38, "__session__": 38, "create_engin": 38, "test_sqla_factory_persist": 38, "engin": 38, "sqlite": 38, "memori": 38, "create_al": 38, "customis": 38, "further": 38, "similarli": 38, "__async_session__": 38, "combin": 38, "up": 38, "back_popul": 38, "nullabl": 38, "test_custom_sqla_factori": 38, "approach": 39, "attempt": 39, "form": 39, "take": 39, "__future__": 39, "boat": 39, "can_float": 39, "profil": 39, "favourite_color": 39, "red": 39, "green": 39, "blue": 39, "vehicl": 39, "profilefactori": 39, "test_profile_coverag": 39, "largest": 39, "varianc": 39, "notic": 39, "exhaust": 39, "particular": 39, "socialgroup": 39, "member": 39, "socialgroupfactori": 39, "test_social_group_coverag": 39, "group": 39, "caus": 39, "recursionerror": 39, "exceed": 39}, "objects": {"polyfactory": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "decorators"], [6, 0, 0, "-", "exceptions"], [17, 0, 0, "-", "field_meta"], [18, 0, 0, "-", "fields"], [20, 0, 0, "-", "persistence"], [21, 0, 0, "-", "pytest_plugin"]], "polyfactory.decorators": [[5, 1, 1, "", "post_generated"]], "polyfactory.decorators.post_generated": [[5, 2, 1, "", "__init__"]], "polyfactory.exceptions": [[6, 3, 1, "", "ConfigurationException"], [6, 3, 1, "", "FactoryException"], [6, 3, 1, "", "MissingBuildKwargException"], [6, 3, 1, "", "MissingDependencyException"], [6, 3, 1, "", "ParameterException"]], "polyfactory.factories": [[7, 0, 0, "-", "attrs_factory"], [8, 0, 0, "-", "base"], [9, 0, 0, "-", "beanie_odm_factory"], [10, 0, 0, "-", "dataclass_factory"], [12, 0, 0, "-", "msgspec_factory"], [13, 0, 0, "-", "odmantic_odm_factory"], [14, 0, 0, "-", "pydantic_factory"], [15, 0, 0, "-", "sqlalchemy_factory"], [16, 0, 0, "-", "typed_dict_factory"]], "polyfactory.factories.attrs_factory": [[7, 1, 1, "", "AttrsFactory"]], "polyfactory.factories.attrs_factory.AttrsFactory": [[7, 4, 1, "", "__is_base_factory__"], [7, 4, 1, "", "__model__"], [7, 2, 1, "", "get_model_fields"], [7, 2, 1, "", "is_supported_type"], [7, 2, 1, "", "resolve_types"]], "polyfactory.factories.attrs_factory.AttrsFactory.is_supported_type.params": [[7, 5, 1, "", "value"]], "polyfactory.factories.attrs_factory.AttrsFactory.resolve_types.params": [[7, 5, 1, "", "kwargs"], [7, 5, 1, "", "model"]], "polyfactory.factories.base": [[8, 1, 1, "", "BaseFactory"], [8, 1, 1, "", "BuildContext"]], "polyfactory.factories.base.BaseFactory": [[8, 4, 1, "", "__allow_none_optionals__"], [8, 4, 1, "", "__async_persistence__"], [8, 4, 1, "", "__base_factory_overrides__"], [8, 4, 1, "", "__check_model__"], [8, 4, 1, "", "__config_keys__"], [8, 4, 1, "", "__faker__"], [8, 4, 1, "", "__is_base_factory__"], [8, 4, 1, "", "__max_collection_length__"], [8, 4, 1, "", "__min_collection_length__"], [8, 4, 1, "", "__model__"], [8, 4, 1, "", "__random__"], [8, 4, 1, "", "__random_seed__"], [8, 4, 1, "", "__randomize_collection_length__"], [8, 4, 1, "", "__set_as_default_factory_for_type__"], [8, 4, 1, "", "__sync_persistence__"], [8, 4, 1, "", "__use_defaults__"], [8, 2, 1, "", "batch"], [8, 2, 1, "", "build"], [8, 2, 1, "", "coverage"], [8, 2, 1, "", "create_async"], [8, 2, 1, "", "create_batch_async"], [8, 2, 1, "", "create_batch_sync"], [8, 2, 1, "", "create_factory"], [8, 2, 1, "", "create_sync"], [8, 2, 1, "", "extract_field_build_parameters"], [8, 2, 1, "", "get_factory_fields"], [8, 2, 1, "", "get_field_value"], [8, 2, 1, "", "get_field_value_coverage"], [8, 2, 1, "", "get_model_fields"], [8, 2, 1, "", "get_provider_map"], [8, 2, 1, "", "is_batch_factory_type"], [8, 2, 1, "", "is_factory_type"], [8, 2, 1, "", "is_ignored_type"], [8, 2, 1, "", "is_supported_type"], [8, 2, 1, "", "process_kwargs"], [8, 2, 1, "", "process_kwargs_coverage"], [8, 2, 1, "", "seed_random"], [8, 2, 1, "", "should_set_field_value"], [8, 2, 1, "", "should_set_none_value"], [8, 2, 1, "", "should_use_default_value"]], "polyfactory.factories.base.BaseFactory.batch.params": [[8, 5, 1, "", "kwargs"], [8, 5, 1, "", "size"]], "polyfactory.factories.base.BaseFactory.build.params": [[8, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.coverage.params": [[8, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.create_async.params": [[8, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.create_batch_async.params": [[8, 5, 1, "", "kwargs"], [8, 5, 1, "", "size"]], "polyfactory.factories.base.BaseFactory.create_batch_sync.params": [[8, 5, 1, "", "kwargs"], [8, 5, 1, "", "size"]], "polyfactory.factories.base.BaseFactory.create_factory.params": [[8, 5, 1, "", "bases"], [8, 5, 1, "", "kwargs"], [8, 5, 1, "", "model"]], "polyfactory.factories.base.BaseFactory.create_sync.params": [[8, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.extract_field_build_parameters.params": [[8, 5, 1, "", "build_args"], [8, 5, 1, "", "field_meta"]], "polyfactory.factories.base.BaseFactory.get_field_value.params": [[8, 5, 1, "", "build_context"], [8, 5, 1, "", "field_build_parameters"], [8, 5, 1, "", "field_meta"]], "polyfactory.factories.base.BaseFactory.get_field_value_coverage.params": [[8, 5, 1, "", "build_context"], [8, 5, 1, "", "field_build_parameters"], [8, 5, 1, "", "field_meta"]], "polyfactory.factories.base.BaseFactory.is_batch_factory_type.params": [[8, 5, 1, "", "annotation"]], "polyfactory.factories.base.BaseFactory.is_factory_type.params": [[8, 5, 1, "", "annotation"]], "polyfactory.factories.base.BaseFactory.is_ignored_type.params": [[8, 5, 1, "", "value"]], "polyfactory.factories.base.BaseFactory.is_supported_type.params": [[8, 5, 1, "", "value"]], "polyfactory.factories.base.BaseFactory.process_kwargs.params": [[8, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.process_kwargs_coverage.params": [[8, 5, 1, "", "build_context"], [8, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.seed_random.params": [[8, 5, 1, "", "seed"]], "polyfactory.factories.base.BaseFactory.should_set_field_value.params": [[8, 5, 1, "", "field_meta"], [8, 5, 1, "", "kwargs"]], "polyfactory.factories.base.BaseFactory.should_set_none_value.params": [[8, 5, 1, "", "field_meta"]], "polyfactory.factories.base.BaseFactory.should_use_default_value.params": [[8, 5, 1, "", "field_meta"]], "polyfactory.factories.beanie_odm_factory": [[9, 1, 1, "", "BeanieDocumentFactory"], [9, 1, 1, "", "BeaniePersistenceHandler"]], "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory": [[9, 4, 1, "", "__async_persistence__"], [9, 4, 1, "", "__is_base_factory__"], [9, 2, 1, "", "get_field_value"], [9, 2, 1, "", "is_supported_type"]], "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.get_field_value.params": [[9, 5, 1, "", "build_context"], [9, 5, 1, "", "field_build_parameters"], [9, 5, 1, "", "field_meta"]], "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.is_supported_type.params": [[9, 5, 1, "", "value"]], "polyfactory.factories.beanie_odm_factory.BeaniePersistenceHandler": [[9, 2, 1, "", "save"], [9, 2, 1, "", "save_many"]], "polyfactory.factories.dataclass_factory": [[10, 1, 1, "", "DataclassFactory"]], "polyfactory.factories.dataclass_factory.DataclassFactory": [[10, 4, 1, "", "__is_base_factory__"], [10, 2, 1, "", "get_model_fields"], [10, 2, 1, "", "is_supported_type"]], "polyfactory.factories.dataclass_factory.DataclassFactory.is_supported_type.params": [[10, 5, 1, "", "value"]], "polyfactory.factories.msgspec_factory": [[12, 1, 1, "", "MsgspecFactory"]], "polyfactory.factories.msgspec_factory.MsgspecFactory": [[12, 4, 1, "", "__is_base_factory__"], [12, 2, 1, "", "get_model_fields"], [12, 2, 1, "", "get_provider_map"], [12, 2, 1, "", "is_supported_type"]], "polyfactory.factories.msgspec_factory.MsgspecFactory.is_supported_type.params": [[12, 5, 1, "", "value"]], "polyfactory.factories.odmantic_odm_factory": [[13, 1, 1, "", "OdmanticModelFactory"]], "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory": [[13, 4, 1, "", "__is_base_factory__"], [13, 2, 1, "", "get_provider_map"], [13, 2, 1, "", "is_supported_type"]], "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory.is_supported_type.params": [[13, 5, 1, "", "value"]], "polyfactory.factories.pydantic_factory": [[14, 1, 1, "", "ModelFactory"], [14, 1, 1, "", "PydanticBuildContext"], [14, 1, 1, "", "PydanticConstraints"], [14, 1, 1, "", "PydanticFieldMeta"]], "polyfactory.factories.pydantic_factory.ModelFactory": [[14, 4, 1, "", "__is_base_factory__"], [14, 2, 1, "", "build"], [14, 2, 1, "", "coverage"], [14, 2, 1, "", "get_model_fields"], [14, 2, 1, "", "get_provider_map"], [14, 2, 1, "", "is_custom_root_field"], [14, 2, 1, "", "is_supported_type"], [14, 2, 1, "", "should_set_field_value"]], "polyfactory.factories.pydantic_factory.ModelFactory.build.params": [[14, 5, 1, "", "factory_use_construct"], [14, 5, 1, "", "kwargs"]], "polyfactory.factories.pydantic_factory.ModelFactory.coverage.params": [[14, 5, 1, "", "kwargs"]], "polyfactory.factories.pydantic_factory.ModelFactory.is_custom_root_field.params": [[14, 5, 1, "", "field_meta"]], "polyfactory.factories.pydantic_factory.ModelFactory.is_supported_type.params": [[14, 5, 1, "", "value"]], "polyfactory.factories.pydantic_factory.ModelFactory.should_set_field_value.params": [[14, 5, 1, "", "field_meta"], [14, 5, 1, "", "kwargs"]], "polyfactory.factories.pydantic_factory.PydanticFieldMeta": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "from_field_info"], [14, 2, 1, "", "from_model_field"], [14, 2, 1, "", "get_constraints_metadata"]], "polyfactory.factories.pydantic_factory.PydanticFieldMeta.from_field_info.params": [[14, 5, 1, "", "field_info"], [14, 5, 1, "", "field_name"], [14, 5, 1, "", "max_collection_length"], [14, 5, 1, "", "min_collection_length"], [14, 5, 1, "", "random"], [14, 5, 1, "", "randomize_collection_length"], [14, 5, 1, "", "use_alias"]], "polyfactory.factories.pydantic_factory.PydanticFieldMeta.from_model_field.params": [[14, 5, 1, "", "max_collection_length"], [14, 5, 1, "", "min_collection_length"], [14, 5, 1, "", "model_field"], [14, 5, 1, "", "random"], [14, 5, 1, "", "randomize_collection_length"], [14, 5, 1, "", "use_alias"]], "polyfactory.factories.pydantic_factory.PydanticFieldMeta.get_constraints_metadata.params": [[14, 5, 1, "", "annotation"], [14, 5, 1, "", "random"]], "polyfactory.factories.sqlalchemy_factory": [[15, 1, 1, "", "SQLAASyncPersistence"], [15, 1, 1, "", "SQLASyncPersistence"], [15, 1, 1, "", "SQLAlchemyFactory"]], "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "save"], [15, 2, 1, "", "save_many"]], "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence.save.params": [[15, 5, 1, "", "data"]], "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence.save_many.params": [[15, 5, 1, "", "data"]], "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "save"], [15, 2, 1, "", "save_many"]], "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence.save.params": [[15, 5, 1, "", "data"]], "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence.save_many.params": [[15, 5, 1, "", "data"]], "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory": [[15, 4, 1, "", "__config_keys__"], [15, 4, 1, "", "__is_base_factory__"], [15, 4, 1, "", "__set_foreign_keys__"], [15, 4, 1, "", "__set_primary_key__"], [15, 4, 1, "", "__set_relationships__"], [15, 2, 1, "", "get_model_fields"], [15, 2, 1, "", "get_provider_map"], [15, 2, 1, "", "get_sqlalchemy_types"], [15, 2, 1, "", "is_supported_type"]], "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.is_supported_type.params": [[15, 5, 1, "", "value"]], "polyfactory.factories.typed_dict_factory": [[16, 1, 1, "", "TypedDictFactory"]], "polyfactory.factories.typed_dict_factory.TypedDictFactory": [[16, 4, 1, "", "__is_base_factory__"], [16, 2, 1, "", "get_model_fields"], [16, 2, 1, "", "is_supported_type"]], "polyfactory.factories.typed_dict_factory.TypedDictFactory.is_supported_type.params": [[16, 5, 1, "", "value"]], "polyfactory.field_meta": [[17, 1, 1, "", "Constraints"], [17, 1, 1, "", "FieldMeta"], [17, 1, 1, "", "Null"], [17, 1, 1, "", "UrlConstraints"]], "polyfactory.field_meta.FieldMeta": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "from_type"], [17, 2, 1, "", "get_constraints_metadata"], [17, 6, 1, "", "type_args"]], "polyfactory.field_meta.FieldMeta.from_type.params": [[17, 5, 1, "", "annotation"], [17, 5, 1, "", "constraints"], [17, 5, 1, "", "default"], [17, 5, 1, "", "max_collection_length"], [17, 5, 1, "", "min_collection_length"], [17, 5, 1, "", "name"], [17, 5, 1, "", "random"], [17, 5, 1, "", "randomize_collection_length"]], "polyfactory.field_meta.FieldMeta.get_constraints_metadata.params": [[17, 5, 1, "", "annotation"], [17, 5, 1, "", "random"]], "polyfactory.fields": [[18, 1, 1, "", "Fixture"], [18, 1, 1, "", "Ignore"], [18, 1, 1, "", "PostGenerated"], [18, 1, 1, "", "Require"], [18, 1, 1, "", "Use"], [18, 1, 1, "", "WrappedCallable"]], "polyfactory.fields.Fixture": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "to_value"]], "polyfactory.fields.Fixture.params": [[18, 5, 1, "", "fixture"], [18, 5, 1, "", "kwargs"], [18, 5, 1, "", "size"]], "polyfactory.fields.PostGenerated": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "to_value"]], "polyfactory.fields.PostGenerated.params": [[18, 5, 1, "", "args"], [18, 5, 1, "", "fn"], [18, 5, 1, "", "kwargs"]], "polyfactory.fields.PostGenerated.to_value.params": [[18, 5, 1, "", "name"], [18, 5, 1, "", "values"]], "polyfactory.fields.Use": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "to_value"]], "polyfactory.fields.Use.params": [[18, 5, 1, "", "args"], [18, 5, 1, "", "fn"], [18, 5, 1, "", "kwargs"]], "polyfactory.persistence": [[20, 1, 1, "", "AsyncPersistenceProtocol"], [20, 1, 1, "", "SyncPersistenceProtocol"]], "polyfactory.persistence.AsyncPersistenceProtocol": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "save"], [20, 2, 1, "", "save_many"]], "polyfactory.persistence.AsyncPersistenceProtocol.save.params": [[20, 5, 1, "", "data"]], "polyfactory.persistence.AsyncPersistenceProtocol.save_many.params": [[20, 5, 1, "", "data"]], "polyfactory.persistence.SyncPersistenceProtocol": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "save"], [20, 2, 1, "", "save_many"]], "polyfactory.persistence.SyncPersistenceProtocol.save.params": [[20, 5, 1, "", "data"]], "polyfactory.persistence.SyncPersistenceProtocol.save_many.params": [[20, 5, 1, "", "data"]], "polyfactory.pytest_plugin": [[21, 1, 1, "", "FactoryFixture"], [21, 7, 1, "", "register_fixture"]], "polyfactory.pytest_plugin.FactoryFixture": [[21, 2, 1, "", "__call__"], [21, 2, 1, "", "__init__"]], "polyfactory.pytest_plugin.FactoryFixture.params": [[21, 5, 1, "", "autouse"], [21, 5, 1, "", "name"], [21, 5, 1, "", "scope"]], "polyfactory.pytest_plugin.register_fixture.params": [[21, 5, 1, "", "autouse"], [21, 5, 1, "", "factory"], [21, 5, 1, "", "name"], [21, 5, 1, "", "scope"]], "polyfactory.value_generators": [[22, 0, 0, "-", "complex_types"], [23, 0, 0, "-", "constrained_collections"], [24, 0, 0, "-", "constrained_dates"], [25, 0, 0, "-", "constrained_numbers"], [26, 0, 0, "-", "constrained_strings"], [28, 0, 0, "-", "primitives"]], "polyfactory.value_generators.complex_types": [[22, 7, 1, "", "handle_collection_type"], [22, 7, 1, "", "handle_collection_type_coverage"]], "polyfactory.value_generators.complex_types.handle_collection_type.params": [[22, 5, 1, "", "build_context"], [22, 5, 1, "", "container_type"], [22, 5, 1, "", "factory"], [22, 5, 1, "", "field_build_parameters"], [22, 5, 1, "", "field_meta"]], "polyfactory.value_generators.complex_types.handle_collection_type_coverage.params": [[22, 5, 1, "", "container_type"], [22, 5, 1, "", "factory"], [22, 5, 1, "", "field_meta"]], "polyfactory.value_generators.constrained_collections": [[23, 7, 1, "", "handle_constrained_collection"], [23, 7, 1, "", "handle_constrained_mapping"]], "polyfactory.value_generators.constrained_collections.handle_constrained_collection.params": [[23, 5, 1, "", "build_context"], [23, 5, 1, "", "collection_type"], [23, 5, 1, "", "factory"], [23, 5, 1, "", "field_build_parameters"], [23, 5, 1, "", "field_meta"], [23, 5, 1, "", "item_type"], [23, 5, 1, "", "max_items"], [23, 5, 1, "", "min_items"], [23, 5, 1, "", "unique_items"]], "polyfactory.value_generators.constrained_collections.handle_constrained_mapping.params": [[23, 5, 1, "", "build_context"], [23, 5, 1, "", "factory"], [23, 5, 1, "", "field_build_parameters"], [23, 5, 1, "", "field_meta"], [23, 5, 1, "", "max_items"], [23, 5, 1, "", "min_items"]], "polyfactory.value_generators.constrained_dates": [[24, 7, 1, "", "handle_constrained_date"]], "polyfactory.value_generators.constrained_dates.handle_constrained_date.params": [[24, 5, 1, "", "faker"], [24, 5, 1, "", "ge"], [24, 5, 1, "", "gt"], [24, 5, 1, "", "le"], [24, 5, 1, "", "lt"], [24, 5, 1, "", "tz"]], "polyfactory.value_generators.constrained_numbers": [[25, 1, 1, "", "NumberGeneratorProtocol"], [25, 7, 1, "", "almost_equal_floats"], [25, 7, 1, "", "generate_constrained_number"], [25, 7, 1, "", "get_constrained_number_range"], [25, 7, 1, "", "get_increment"], [25, 7, 1, "", "get_value_or_none"], [25, 7, 1, "", "handle_constrained_decimal"], [25, 7, 1, "", "handle_constrained_float"], [25, 7, 1, "", "handle_constrained_int"], [25, 7, 1, "", "handle_decimal_length"], [25, 7, 1, "", "is_multiply_of_multiple_of_in_range"], [25, 7, 1, "", "passes_pydantic_multiple_validator"], [25, 7, 1, "", "validate_max_digits"]], "polyfactory.value_generators.constrained_numbers.NumberGeneratorProtocol": [[25, 2, 1, "", "__call__"], [25, 2, 1, "", "__init__"]], "polyfactory.value_generators.constrained_numbers.NumberGeneratorProtocol.__call__.params": [[25, 5, 1, "", "maximum"], [25, 5, 1, "", "minimum"], [25, 5, 1, "", "random"]], "polyfactory.value_generators.constrained_numbers.almost_equal_floats.params": [[25, 5, 1, "", "delta"], [25, 5, 1, "", "value_1"], [25, 5, 1, "", "value_2"]], "polyfactory.value_generators.constrained_numbers.generate_constrained_number.params": [[25, 5, 1, "", "maximum"], [25, 5, 1, "", "method"], [25, 5, 1, "", "minimum"], [25, 5, 1, "", "multiple_of"], [25, 5, 1, "", "random"]], "polyfactory.value_generators.constrained_numbers.get_constrained_number_range.params": [[25, 5, 1, "", "ge"], [25, 5, 1, "", "gt"], [25, 5, 1, "", "le"], [25, 5, 1, "", "lt"], [25, 5, 1, "", "multiple_of"], [25, 5, 1, "", "random"], [25, 5, 1, "", "t_type"]], "polyfactory.value_generators.constrained_numbers.get_increment.params": [[25, 5, 1, "", "t_type"]], "polyfactory.value_generators.constrained_numbers.get_value_or_none.params": [[25, 5, 1, "", "constrained"], [25, 5, 1, "", "equal_value"], [25, 5, 1, "", "increment"]], "polyfactory.value_generators.constrained_numbers.handle_constrained_decimal.params": [[25, 5, 1, "", "decimal_places"], [25, 5, 1, "", "ge"], [25, 5, 1, "", "gt"], [25, 5, 1, "", "le"], [25, 5, 1, "", "lt"], [25, 5, 1, "", "max_digits"], [25, 5, 1, "", "multiple_of"], [25, 5, 1, "", "random"]], "polyfactory.value_generators.constrained_numbers.handle_constrained_float.params": [[25, 5, 1, "", "ge"], [25, 5, 1, "", "gt"], [25, 5, 1, "", "le"], [25, 5, 1, "", "lt"], [25, 5, 1, "", "multiple_of"], [25, 5, 1, "", "random"]], "polyfactory.value_generators.constrained_numbers.handle_constrained_int.params": [[25, 5, 1, "", "ge"], [25, 5, 1, "", "gt"], [25, 5, 1, "", "le"], [25, 5, 1, "", "lt"], [25, 5, 1, "", "multiple_of"], [25, 5, 1, "", "random"]], "polyfactory.value_generators.constrained_numbers.handle_decimal_length.params": [[25, 5, 1, "", "decimal_places"], [25, 5, 1, "", "generated_decimal"], [25, 5, 1, "", "max_digits"]], "polyfactory.value_generators.constrained_numbers.is_multiply_of_multiple_of_in_range.params": [[25, 5, 1, "", "maximum"], [25, 5, 1, "", "minimum"], [25, 5, 1, "", "multiple_of"]], "polyfactory.value_generators.constrained_numbers.passes_pydantic_multiple_validator.params": [[25, 5, 1, "", "multiple_of"], [25, 5, 1, "", "value"]], "polyfactory.value_generators.constrained_numbers.validate_max_digits.params": [[25, 5, 1, "", "decimal_places"], [25, 5, 1, "", "max_digits"], [25, 5, 1, "", "minimum"]], "polyfactory.value_generators.constrained_strings": [[26, 7, 1, "", "handle_constrained_string_or_bytes"]], "polyfactory.value_generators.constrained_strings.handle_constrained_string_or_bytes.params": [[26, 5, 1, "", "lower_case"], [26, 5, 1, "", "max_length"], [26, 5, 1, "", "min_length"], [26, 5, 1, "", "pattern"], [26, 5, 1, "", "random"], [26, 5, 1, "", "t_type"], [26, 5, 1, "", "upper_case"]], "polyfactory.value_generators.primitives": [[28, 7, 1, "", "create_random_boolean"], [28, 7, 1, "", "create_random_bytes"], [28, 7, 1, "", "create_random_decimal"], [28, 7, 1, "", "create_random_float"], [28, 7, 1, "", "create_random_integer"], [28, 7, 1, "", "create_random_string"]], "polyfactory.value_generators.primitives.create_random_boolean.params": [[28, 5, 1, "", "random"]], "polyfactory.value_generators.primitives.create_random_bytes.params": [[28, 5, 1, "", "lower_case"], [28, 5, 1, "", "max_length"], [28, 5, 1, "", "min_length"], [28, 5, 1, "", "random"], [28, 5, 1, "", "upper_case"]], "polyfactory.value_generators.primitives.create_random_decimal.params": [[28, 5, 1, "", "maximum"], [28, 5, 1, "", "minimum"], [28, 5, 1, "", "random"]], "polyfactory.value_generators.primitives.create_random_float.params": [[28, 5, 1, "", "maximum"], [28, 5, 1, "", "minimum"], [28, 5, 1, "", "random"]], "polyfactory.value_generators.primitives.create_random_integer.params": [[28, 5, 1, "", "maximum"], [28, 5, 1, "", "minimum"], [28, 5, 1, "", "random"]], "polyfactory.value_generators.primitives.create_random_string.params": [[28, 5, 1, "", "lower_case"], [28, 5, 1, "", "max_length"], [28, 5, 1, "", "min_length"], [28, 5, 1, "", "random"], [28, 5, 1, "", "upper_case"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:attribute", "5": "py:parameter", "6": "py:property", "7": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "parameter", "Python parameter"], "6": ["py", "property", "Python property"], "7": ["py", "function", "Python function"]}, "titleterms": {"changelog": 0, "unreleas": 0, "bug": 0, "fix": 0, "document": [0, 1], "featur": 0, "build": 0, "releas": [0, 1, 29], "v2": 0, "16": 0, "2": 0, "2024": 0, "07": 0, "09": 0, "miscellan": 0, "task": 0, "1": 0, "08": 0, "0": 0, "05": 0, "13": 0, "ci": 0, "15": 0, "03": 0, "02": 0, "refactor": 0, "test": 0, "14": 0, "01": 0, "20": 0, "19": 0, "2023": 0, "12": 0, "11": 0, "10": 0, "23": 0, "infra": 0, "9": 0, "8": 0, "26": 0, "7": 0, "meta": 0, "28": 0, "6": 0, "3": 0, "21": 0, "5": 0, "06": 0, "30": 0, "4": 0, "25": 0, "22": 0, "18": 0, "enhanc": 0, "04": 0, "0alpha1": 0, "doc": [0, 1], "contribut": 1, "set": [1, 30], "up": 1, "environ": 1, "code": 1, "workflow": 1, "project": 1, "theme": 1, "appear": 1, "run": 1, "local": 1, "write": 1, "edit": 1, "creat": [1, 35], "new": 1, "get": 2, "start": 2, "instal": 2, "exampl": 2, "relat": 2, "pydant": 2, "factori": [2, 11, 30, 31, 33, 35, 37], "sponsor": 3, "constant": 4, "decor": [5, 32], "except": 6, "attrs_factori": 7, "base_factori": 8, "beanie_odm_factori": 9, "dataclass_factori": 10, "msgspec_factori": 12, "odmantic_odm_factori": 13, "pydantic_factori": 14, "sqlalchemy_factori": 15, "typed_dict_factori": 16, "field_meta": 17, "field": [18, 30, 33, 34], "api": [19, 38], "refer": [19, 38], "articl": [19, 36], "persist": [20, 30, 38], "pytest_plugin": 21, "complex_typ": 22, "constrained_collect": 23, "constrained_d": 24, "constrained_numb": 25, "constrained_str": 26, "value_gener": 27, "primit": 28, "polyfactori": [29, 37], "version": 29, "number": 29, "pre": 29, "long": 29, "term": 29, "support": 29, "lt": 29, "deprec": 29, "polici": 29, "process": 29, "configur": [30, 38], "seed": 30, "random": 30, "faker": 30, "handler": 30, "defin": 30, "default": 30, "collect": [30, 39], "length": 30, "allow": 30, "none": 30, "option": 30, "check": 30, "us": [30, 33], "valu": 30, "declar": 31, "imper": 31, "creation": 31, "The": [32, 33, 34], "post_gener": 32, "ignor": 33, "requir": 33, "postgener": 33, "pytest": 34, "fixtur": 34, "handl": 35, "custom": 35, "type": [35, 39], "base": 35, "usag": 36, "guid": 36, "sqlalchemyfactori": 38, "ad": 38, "global": 38, "overrid": 38, "model": 39, "coverag": 39, "gener": 39, "note": 39, "known": 39, "limit": 39}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"SQLAlchemyFactory": [[38, "sqlalchemyfactory"]], "Configuration": [[38, "configuration"]], "Persistence": [[38, "persistence"]], "Adding global overrides": [[38, "adding-global-overrides"]], "API reference": [[38, "api-reference"]], "Handling Custom Types": [[35, "handling-custom-types"]], "Creating Custom Base Factories": [[35, "creating-custom-base-factories"]], "The post_generated decorator": [[32, "the-post-generated-decorator"]], "Model coverage generation": [[39, "model-coverage-generation"]], "Notes on collection types": [[39, "notes-on-collection-types"]], "Known Limitations": [[39, "known-limitations"]], "Pytest fixtures": [[34, "pytest-fixtures"]], "The Fixture Field": [[34, "the-fixture-field"]], "Polyfactory Factories": [[37, "polyfactory-factories"]], "Factory Configuration": [[30, "factory-configuration"]], "Seeding Randomness": [[30, "seeding-randomness"]], "Setting Random": [[30, "setting-random"]], "Setting Faker": [[30, "setting-faker"]], "Persistence Handlers": [[30, "persistence-handlers"]], "Defining Default Factories": [[30, "defining-default-factories"]], "Randomized Collection Length": [[30, "randomized-collection-length"]], "Allow None Optionals": [[30, "allow-none-optionals"]], "Check Factory Fields": [[30, "check-factory-fields"]], "Use Default Values": [[30, "use-default-values"]], "Declaring Factories": [[31, "declaring-factories"]], "Imperative Factory Creation": [[31, "imperative-factory-creation"]], "Factory Fields": [[33, "factory-fields"]], "The Use Field": [[33, "the-use-field"]], "The Ignore Field": [[33, "the-ignore-field"]], "The Require Field": [[33, "the-require-field"]], "The PostGenerated Field": [[33, "the-postgenerated-field"]], "Factories as Fields": [[33, "factories-as-fields"]], "Usage Guide": [[36, "usage-guide"]], "Articles": [[36, null], [19, null]], "Polyfactory Releases": [[29, "polyfactory-releases"]], "Version Numbering": [[29, "version-numbering"]], "Pre-release Versions": [[29, "pre-release-versions"]], "Long-term Support Releases (LTS)": [[29, "long-term-support-releases-lts"]], "Deprecation Policy": [[29, "deprecation-policy"]], "Supported Versions": [[29, "id1"]], "Release Process": [[29, "release-process"]], "pytest_plugin": [[21, "module-polyfactory.pytest_plugin"]], "constrained_dates": [[24, "module-polyfactory.value_generators.constrained_dates"]], "primitives": [[28, "module-polyfactory.value_generators.primitives"]], "value_generators": [[27, "value-generators"]], "persistence": [[20, "module-polyfactory.persistence"]], "constrained_collections": [[23, "module-polyfactory.value_generators.constrained_collections"]], "constrained_strings": [[26, "module-polyfactory.value_generators.constrained_strings"]], "complex_types": [[22, "module-polyfactory.value_generators.complex_types"]], "constrained_numbers": [[25, "module-polyfactory.value_generators.constrained_numbers"]], "factories": [[11, "factories"]], "msgspec_factory": [[12, "module-polyfactory.factories.msgspec_factory"]], "sqlalchemy_factory": [[15, "module-polyfactory.factories.sqlalchemy_factory"]], "typed_dict_factory": [[16, "module-polyfactory.factories.typed_dict_factory"]], "pydantic_factory": [[14, "module-polyfactory.factories.pydantic_factory"]], "odmantic_odm_factory": [[13, "module-polyfactory.factories.odmantic_odm_factory"]], "field_meta": [[17, "module-polyfactory.field_meta"]], "fields": [[18, "module-polyfactory.fields"]], "dataclass_factory": [[10, "module-polyfactory.factories.dataclass_factory"]], "API Reference": [[19, "api-reference"]], "beanie_odm_factory": [[9, "module-polyfactory.factories.beanie_odm_factory"]], "Sponsors": [[3, "sponsors"]], "Contributing": [[1, "contributing"]], "Setting up the environment": [[1, "setting-up-the-environment"]], "Code contributions": [[1, "code-contributions"]], "Workflow": [[1, "workflow"]], "Project documentation": [[1, "project-documentation"]], "Docs theme and appearance": [[1, "docs-theme-and-appearance"]], "Running the docs locally": [[1, "running-the-docs-locally"]], "Writing and editing docs": [[1, "writing-and-editing-docs"]], "Creating a new release": [[1, "creating-a-new-release"]], "Getting Started": [[2, "getting-started"]], "Installation": [[2, "installation"]], "Example": [[2, "example"]], "Relation to pydantic-factories": [[2, "relation-to-pydantic-factories"]], "Changelog": [[0, "changelog"]], "[unreleased]": [[0, "unreleased"]], "Bug Fixes": [[0, "bug-fixes"], [0, "id16"], [0, "id21"], [0, "id41"], [0, "id73"], [0, "id95"], [0, "id103"], [0, "id133"], [0, "id161"], [0, "id175"], [0, "id201"], [0, "id231"], [0, "id263"], [0, "id274"], [0, "id294"], [0, "id309"], [0, "id315"], [0, "id344"], [0, "id381"], [0, "id407"], [0, "id467"], [0, "id478"], [0, "id504"]], "Documentation": [[0, "documentation"], [0, "id26"], [0, "id49"], [0, "id77"], [0, "id107"], [0, "id166"], [0, "id179"], [0, "id209"], [0, "id239"], [0, "id269"], [0, "id279"], [0, "id297"], [0, "id323"], [0, "id334"], [0, "id368"], [0, "id385"], [0, "id410"], [0, "id458"], [0, "id470"], [0, "id481"], [0, "id492"], [0, "id506"], [0, "id519"]], "Features": [[0, "features"], [0, "id56"], [0, "id81"], [0, "id115"], [0, "id138"], [0, "id169"], [0, "id188"], [0, "id212"], [0, "id247"], [0, "id300"], [0, "id336"], [0, "id358"], [0, "id392"], [0, "id521"]], "Build": [[0, "build"]], "Release [v2.16.2] - 2024-07-09": [[0, "id14"]], "Miscellaneous Tasks": [[0, "miscellaneous-tasks"], [0, "id32"], [0, "id63"], [0, "id84"], [0, "id98"], [0, "id124"], [0, "id140"], [0, "id195"], [0, "id215"], [0, "id250"], [0, "id286"], [0, "id304"], [0, "id349"], [0, "id363"], [0, "id374"], [0, "id395"], [0, "id454"], [0, "id463"], [0, "id473"], [0, "id497"], [0, "id523"]], "Release [v2.16.1] - 2024-07-08": [[0, "id19"]], "Release [v2.16.0] - 2024-05-13": [[0, "id39"]], "Ci": [[0, "ci"], [0, "id224"]], "Release [v2.15.0] - 2024-03-02": [[0, "id71"]], "Refactor": [[0, "refactor"], [0, "id219"]], "Testing": [[0, "testing"], [0, "id254"]], "Release [v2.14.1] - 2024-01-20": [[0, "id93"]], "Release [v2.14.0] - 2024-01-19": [[0, "id101"]], "Release [v2.13.0] - 2023-12-19": [[0, "id131"]], "Release [v2.12.0] - 2023-11-13": [[0, "id159"]], "Release [v2.11.0] - 2023-10-23": [[0, "id173"]], "Release [v2.10.0] - 2023-10-16": [[0, "id199"]], "Infra": [[0, "infra"], [0, "id258"], [0, "id328"], [0, "id339"]], "Release [v2.9.0] - 2023-09-19": [[0, "id229"]], "Release [v2.8.2] - 2023-09-15": [[0, "id261"]], "Release [v2.8.1] - 2023-09-10": [[0, "id272"]], "Release [v2.8.0] - 2023-08-26": [[0, "id292"]], "Release [v2.7.2] - 2023-08-09": [[0, "id307"]], "Release [v2.7.1] - 2023-08-08": [[0, "id313"]], "Meta": [[0, "meta"]], "Release [v2.7.0] - 2023-07-28": [[0, "id332"]], "Release [v2.6.3] - 2023-07-21": [[0, "id342"]], "Release [v2.6.2] - 2023-07-14": [[0, "id356"]], "Release [v2.6.1] - 2023-07-10": [[0, "id366"]], "Release [v2.6.0] - 2023-07-09": [[0, "id372"]], "Release [v2.5.0] - 2023-06-30": [[0, "id379"]], "Release": [[0, "release"]], "Release [v2.4.0] - 2023-06-25": [[0, "id404"]], "Fix": [[0, "fix"], [0, "id488"]], "Release [v2.3.3] - 2023-06-22": [[0, "id456"]], "Release [v2.3.2] - 2023-06-18": [[0, "id461"]], "Release [v2.1.2] - 2023-05-28": [[0, "id466"]], "Release [v2.1.0] - 2023-05-06": [[0, "id477"]], "Enhancement": [[0, "enhancement"]], "Release [v2.0.1] - 2023-04-28": [[0, "id490"]], "Release [v2.0.0] - 2023-04-16": [[0, "id502"]], "Release [v2.0.0alpha1] - 2023-04-11": [[0, "id515"]], "Docs": [[0, "docs"]], "attrs_factory": [[7, "module-polyfactory.factories.attrs_factory"]], "decorators": [[5, "module-polyfactory.decorators"]], "exceptions": [[6, "module-polyfactory.exceptions"]], "constants": [[4, "constants"]], "base_factory": [[8, "module-polyfactory.factories.base"]]}, "indexentries": {"module": [[4, "module-polyfactory.constants"], [5, "module-polyfactory.decorators"], [6, "module-polyfactory.exceptions"], [7, "module-polyfactory.factories.attrs_factory"], [8, "module-polyfactory.factories.base"], [9, "module-polyfactory.factories.beanie_odm_factory"], [10, "module-polyfactory.factories.dataclass_factory"], [12, "module-polyfactory.factories.msgspec_factory"], [13, "module-polyfactory.factories.odmantic_odm_factory"], [14, "module-polyfactory.factories.pydantic_factory"], [15, "module-polyfactory.factories.sqlalchemy_factory"], [16, "module-polyfactory.factories.typed_dict_factory"], [17, "module-polyfactory.field_meta"], [18, "module-polyfactory.fields"], [20, "module-polyfactory.persistence"], [21, "module-polyfactory.pytest_plugin"], [22, "module-polyfactory.value_generators.complex_types"], [23, "module-polyfactory.value_generators.constrained_collections"], [24, "module-polyfactory.value_generators.constrained_dates"], [25, "module-polyfactory.value_generators.constrained_numbers"], [26, "module-polyfactory.value_generators.constrained_strings"], [28, "module-polyfactory.value_generators.primitives"]], "polyfactory.constants": [[4, "module-polyfactory.constants"]], "__init__() (polyfactory.decorators.post_generated method)": [[5, "polyfactory.decorators.post_generated.__init__"]], "polyfactory.decorators": [[5, "module-polyfactory.decorators"]], "post_generated (class in polyfactory.decorators)": [[5, "polyfactory.decorators.post_generated"]], "configurationexception": [[6, "polyfactory.exceptions.ConfigurationException"]], "factoryexception": [[6, "polyfactory.exceptions.FactoryException"]], "missingbuildkwargexception": [[6, "polyfactory.exceptions.MissingBuildKwargException"]], "missingdependencyexception": [[6, "polyfactory.exceptions.MissingDependencyException"]], "parameterexception": [[6, "polyfactory.exceptions.ParameterException"]], "polyfactory.exceptions": [[6, "module-polyfactory.exceptions"]], "attrsfactory (class in polyfactory.factories.attrs_factory)": [[7, "polyfactory.factories.attrs_factory.AttrsFactory"]], "__is_base_factory__ (polyfactory.factories.attrs_factory.attrsfactory attribute)": [[7, "polyfactory.factories.attrs_factory.AttrsFactory.__is_base_factory__"]], "__model__ (polyfactory.factories.attrs_factory.attrsfactory attribute)": [[7, "polyfactory.factories.attrs_factory.AttrsFactory.__model__"]], "get_model_fields() (polyfactory.factories.attrs_factory.attrsfactory class method)": [[7, "polyfactory.factories.attrs_factory.AttrsFactory.get_model_fields"]], "is_supported_type() (polyfactory.factories.attrs_factory.attrsfactory class method)": [[7, "polyfactory.factories.attrs_factory.AttrsFactory.is_supported_type"]], "polyfactory.factories.attrs_factory": [[7, "module-polyfactory.factories.attrs_factory"]], "resolve_types() (polyfactory.factories.attrs_factory.attrsfactory class method)": [[7, "polyfactory.factories.attrs_factory.AttrsFactory.resolve_types"]], "basefactory (class in polyfactory.factories.base)": [[8, "polyfactory.factories.base.BaseFactory"]], "buildcontext (class in polyfactory.factories.base)": [[8, "polyfactory.factories.base.BuildContext"]], "__allow_none_optionals__ (polyfactory.factories.base.basefactory attribute)": [[8, "polyfactory.factories.base.BaseFactory.__allow_none_optionals__"]], "__async_persistence__ (polyfactory.factories.base.basefactory attribute)": [[8, "polyfactory.factories.base.BaseFactory.__async_persistence__"]], "__base_factory_overrides__ (polyfactory.factories.base.basefactory attribute)": [[8, "polyfactory.factories.base.BaseFactory.__base_factory_overrides__"]], "__check_model__ (polyfactory.factories.base.basefactory attribute)": [[8, "polyfactory.factories.base.BaseFactory.__check_model__"]], "__config_keys__ (polyfactory.factories.base.basefactory attribute)": [[8, "polyfactory.factories.base.BaseFactory.__config_keys__"]], "__faker__ (polyfactory.factories.base.basefactory attribute)": [[8, "polyfactory.factories.base.BaseFactory.__faker__"]], "__is_base_factory__ (polyfactory.factories.base.basefactory attribute)": [[8, "polyfactory.factories.base.BaseFactory.__is_base_factory__"]], "__max_collection_length__ (polyfactory.factories.base.basefactory attribute)": [[8, "polyfactory.factories.base.BaseFactory.__max_collection_length__"]], "__min_collection_length__ (polyfactory.factories.base.basefactory attribute)": [[8, "polyfactory.factories.base.BaseFactory.__min_collection_length__"]], "__model__ (polyfactory.factories.base.basefactory attribute)": [[8, "polyfactory.factories.base.BaseFactory.__model__"]], "__random__ (polyfactory.factories.base.basefactory attribute)": [[8, "polyfactory.factories.base.BaseFactory.__random__"]], "__random_seed__ (polyfactory.factories.base.basefactory attribute)": [[8, "polyfactory.factories.base.BaseFactory.__random_seed__"]], "__randomize_collection_length__ (polyfactory.factories.base.basefactory attribute)": [[8, "polyfactory.factories.base.BaseFactory.__randomize_collection_length__"]], "__set_as_default_factory_for_type__ (polyfactory.factories.base.basefactory attribute)": [[8, "polyfactory.factories.base.BaseFactory.__set_as_default_factory_for_type__"]], "__sync_persistence__ (polyfactory.factories.base.basefactory attribute)": [[8, "polyfactory.factories.base.BaseFactory.__sync_persistence__"]], "__use_defaults__ (polyfactory.factories.base.basefactory attribute)": [[8, "polyfactory.factories.base.BaseFactory.__use_defaults__"]], "batch() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.batch"]], "build() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.build"]], "coverage() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.coverage"]], "create_async() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.create_async"]], "create_batch_async() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.create_batch_async"]], "create_batch_sync() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.create_batch_sync"]], "create_factory() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.create_factory"]], "create_sync() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.create_sync"]], "extract_field_build_parameters() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.extract_field_build_parameters"]], "get_factory_fields() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.get_factory_fields"]], "get_field_value() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.get_field_value"]], "get_field_value_coverage() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.get_field_value_coverage"]], "get_model_fields() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.get_model_fields"]], "get_provider_map() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.get_provider_map"]], "is_batch_factory_type() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.is_batch_factory_type"]], "is_factory_type() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.is_factory_type"]], "is_ignored_type() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.is_ignored_type"]], "is_supported_type() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.is_supported_type"]], "polyfactory.factories.base": [[8, "module-polyfactory.factories.base"]], "process_kwargs() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.process_kwargs"]], "process_kwargs_coverage() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.process_kwargs_coverage"]], "seed_random() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.seed_random"]], "should_set_field_value() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.should_set_field_value"]], "should_set_none_value() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.should_set_none_value"]], "should_use_default_value() (polyfactory.factories.base.basefactory class method)": [[8, "polyfactory.factories.base.BaseFactory.should_use_default_value"]], "beaniedocumentfactory (class in polyfactory.factories.beanie_odm_factory)": [[9, "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory"]], "beaniepersistencehandler (class in polyfactory.factories.beanie_odm_factory)": [[9, "polyfactory.factories.beanie_odm_factory.BeaniePersistenceHandler"]], "__async_persistence__ (polyfactory.factories.beanie_odm_factory.beaniedocumentfactory attribute)": [[9, "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.__async_persistence__"]], "__is_base_factory__ (polyfactory.factories.beanie_odm_factory.beaniedocumentfactory attribute)": [[9, "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.__is_base_factory__"]], "get_field_value() (polyfactory.factories.beanie_odm_factory.beaniedocumentfactory class method)": [[9, "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.get_field_value"]], "is_supported_type() (polyfactory.factories.beanie_odm_factory.beaniedocumentfactory class method)": [[9, "polyfactory.factories.beanie_odm_factory.BeanieDocumentFactory.is_supported_type"]], "polyfactory.factories.beanie_odm_factory": [[9, "module-polyfactory.factories.beanie_odm_factory"]], "save() (polyfactory.factories.beanie_odm_factory.beaniepersistencehandler method)": [[9, "polyfactory.factories.beanie_odm_factory.BeaniePersistenceHandler.save"]], "save_many() (polyfactory.factories.beanie_odm_factory.beaniepersistencehandler method)": [[9, "polyfactory.factories.beanie_odm_factory.BeaniePersistenceHandler.save_many"]], "dataclassfactory (class in polyfactory.factories.dataclass_factory)": [[10, "polyfactory.factories.dataclass_factory.DataclassFactory"]], "__is_base_factory__ (polyfactory.factories.dataclass_factory.dataclassfactory attribute)": [[10, "polyfactory.factories.dataclass_factory.DataclassFactory.__is_base_factory__"]], "get_model_fields() (polyfactory.factories.dataclass_factory.dataclassfactory class method)": [[10, "polyfactory.factories.dataclass_factory.DataclassFactory.get_model_fields"]], "is_supported_type() (polyfactory.factories.dataclass_factory.dataclassfactory class method)": [[10, "polyfactory.factories.dataclass_factory.DataclassFactory.is_supported_type"]], "polyfactory.factories.dataclass_factory": [[10, "module-polyfactory.factories.dataclass_factory"]], "msgspecfactory (class in polyfactory.factories.msgspec_factory)": [[12, "polyfactory.factories.msgspec_factory.MsgspecFactory"]], "__is_base_factory__ (polyfactory.factories.msgspec_factory.msgspecfactory attribute)": [[12, "polyfactory.factories.msgspec_factory.MsgspecFactory.__is_base_factory__"]], "get_model_fields() (polyfactory.factories.msgspec_factory.msgspecfactory class method)": [[12, "polyfactory.factories.msgspec_factory.MsgspecFactory.get_model_fields"]], "get_provider_map() (polyfactory.factories.msgspec_factory.msgspecfactory class method)": [[12, "polyfactory.factories.msgspec_factory.MsgspecFactory.get_provider_map"]], "is_supported_type() (polyfactory.factories.msgspec_factory.msgspecfactory class method)": [[12, "polyfactory.factories.msgspec_factory.MsgspecFactory.is_supported_type"]], "polyfactory.factories.msgspec_factory": [[12, "module-polyfactory.factories.msgspec_factory"]], "odmanticmodelfactory (class in polyfactory.factories.odmantic_odm_factory)": [[13, "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory"]], "__is_base_factory__ (polyfactory.factories.odmantic_odm_factory.odmanticmodelfactory attribute)": [[13, "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory.__is_base_factory__"]], "get_provider_map() (polyfactory.factories.odmantic_odm_factory.odmanticmodelfactory class method)": [[13, "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory.get_provider_map"]], "is_supported_type() (polyfactory.factories.odmantic_odm_factory.odmanticmodelfactory class method)": [[13, "polyfactory.factories.odmantic_odm_factory.OdmanticModelFactory.is_supported_type"]], "polyfactory.factories.odmantic_odm_factory": [[13, "module-polyfactory.factories.odmantic_odm_factory"]], "modelfactory (class in polyfactory.factories.pydantic_factory)": [[14, "polyfactory.factories.pydantic_factory.ModelFactory"]], "pydanticbuildcontext (class in polyfactory.factories.pydantic_factory)": [[14, "polyfactory.factories.pydantic_factory.PydanticBuildContext"]], "pydanticconstraints (class in polyfactory.factories.pydantic_factory)": [[14, "polyfactory.factories.pydantic_factory.PydanticConstraints"]], "pydanticfieldmeta (class in polyfactory.factories.pydantic_factory)": [[14, "polyfactory.factories.pydantic_factory.PydanticFieldMeta"]], "__init__() (polyfactory.factories.pydantic_factory.pydanticfieldmeta method)": [[14, "polyfactory.factories.pydantic_factory.PydanticFieldMeta.__init__"]], "__is_base_factory__ (polyfactory.factories.pydantic_factory.modelfactory attribute)": [[14, "polyfactory.factories.pydantic_factory.ModelFactory.__is_base_factory__"]], "build() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[14, "polyfactory.factories.pydantic_factory.ModelFactory.build"]], "coverage() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[14, "polyfactory.factories.pydantic_factory.ModelFactory.coverage"]], "from_field_info() (polyfactory.factories.pydantic_factory.pydanticfieldmeta class method)": [[14, "polyfactory.factories.pydantic_factory.PydanticFieldMeta.from_field_info"]], "from_model_field() (polyfactory.factories.pydantic_factory.pydanticfieldmeta class method)": [[14, "polyfactory.factories.pydantic_factory.PydanticFieldMeta.from_model_field"]], "get_constraints_metadata() (polyfactory.factories.pydantic_factory.pydanticfieldmeta class method)": [[14, "polyfactory.factories.pydantic_factory.PydanticFieldMeta.get_constraints_metadata"]], "get_model_fields() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[14, "polyfactory.factories.pydantic_factory.ModelFactory.get_model_fields"]], "get_provider_map() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[14, "polyfactory.factories.pydantic_factory.ModelFactory.get_provider_map"]], "is_custom_root_field() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[14, "polyfactory.factories.pydantic_factory.ModelFactory.is_custom_root_field"]], "is_supported_type() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[14, "polyfactory.factories.pydantic_factory.ModelFactory.is_supported_type"]], "polyfactory.factories.pydantic_factory": [[14, "module-polyfactory.factories.pydantic_factory"]], "should_set_field_value() (polyfactory.factories.pydantic_factory.modelfactory class method)": [[14, "polyfactory.factories.pydantic_factory.ModelFactory.should_set_field_value"]], "sqlaasyncpersistence (class in polyfactory.factories.sqlalchemy_factory)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence"]], "sqlasyncpersistence (class in polyfactory.factories.sqlalchemy_factory)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence"]], "sqlalchemyfactory (class in polyfactory.factories.sqlalchemy_factory)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory"]], "__config_keys__ (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory attribute)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.__config_keys__"]], "__init__() (polyfactory.factories.sqlalchemy_factory.sqlaasyncpersistence method)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence.__init__"]], "__init__() (polyfactory.factories.sqlalchemy_factory.sqlasyncpersistence method)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence.__init__"]], "__is_base_factory__ (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory attribute)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.__is_base_factory__"]], "__set_foreign_keys__ (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory attribute)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.__set_foreign_keys__"]], "__set_primary_key__ (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory attribute)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.__set_primary_key__"]], "__set_relationships__ (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory attribute)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.__set_relationships__"]], "get_model_fields() (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory class method)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.get_model_fields"]], "get_provider_map() (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory class method)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.get_provider_map"]], "get_sqlalchemy_types() (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory class method)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.get_sqlalchemy_types"]], "is_supported_type() (polyfactory.factories.sqlalchemy_factory.sqlalchemyfactory class method)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLAlchemyFactory.is_supported_type"]], "polyfactory.factories.sqlalchemy_factory": [[15, "module-polyfactory.factories.sqlalchemy_factory"]], "save() (polyfactory.factories.sqlalchemy_factory.sqlaasyncpersistence method)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence.save"]], "save() (polyfactory.factories.sqlalchemy_factory.sqlasyncpersistence method)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence.save"]], "save_many() (polyfactory.factories.sqlalchemy_factory.sqlaasyncpersistence method)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLAASyncPersistence.save_many"]], "save_many() (polyfactory.factories.sqlalchemy_factory.sqlasyncpersistence method)": [[15, "polyfactory.factories.sqlalchemy_factory.SQLASyncPersistence.save_many"]], "typeddictfactory (class in polyfactory.factories.typed_dict_factory)": [[16, "polyfactory.factories.typed_dict_factory.TypedDictFactory"]], "__is_base_factory__ (polyfactory.factories.typed_dict_factory.typeddictfactory attribute)": [[16, "polyfactory.factories.typed_dict_factory.TypedDictFactory.__is_base_factory__"]], "get_model_fields() (polyfactory.factories.typed_dict_factory.typeddictfactory class method)": [[16, "polyfactory.factories.typed_dict_factory.TypedDictFactory.get_model_fields"]], "is_supported_type() (polyfactory.factories.typed_dict_factory.typeddictfactory class method)": [[16, "polyfactory.factories.typed_dict_factory.TypedDictFactory.is_supported_type"]], "polyfactory.factories.typed_dict_factory": [[16, "module-polyfactory.factories.typed_dict_factory"]], "constraints (class in polyfactory.field_meta)": [[17, "polyfactory.field_meta.Constraints"]], "fieldmeta (class in polyfactory.field_meta)": [[17, "polyfactory.field_meta.FieldMeta"]], "null (class in polyfactory.field_meta)": [[17, "polyfactory.field_meta.Null"]], "urlconstraints (class in polyfactory.field_meta)": [[17, "polyfactory.field_meta.UrlConstraints"]], "__init__() (polyfactory.field_meta.fieldmeta method)": [[17, "polyfactory.field_meta.FieldMeta.__init__"]], "from_type() (polyfactory.field_meta.fieldmeta class method)": [[17, "polyfactory.field_meta.FieldMeta.from_type"]], "get_constraints_metadata() (polyfactory.field_meta.fieldmeta class method)": [[17, "polyfactory.field_meta.FieldMeta.get_constraints_metadata"]], "polyfactory.field_meta": [[17, "module-polyfactory.field_meta"]], "type_args (polyfactory.field_meta.fieldmeta property)": [[17, "polyfactory.field_meta.FieldMeta.type_args"]], "fixture (class in polyfactory.fields)": [[18, "polyfactory.fields.Fixture"]], "ignore (class in polyfactory.fields)": [[18, "polyfactory.fields.Ignore"]], "postgenerated (class in polyfactory.fields)": [[18, "polyfactory.fields.PostGenerated"]], "require (class in polyfactory.fields)": [[18, "polyfactory.fields.Require"]], "use (class in polyfactory.fields)": [[18, "polyfactory.fields.Use"]], "wrappedcallable (class in polyfactory.fields)": [[18, "polyfactory.fields.WrappedCallable"]], "__init__() (polyfactory.fields.fixture method)": [[18, "polyfactory.fields.Fixture.__init__"]], "__init__() (polyfactory.fields.postgenerated method)": [[18, "polyfactory.fields.PostGenerated.__init__"]], "__init__() (polyfactory.fields.use method)": [[18, "polyfactory.fields.Use.__init__"]], "polyfactory.fields": [[18, "module-polyfactory.fields"]], "to_value() (polyfactory.fields.fixture method)": [[18, "polyfactory.fields.Fixture.to_value"]], "to_value() (polyfactory.fields.postgenerated method)": [[18, "polyfactory.fields.PostGenerated.to_value"]], "to_value() (polyfactory.fields.use method)": [[18, "polyfactory.fields.Use.to_value"]], "asyncpersistenceprotocol (class in polyfactory.persistence)": [[20, "polyfactory.persistence.AsyncPersistenceProtocol"]], "syncpersistenceprotocol (class in polyfactory.persistence)": [[20, "polyfactory.persistence.SyncPersistenceProtocol"]], "__init__() (polyfactory.persistence.asyncpersistenceprotocol method)": [[20, "polyfactory.persistence.AsyncPersistenceProtocol.__init__"]], "__init__() (polyfactory.persistence.syncpersistenceprotocol method)": [[20, "polyfactory.persistence.SyncPersistenceProtocol.__init__"]], "polyfactory.persistence": [[20, "module-polyfactory.persistence"]], "save() (polyfactory.persistence.asyncpersistenceprotocol method)": [[20, "polyfactory.persistence.AsyncPersistenceProtocol.save"]], "save() (polyfactory.persistence.syncpersistenceprotocol method)": [[20, "polyfactory.persistence.SyncPersistenceProtocol.save"]], "save_many() (polyfactory.persistence.asyncpersistenceprotocol method)": [[20, "polyfactory.persistence.AsyncPersistenceProtocol.save_many"]], "save_many() (polyfactory.persistence.syncpersistenceprotocol method)": [[20, "polyfactory.persistence.SyncPersistenceProtocol.save_many"]], "factoryfixture (class in polyfactory.pytest_plugin)": [[21, "polyfactory.pytest_plugin.FactoryFixture"]], "__call__() (polyfactory.pytest_plugin.factoryfixture method)": [[21, "polyfactory.pytest_plugin.FactoryFixture.__call__"]], "__init__() (polyfactory.pytest_plugin.factoryfixture method)": [[21, "polyfactory.pytest_plugin.FactoryFixture.__init__"]], "polyfactory.pytest_plugin": [[21, "module-polyfactory.pytest_plugin"]], "register_fixture() (in module polyfactory.pytest_plugin)": [[21, "polyfactory.pytest_plugin.register_fixture"]], "handle_collection_type() (in module polyfactory.value_generators.complex_types)": [[22, "polyfactory.value_generators.complex_types.handle_collection_type"]], "handle_collection_type_coverage() (in module polyfactory.value_generators.complex_types)": [[22, "polyfactory.value_generators.complex_types.handle_collection_type_coverage"]], "polyfactory.value_generators.complex_types": [[22, "module-polyfactory.value_generators.complex_types"]], "handle_constrained_collection() (in module polyfactory.value_generators.constrained_collections)": [[23, "polyfactory.value_generators.constrained_collections.handle_constrained_collection"]], "handle_constrained_mapping() (in module polyfactory.value_generators.constrained_collections)": [[23, "polyfactory.value_generators.constrained_collections.handle_constrained_mapping"]], "polyfactory.value_generators.constrained_collections": [[23, "module-polyfactory.value_generators.constrained_collections"]], "handle_constrained_date() (in module polyfactory.value_generators.constrained_dates)": [[24, "polyfactory.value_generators.constrained_dates.handle_constrained_date"]], "polyfactory.value_generators.constrained_dates": [[24, "module-polyfactory.value_generators.constrained_dates"]], "numbergeneratorprotocol (class in polyfactory.value_generators.constrained_numbers)": [[25, "polyfactory.value_generators.constrained_numbers.NumberGeneratorProtocol"]], "__call__() (polyfactory.value_generators.constrained_numbers.numbergeneratorprotocol method)": [[25, "polyfactory.value_generators.constrained_numbers.NumberGeneratorProtocol.__call__"]], "__init__() (polyfactory.value_generators.constrained_numbers.numbergeneratorprotocol method)": [[25, "polyfactory.value_generators.constrained_numbers.NumberGeneratorProtocol.__init__"]], "almost_equal_floats() (in module polyfactory.value_generators.constrained_numbers)": [[25, "polyfactory.value_generators.constrained_numbers.almost_equal_floats"]], "generate_constrained_number() (in module polyfactory.value_generators.constrained_numbers)": [[25, "polyfactory.value_generators.constrained_numbers.generate_constrained_number"]], "get_constrained_number_range() (in module polyfactory.value_generators.constrained_numbers)": [[25, "polyfactory.value_generators.constrained_numbers.get_constrained_number_range"]], "get_increment() (in module polyfactory.value_generators.constrained_numbers)": [[25, "polyfactory.value_generators.constrained_numbers.get_increment"]], "get_value_or_none() (in module polyfactory.value_generators.constrained_numbers)": [[25, "polyfactory.value_generators.constrained_numbers.get_value_or_none"]], "handle_constrained_decimal() (in module polyfactory.value_generators.constrained_numbers)": [[25, "polyfactory.value_generators.constrained_numbers.handle_constrained_decimal"]], "handle_constrained_float() (in module polyfactory.value_generators.constrained_numbers)": [[25, "polyfactory.value_generators.constrained_numbers.handle_constrained_float"]], "handle_constrained_int() (in module polyfactory.value_generators.constrained_numbers)": [[25, "polyfactory.value_generators.constrained_numbers.handle_constrained_int"]], "handle_decimal_length() (in module polyfactory.value_generators.constrained_numbers)": [[25, "polyfactory.value_generators.constrained_numbers.handle_decimal_length"]], "is_multiply_of_multiple_of_in_range() (in module polyfactory.value_generators.constrained_numbers)": [[25, "polyfactory.value_generators.constrained_numbers.is_multiply_of_multiple_of_in_range"]], "passes_pydantic_multiple_validator() (in module polyfactory.value_generators.constrained_numbers)": [[25, "polyfactory.value_generators.constrained_numbers.passes_pydantic_multiple_validator"]], "polyfactory.value_generators.constrained_numbers": [[25, "module-polyfactory.value_generators.constrained_numbers"]], "validate_max_digits() (in module polyfactory.value_generators.constrained_numbers)": [[25, "polyfactory.value_generators.constrained_numbers.validate_max_digits"]], "handle_constrained_string_or_bytes() (in module polyfactory.value_generators.constrained_strings)": [[26, "polyfactory.value_generators.constrained_strings.handle_constrained_string_or_bytes"]], "polyfactory.value_generators.constrained_strings": [[26, "module-polyfactory.value_generators.constrained_strings"]], "create_random_boolean() (in module polyfactory.value_generators.primitives)": [[28, "polyfactory.value_generators.primitives.create_random_boolean"]], "create_random_bytes() (in module polyfactory.value_generators.primitives)": [[28, "polyfactory.value_generators.primitives.create_random_bytes"]], "create_random_decimal() (in module polyfactory.value_generators.primitives)": [[28, "polyfactory.value_generators.primitives.create_random_decimal"]], "create_random_float() (in module polyfactory.value_generators.primitives)": [[28, "polyfactory.value_generators.primitives.create_random_float"]], "create_random_integer() (in module polyfactory.value_generators.primitives)": [[28, "polyfactory.value_generators.primitives.create_random_integer"]], "create_random_string() (in module polyfactory.value_generators.primitives)": [[28, "polyfactory.value_generators.primitives.create_random_string"]], "polyfactory.value_generators.primitives": [[28, "module-polyfactory.value_generators.primitives"]]}})